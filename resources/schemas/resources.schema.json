{
  "$schema": "http://json-schema.org/schema",
  "$comment": "Understanding JSON Schema: https://json-schema.org/understanding-json-schema/UnderstandingJSONSchema.pdf / Inspiration: https://github.com/pyvideo/data/blob/main/writethedocs-na-2018/videos/audience-market-product-bob-watson-write-the-docs-portland-2018.json",
  "definitions": {
    "level": {
      "type": "string",
      "enum": [
        "Beginner",
        "Intermediate",
        "Advanced"
      ]
    },
    "type": {
      "type": "string",
      "enum": [
        "Audio",
        "Blog Post",
        "Coursera Course",
        "edX Course",
        "Interactive Tutorial",
        "MDN",
        "Podcast",
        "Quora",
        "StackOverflow",
        "Tool",
        "Udacity Course",
        "Video",
        "Web Page",
        "YouTube Playlist",
        "YouTube",
        "VSCode Extension"
      ]
    },
    "languages": {
      "$comment": "TODO: Add list of 2 character ISO country codes as enum",
      "type": "string",
      "enum": [
        "EN",
        "BG",
        "EL",
        "FR"
      ]
    },
    "terms": {
      "$ref": "terms.json#/terms"
    },
    "prerequisites": {
      "type": "string",
      "$comment": "[WiP] Should include a referenced list of technologies or concepts that are prerequisites for the resource, e.g. React, Redux, React-Redux, Lodash, etc. Type should be an Array or Enum NOT a string"
    }
  },
  "type": "object",
  "properties": {
    "resources": {
      "type": "object",
      "propertyNames": {
        "pattern": "^[a-z0-9\\-]+$"
      },
      "additionalProperties": {
        "type": "object",
        "$comment": "The Dublin Core Metadata Element Set is an ISO Standard (ISO 15836) well known in the Web and library worlds as a cross domain standard that defines 15 data elements for resource description. Spec: https://www.dublincore.org/specifications/dublin-core/usageguide/elements/. More about the properties: https://guides.library.ucsc.edu/c.php?g=618773&p=4306386. Video: https://www.youtube.com/watch?v=5HJVfp5c0kE. RFC: https://www.ietf.org/rfc/rfc5013.txt",
        "properties": {
          "copyright_text": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "creator": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "publisher": {
            "type": "string"
          },
          "contributors": {
            "type": "array"
          },
          "date": {
            "$comment": "This is the creation date",
            "type": "string",
            "pattern": "^(0[1-9]|[1-2][0-9]|3[0-1])/(0[1-9]|1[0-2])/\\d{4}$"
          },
          "date_of_last_update": {
            "type": "string",
            "pattern": "^(0[1-9]|[1-2][0-9]|3[0-1])/(0[1-9]|1[0-2])/\\d{4}$"
          },
          "type": {
            "$ref": "#/definitions/type"
          },
          "format": {
            "type": "string",
            "$comment": "MIME Types: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types. Word Documents are application/msword. Docx are application/vnd.openxmlformats-officedocument.wordprocessingml.document",
            "enum": [
              "application/msword",
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
              "audio/aac",
              "text/css",
              "text/csv",
              "text/html",
              "image/jpeg",
              "image/gif",
              "text/javascript",
              "application/json",
              "audio/mpeg",
              "video/mp4",
              "video/mpeg",
              "audio/ogg",
              "video/ogg",
              "image/png",
              "application/pdf",
              "application/vnd.ms-powerpoint",
              "application/vnd.openxmlformats-officedocument.presentationml.presentation",
              "application/rtf",
              "text/plain",
              "image/webp",
              "video/webm",
              "application/xml",
              "application/zip"
            ]
          },
          "download": {
            "type": "string"
          },
          "size": {
            "type": "number",
            "$comment": "Size in bytes"
          },
          "duration": {
            "type": "number",
            "$comment": "Duration in seconds"
          },
          "identifier": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "module": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "language": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "en",
                "de",
                "it",
                "ar",
                "fr",
                "gr"
              ]
            }
          },
          "relation": {
            "type": "string"
          },
          "coverage": {
            "type": "string"
          },
          "rights": {
            "type": "string",
            "enum": [
              "CC",
              "MIT",
              "GPL v3",
              "All Rights Reserved",
              "Standard YouTube License"
            ]
          },
          "level": {
            "$ref": "#/definitions/level"
          },
          "meta": {
            "type": "object"
          },
          "vid": {
            "type": "string"
          },
          "captions": {
            "type": "boolean"
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/terms"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "concepts": {
            "$comment": "Concepts can either be a string or an array if it's a pair of Q&A",
            "type": "array",
            "items": {
              "type": [
                "string",
                "array"
              ]
            }
          },
          "partials": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "youtube_embed": {
                  "type": "string"
                },
                "start": {
                  "type": "number"
                },
                "end": {
                  "type": "number"
                },
                "label": {
                  "type": "string"
                }
              }
            }
          },
          "speakers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "related_urls": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          },
          "transcripts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "URL": {
                  "type": "string"
                },
                "language": {
                  "$ref": "#/definitions/languages"
                }
              }
            }
          },
          "youtube": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^(.{11})$"
              },
              "captions": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/languages"
                }
              },
              "channel_id": {
                "type": "string"
              },
              "channel_title": {
                "type": "string"
              },
              "playlist_id": {
                "type": "string"
              },
              "playlist_index": {
                "type": "number"
              },
              "playlist_title": {
                "type": "string"
              },
              "thumbnail_url": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "reviewers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "github": {
                  "type": "string"
                },
                "rating": {
                  "type": "number",
                  "enum": [
                    0,
                    0.2,
                    0.4,
                    0.6,
                    0.8,
                    1
                  ]
                },
                "review": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "type"
        ],
        "dependencies": {
          "type": {
            "oneOf": [
              {
                "properties": {
                  "type": {
                    "const": "YouTube"
                  }
                },
                "required": [
                  "youtube"
                ]
              },
              {
                "properties": {
                  "type": {
                    "const": "Podcast"
                  }
                },
                "required": [
                  "transcripts",
                  "download",
                  "publisher"
                ]
              },
              {
                "properties": {
                  "type": {
                    "not": {
                      "enum": [
                        "YouTube",
                        "Podcast"
                      ]
                    }
                  }
                }
              }
            ]
          }
        },
        "additionalProperties": false
      }
    },
    "creators": {}
  },
  "required": [
    "resources",
    "creators"
  ]
}