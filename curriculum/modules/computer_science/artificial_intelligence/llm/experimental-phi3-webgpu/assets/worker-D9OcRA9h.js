var qx=Object.defineProperty;var jx=(Ve,cr,Ir)=>cr in Ve?qx(Ve,cr,{enumerable:!0,configurable:!0,writable:!0,value:Ir}):Ve[cr]=Ir;var W=(Ve,cr,Ir)=>(jx(Ve,typeof cr!="symbol"?cr+"":cr,Ir),Ir);(function(){"use strict";var xg;var Ve={},cr=Object.freeze({__proto__:null,default:Ve});const Ir="3.0.0-alpha.0",Ia=typeof self<"u",t0=Ia&&self.constructor.name==="DedicatedWorkerGlobalScope",Yo=Ia&&"caches"in self,r0=typeof navigator<"u"&&"gpu"in navigator,Qo=typeof process<"u",n0=Qo&&((xg=process==null?void 0:process.release)==null?void 0:xg.name)==="node",Aa=!eu(Ve),Xo=!eu(Ve),Ar=Object.freeze({IS_BROWSER_ENV:Ia,IS_WEBWORKER_ENV:t0,IS_WEB_CACHE_AVAILABLE:Yo,IS_WEBGPU_AVAILABLE:r0,IS_PROCESS_AVAILABLE:Qo,IS_NODE_ENV:n0,IS_FS_AVAILABLE:Aa,IS_PATH_AVAILABLE:Xo}),Qi=Aa&&Xo,Jo=Qi?Ve.dirname(Ve.dirname(Ve.fileURLToPath(self.location.href))):"./",a0=Qi?Ve.join(Jo,"/.cache/"):null,Zo="/models/",i0=Qi?Ve.join(Jo,Zo):Zo,Ct={version:Ir,backends:{onnx:{},tfjs:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!Ia,localModelPath:i0,useFS:Aa,useBrowserCache:Yo,useFSCache:Aa,cacheDir:a0,useCustomCache:!1,customCache:null};function eu(t){return Object.keys(t).length===0}const Tt=class{constructor(){let t=function(...e){return t._call(...e)};return Object.setPrototypeOf(t,new.target.prototype)}_call(...t){throw Error("Must implement _call method in subclass")}};function In(t,e){t&&t(e)}function s0(t){return Object.fromEntries(Object.entries(t).map(([e,r])=>[r,e]))}function tu(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function o0(t){return Number.isInteger(t)||typeof t=="bigint"}function it(...t){return Array.prototype.concat.apply([],t)}function Or(t,e){return Object.assign({},...e.map(r=>{if(t[r]!==void 0)return{[r]:t[r]}}))}var pr={};class Oa{constructor(e){W(this,"_CONTENT_TYPE_MAP",{txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"});if(this.filePath=e,this.headers=new Headers,this.exists=Ve.existsSync(e),this.exists){this.status=200,this.statusText="OK";let r=Ve.statSync(e);this.headers.set("content-length",r.size.toString()),this.updateContentType();let n=this;this.body=new ReadableStream({start(a){n.arrayBuffer().then(s=>{a.enqueue(new Uint8Array(s)),a.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",this._CONTENT_TYPE_MAP[e]??"application/octet-stream")}clone(){let e=new Oa(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await Ve.promises.readFile(this.filePath)).buffer}async blob(){const e=await Ve.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await Ve.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function Xi(t,e=null){let r;try{r=new URL(t)}catch{return!1}return e&&!e.includes(r.hostname)?!1:r.protocol==="http:"||r.protocol==="https:"}async function ru(t){var e;if(Ct.useFS&&!Xi(t))return new Oa(t);if(typeof process<"u"&&((e=process==null?void 0:process.release)==null?void 0:e.name)==="node"){const r=!!(pr!=null&&pr.TESTING_REMOTELY),n=Ct.version,a=new Headers;if(a.set("User-Agent",`transformers.js/${n}; is_ci/${r};`),Xi(t,["huggingface.co","hf.co"])){const i=(pr==null?void 0:pr.HF_TOKEN)??(pr==null?void 0:pr.HF_ACCESS_TOKEN);i&&a.set("Authorization",`Bearer ${i}`)}return fetch(t,{headers:a})}else return fetch(t)}const u0={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function l0(t,e,r){if(!r)return null;const n=u0[t]??`Error (${t}) occurred while trying to load file`;throw Error(`${n}: "${e}".`)}class nu{constructor(e){this.path=e}async match(e){let r=Ve.join(this.path,e),n=new Oa(r);if(n.exists)return n}async put(e,r){const n=Buffer.from(await r.arrayBuffer());let a=Ve.join(this.path,e);try{await Ve.promises.mkdir(Ve.dirname(a),{recursive:!0}),await Ve.promises.writeFile(a,n)}catch(s){console.warn("An error occurred while writing the file to cache:",s)}}}async function d0(t,...e){for(let r of e)try{let n=await t.match(r);if(n)return n}catch{continue}}async function Ma(t,e,r=!0,n={}){if(!Ct.allowLocalModels&&n.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");In(n.progress_callback,{status:"initiate",name:t,file:e});let a;if(!a&&Ct.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{a=await caches.open("transformers-cache")}catch(E){console.warn("An error occurred while opening the browser cache:",E)}}if(!a&&Ct.useFSCache&&(a=new nu(n.cache_dir??Ct.cacheDir)),!a&&Ct.useCustomCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");const s=n.revision??"main";let i=za(t,e),o=za(Ct.localModelPath,i),l=za(Ct.remoteHost,Ct.remotePathTemplate.replaceAll("{model}",t).replaceAll("{revision}",encodeURIComponent(s)),e),d=s==="main"?i:za(t,s,e),c,f=a instanceof nu?d:l,g=!1,y;a&&(y=await d0(a,o,f));const p=y!==void 0;if(y===void 0){if(Ct.allowLocalModels)if(Xi(i)){if(n.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${i}.`)}else try{y=await ru(o),c=o}catch(k){console.warn(`Unable to load from local path "${o}": "${k}"`)}if(y===void 0||y.status===404){if(n.local_files_only||!Ct.allowRemoteModels){if(r)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${o}".`);return null}if(y=await ru(l),y.status!==200)return l0(y.status,l,r);c=f}g=a&&typeof Response<"u"&&y instanceof Response&&y.status===200}In(n.progress_callback,{status:"download",name:t,file:e});const v={status:"progress",name:t,file:e};let S;return n.progress_callback?p&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(S=new Uint8Array(await y.arrayBuffer()),In(n.progress_callback,{...v,progress:100,loaded:S.length,total:S.length})):S=await c0(y,E=>{In(n.progress_callback,{...v,...E})}):S=new Uint8Array(await y.arrayBuffer()),g&&c&&await a.match(c)===void 0&&await a.put(c,new Response(S,{headers:y.headers})).catch(E=>{console.warn(`Unable to add response to browser cache: ${E}.`)}),In(n.progress_callback,{status:"done",name:t,file:e}),S}async function Mr(t,e,r=!0,n={}){let a=await Ma(t,e,r,n);if(a===null)return{};let i=new TextDecoder("utf-8").decode(a);return JSON.parse(i)}async function c0(t,e){const r=t.headers.get("Content-Length");r===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let n=parseInt(r??"0"),a=new Uint8Array(n),s=0;const i=t.body.getReader();async function o(){const{done:l,value:d}=await i.read();if(l)return;let c=s+d.length;if(c>n){n=c;let g=new Uint8Array(n);g.set(a),a=g}a.set(d,s),s=c;const f=s/n*100;return e({progress:f,loaded:s,total:n}),o()}return await o(),a}function za(...t){return t=t.map((e,r)=>(r&&(e=e.replace(new RegExp("^/"),"")),r!==t.length-1&&(e=e.replace(new RegExp("/$"),"")),e)),t.join("/")}function p0(t,e,r){const n=new Array(r.length),a=new Array(r.length);for(let o=r.length-1,l=1;o>=0;--o)a[o]=l,n[o]=e[r[o]],l*=n[o];const s=r.map((o,l)=>a[r.indexOf(l)]),i=new t.constructor(t.length);for(let o=0;o<t.length;++o){let l=0;for(let d=e.length-1,c=o;d>=0;--d)l+=c%e[d]*s[d],c=Math.floor(c/e[d]);i[l]=t[o]}return[i,n]}function au(t){const e=Ji(t)[0],r=t.map(s=>Math.exp(s-e)),n=r.reduce((s,i)=>s+i,0);return r.map(s=>s/n)}function iu(t,e=0){return t=Array.from(t).map((r,n)=>[n,r]).sort((r,n)=>n[1]-r[1]),e!==null&&e>0&&(t=t.slice(0,e)),t}function h0(t){if(t.length===0)throw Error("Array must not be empty");let e=t[0],r=0;for(let n=1;n<t.length;++n)t[n]<e&&(e=t[n],r=n);return[e,r]}function Ji(t){if(t.length===0)throw Error("Array must not be empty");let e=t[0],r=0;for(let n=1;n<t.length;++n)t[n]>e&&(e=t[n],r=n);return[Number(e),r]}function f0(t,e){if(e%2===0||e<=0)throw new Error("Window size must be a positive odd number");const r=new t.constructor(t.length),n=new t.constructor(e),a=Math.floor(e/2);for(let s=0;s<t.length;++s){let i=0;for(let o=-a;o<=a;++o){let l=s+o;l<0?l=Math.abs(l):l>=t.length&&(l=2*(t.length-1)-l),n[i++]=t[l]}n.sort(),r[s]=n[a]}return r}function Ra(t,e){const r=Math.pow(10,e);return Math.round(t*r)/r}/*!
 * ONNX Runtime Web v1.19.0-dev.20240509-69cfcba38a
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var Zi=Object.defineProperty,m0=Object.getOwnPropertyDescriptor,g0=Object.getOwnPropertyNames,_0=Object.prototype.hasOwnProperty,X=(t,e)=>()=>(t&&(e=t(t=0)),e),rn=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),nn=(t,e)=>{for(var r in e)Zi(t,r,{get:e[r],enumerable:!0})},y0=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of g0(e))!_0.call(t,a)&&a!==r&&Zi(t,a,{get:()=>e[a],enumerable:!(n=m0(e,a))||n.enumerable});return t},zr=t=>y0(Zi({},"__esModule",{value:!0}),t),An,vr,Rr,su,es,ts=X(()=>{An=new Map,vr=[],Rr=(t,e,r)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let n=An.get(t);if(n===void 0)An.set(t,{backend:e,priority:r});else{if(n.priority>r)return;if(n.priority===r&&n.backend!==e)throw new Error(`cannot register backend "${t}" using priority ${r}`)}if(r>=0){let a=vr.indexOf(t);a!==-1&&vr.splice(a,1);for(let s=0;s<vr.length;s++)if(An.get(vr[s]).priority<=r){vr.splice(s,0,t);return}vr.push(t)}return}throw new TypeError("not a valid backend")},su=async t=>{let e=An.get(t);if(!e)return"backend not found.";if(e.initialized)return e.backend;if(e.aborted)return e.error;{let r=!!e.initPromise;try{return r||(e.initPromise=e.backend.init(t)),await e.initPromise,e.initialized=!0,e.backend}catch(n){return r||(e.error=`${n}`,e.aborted=!0),e.error}finally{delete e.initPromise}}},es=async t=>{let e=t.executionProviders||[],r=e.map(l=>typeof l=="string"?l:l.name),n=r.length===0?vr:r,a,s=[],i=new Set;for(let l of n){let d=await su(l);typeof d=="string"?s.push({name:l,err:d}):(a||(a=d),a===d&&i.add(l))}if(!a)throw new Error(`no available backend found. ERR: ${s.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:d}of s)r.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${d}`);let o=e.filter(l=>i.has(typeof l=="string"?l:l.name));return[a,new Proxy(t,{get:(l,d)=>d==="executionProviders"?o:Reflect.get(l,d)})]}}),w0=X(()=>{ts()}),ou,b0=X(()=>{ou="1.18.0-dev.20240424-218b6b0a73"}),rs,Bt,uu=X(()=>{b0(),rs="warning",Bt={wasm:{},webgl:{},webgpu:{},versions:{common:ou},set logLevel(t){if(t!==void 0){if(typeof t!="string"||["verbose","info","warning","error","fatal"].indexOf(t)===-1)throw new Error(`Unsupported logging level: ${t}`);rs=t}},get logLevel(){return rs}},Object.defineProperty(Bt,"logLevel",{enumerable:!0})}),Ue,v0=X(()=>{uu(),Ue=Bt}),lu,du,$0=X(()=>{lu=(t,e)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=t.dims[3],r.height=t.dims[2];let n=r.getContext("2d");if(n!=null){let a,s;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(a=t.dims[2],s=t.dims[3]):(a=t.dims[3],s=t.dims[2]);let i=(e==null?void 0:e.format)!==void 0?e.format:"RGB",o=e==null?void 0:e.norm,l,d;o===void 0||o.mean===void 0?l=[255,255,255,255]:typeof o.mean=="number"?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],o.mean[3]!==void 0&&(l[3]=o.mean[3])),o===void 0||o.bias===void 0?d=[0,0,0,0]:typeof o.bias=="number"?d=[o.bias,o.bias,o.bias,o.bias]:(d=[o.bias[0],o.bias[1],o.bias[2],0],o.bias[3]!==void 0&&(d[3]=o.bias[3]));let c=s*a,f=0,g=c,y=c*2,p=-1;i==="RGBA"?(f=0,g=c,y=c*2,p=c*3):i==="RGB"?(f=0,g=c,y=c*2):i==="RBG"&&(f=0,y=c,g=c*2);for(let v=0;v<s;v++)for(let S=0;S<a;S++){let E=(t.data[f++]-d[0])*l[0],k=(t.data[g++]-d[1])*l[1],O=(t.data[y++]-d[2])*l[2],I=p===-1?255:(t.data[p++]-d[3])*l[3];n.fillStyle="rgba("+E+","+k+","+O+","+I+")",n.fillRect(S,v,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},du=(t,e)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),n;if(r!=null){let a,s,i;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(a=t.dims[2],s=t.dims[1],i=t.dims[3]):(a=t.dims[3],s=t.dims[2],i=t.dims[1]);let o=e!==void 0&&e.format!==void 0?e.format:"RGB",l=e==null?void 0:e.norm,d,c;l===void 0||l.mean===void 0?d=[255,255,255,255]:typeof l.mean=="number"?d=[l.mean,l.mean,l.mean,l.mean]:(d=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(d[3]=l.mean[3])),l===void 0||l.bias===void 0?c=[0,0,0,0]:typeof l.bias=="number"?c=[l.bias,l.bias,l.bias,l.bias]:(c=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(c[3]=l.bias[3]));let f=s*a;if(e!==void 0&&(e.format!==void 0&&i===4&&e.format!=="RGBA"||i===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let g=4,y=0,p=1,v=2,S=3,E=0,k=f,O=f*2,I=-1;o==="RGBA"?(E=0,k=f,O=f*2,I=f*3):o==="RGB"?(E=0,k=f,O=f*2):o==="RBG"&&(E=0,O=f,k=f*2),n=r.createImageData(a,s);for(let T=0;T<s*a;y+=g,p+=g,v+=g,S+=g,T++)n.data[y]=(t.data[E++]-c[0])*d[0],n.data[p]=(t.data[k++]-c[1])*d[1],n.data[v]=(t.data[O++]-c[2])*d[2],n.data[S]=I===-1?255:(t.data[I++]-c[3])*d[3]}else throw new Error("Can not access image data");return n}}),Pa,cu,pu,hu,fu,x0=X(()=>{as(),Pa=(t,e)=>{if(t===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:n}=e,a=e.norm??{mean:255,bias:0},s,i;typeof a.mean=="number"?s=[a.mean,a.mean,a.mean,a.mean]:s=[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],typeof a.bias=="number"?i=[a.bias,a.bias,a.bias,a.bias]:i=[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];let o=e.format!==void 0?e.format:"RGBA",l=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",d=r*n,c=l==="RGBA"?new Float32Array(d*4):new Float32Array(d*3),f=4,g=0,y=1,p=2,v=3,S=0,E=d,k=d*2,O=-1;o==="RGB"&&(f=3,g=0,y=1,p=2,v=-1),l==="RGBA"?O=d*3:l==="RBG"?(S=0,k=d,E=d*2):l==="BGR"&&(k=0,E=d,S=d*2);for(let I=0;I<d;I++,g+=f,p+=f,y+=f,v+=f)c[S++]=(t[g]+i[0])/s[0],c[E++]=(t[y]+i[1])/s[1],c[k++]=(t[p]+i[2])/s[2],O!==-1&&v!==-1&&(c[O++]=(t[v]+i[3])/s[3]);return l==="RGBA"?new Ut("float32",c,[1,4,r,n]):new Ut("float32",c,[1,3,r,n])},cu=async(t,e)=>{let r=typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement,n=typeof ImageData<"u"&&t instanceof ImageData,a=typeof ImageBitmap<"u"&&t instanceof ImageBitmap,s=typeof t=="string",i,o=e??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},d=c=>c instanceof HTMLCanvasElement||c instanceof OffscreenCanvas?c.getContext("2d"):null;if(r){let c=l();c.width=t.width,c.height=t.height;let f=d(c);if(f!=null){let g=t.height,y=t.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(g=e.resizedHeight,y=e.resizedWidth),e!==void 0){if(o=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=g,o.width=y}else o.tensorFormat="RGBA",o.height=g,o.width=y;f.drawImage(t,0,0),i=f.getImageData(0,0,y,g).data}else throw new Error("Can not access image data")}else if(n){let c,f;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(c=e.resizedHeight,f=e.resizedWidth):(c=t.height,f=t.width),e!==void 0&&(o=e),o.format="RGBA",o.height=c,o.width=f,e!==void 0){let g=l();g.width=f,g.height=c;let y=d(g);if(y!=null)y.putImageData(t,0,0),i=y.getImageData(0,0,f,c).data;else throw new Error("Can not access image data")}else i=t.data}else if(a){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let c=l();c.width=t.width,c.height=t.height;let f=d(c);if(f!=null){let g=t.height,y=t.width;return f.drawImage(t,0,0,y,g),i=f.getImageData(0,0,y,g).data,o.height=g,o.width=y,Pa(i,o)}else throw new Error("Can not access image data")}else{if(s)return new Promise((c,f)=>{let g=l(),y=d(g);if(!t||!y)return f();let p=new Image;p.crossOrigin="Anonymous",p.src=t,p.onload=()=>{g.width=p.width,g.height=p.height,y.drawImage(p,0,0,g.width,g.height);let v=y.getImageData(0,0,g.width,g.height);o.height=g.height,o.width=g.width,c(Pa(v.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return Pa(i,o);throw new Error("Input data provided is not supported - aborted tensor creation")},pu=(t,e)=>{let{width:r,height:n,download:a,dispose:s}=e,i=[1,n,r,4];return new Ut({location:"texture",type:"float32",texture:t,dims:i,download:a,dispose:s})},hu=(t,e)=>{let{dataType:r,dims:n,download:a,dispose:s}=e;return new Ut({location:"gpu-buffer",type:r??"float32",gpuBuffer:t,dims:n,download:a,dispose:s})},fu=(t,e,r)=>new Ut({location:"cpu-pinned",type:t,data:e,dims:r??[e.length]})}),Pr,On,ns,mu,S0=X(()=>{Pr=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),On=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),ns=!1,mu=()=>{if(!ns){ns=!0;let t=typeof BigInt64Array<"u"&&BigInt64Array.from,e=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;t&&(Pr.set("int64",BigInt64Array),On.set(BigInt64Array,"int64")),e&&(Pr.set("uint64",BigUint64Array),On.set(BigUint64Array,"uint64")),r?(Pr.set("float16",Float16Array),On.set(Float16Array,"float16")):Pr.set("float16",Uint16Array)}}}),gu,_u,k0=X(()=>{as(),gu=t=>{let e=1;for(let r=0;r<t.length;r++){let n=t[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);e*=n}return e},_u=(t,e)=>{switch(t.location){case"cpu":return new Ut(t.type,t.data,e);case"cpu-pinned":return new Ut({location:"cpu-pinned",data:t.data,type:t.type,dims:e});case"texture":return new Ut({location:"texture",texture:t.texture,type:t.type,dims:e});case"gpu-buffer":return new Ut({location:"gpu-buffer",gpuBuffer:t.gpuBuffer,type:t.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${t.location} is not supported`)}}}),Ut,as=X(()=>{$0(),x0(),S0(),k0(),Ut=class{constructor(t,e,r){mu();let n,a;if(typeof t=="object"&&"location"in t)switch(this.dataLocation=t.location,n=t.type,a=t.dims,t.location){case"cpu-pinned":{let i=Pr.get(n);if(!i)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(t.data instanceof i))throw new TypeError(`buffer should be of type ${i.name}`);this.cpuData=t.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,o;if(typeof t=="string")if(n=t,o=r,t==="string"){if(!Array.isArray(e))throw new TypeError("A string tensor's data must be a string array.");i=e}else{let l=Pr.get(t);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(e)){if(t==="float16"&&l===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");t==="uint64"||t==="int64"?i=l.from(e,BigInt):i=l.from(e)}else if(e instanceof l)i=e;else throw new TypeError(`A ${n} tensor's data must be type of ${l}`)}else if(o=e,Array.isArray(t)){if(t.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof t[0];if(l==="string")n="string",i=t;else if(l==="boolean")n="bool",i=Uint8Array.from(t);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=On.get(t.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${t.constructor}.`);n=l,i=t}if(o===void 0)o=[i.length];else if(!Array.isArray(o))throw new TypeError("A tensor's dims must be a number array");a=o,this.cpuData=i,this.dataLocation="cpu"}let s=gu(a);if(this.cpuData&&s!==this.cpuData.length)throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=a,this.size=s}static async fromImage(t,e){return cu(t,e)}static fromTexture(t,e){return pu(t,e)}static fromGpuBuffer(t,e){return hu(t,e)}static fromPinnedBuffer(t,e,r){return fu(t,e,r)}toDataURL(t){return lu(this,t)}toImageData(t){return du(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let e=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=e,t&&this.disposer&&(this.disposer(),this.disposer=void 0),e}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return _u(this,t)}}}),ft,is=X(()=>{as(),ft=Ut}),Mn,ss,Wt,Dt,yu=X(()=>{uu(),Mn=(t,e)=>{(typeof Bt.trace>"u"?!Bt.wasm.trace:!Bt.trace)||console.timeStamp(`${t}::ORT::${e}`)},ss=(t,e)=>{var a;let r=((a=new Error().stack)==null?void 0:a.split(/\r\n|\r|\n/g))||[],n=!1;for(let s=0;s<r.length;s++){if(n&&!r[s].includes("TRACE_FUNC")){let i=`FUNC_${t}::${r[s].trim().split(" ")[1]}`;e&&(i+=`::${e}`),Mn("CPU",i);return}r[s].includes("TRACE_FUNC")&&(n=!0)}},Wt=t=>{(typeof Bt.trace>"u"?!Bt.wasm.trace:!Bt.trace)||ss("BEGIN",t)},Dt=t=>{(typeof Bt.trace>"u"?!Bt.wasm.trace:!Bt.trace)||ss("END",t)}}),wu,E0=X(()=>{ts(),is(),yu(),wu=class Jg{constructor(e){this.handler=e}async run(e,r,n){Wt();let a={},s={};if(typeof e!="object"||e===null||e instanceof ft||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof ft)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let d of r){if(typeof d!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(d)===-1)throw new RangeError(`'fetches' contains invalid output name: ${d}.`);a[d]=null}if(typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let d=!1,c=Object.getOwnPropertyNames(r);for(let f of this.outputNames)if(c.indexOf(f)!==-1){let g=r[f];(g===null||g instanceof ft)&&(d=!0,i=!1,a[f]=g)}if(d){if(typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else s=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let d of this.inputNames)if(typeof e[d]>"u")throw new Error(`input '${d}' is missing in 'feeds'.`);if(i)for(let d of this.outputNames)a[d]=null;let o=await this.handler.run(e,a,s),l={};for(let d in o)if(Object.hasOwnProperty.call(o,d)){let c=o[d];c instanceof ft?l[d]=c:l[d]=new ft(c.type,c.data,c.dims)}return Dt(),l}async release(){return this.handler.dispose()}static async create(e,r,n,a){Wt();let s,i={};if(typeof e=="string"){if(s=e,typeof r=="object"&&r!==null)i=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(s=e,typeof r=="object"&&r!==null)i=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let c=e,f=0,g=e.byteLength;if(typeof r=="object"&&r!==null)i=r;else if(typeof r=="number"){if(f=r,!Number.isSafeInteger(f))throw new RangeError("'byteOffset' must be an integer.");if(f<0||f>=c.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${c.byteLength}).`);if(g=e.byteLength-f,typeof n=="number"){if(g=n,!Number.isSafeInteger(g))throw new RangeError("'byteLength' must be an integer.");if(g<=0||f+g>c.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${c.byteLength-f}].`);if(typeof a=="object"&&a!==null)i=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else if(typeof n<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");s=new Uint8Array(c,f,g)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[o,l]=await es(i),d=await o.createInferenceSessionHandler(s,l);return Dt(),new Jg(d)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),os,C0=X(()=>{E0(),os=wu}),T0=X(()=>{}),I0=X(()=>{}),A0=X(()=>{}),O0=X(()=>{}),bu,vu,M0=X(()=>{ts(),is(),bu="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",vu=class Zg{constructor(e,r,n){this.handler=e,this.hasOptimizerModel=r,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,r){let n=e.evalModel||"",a=e.optimizerModel||"",s=r||{},[i,o]=await es(s);if(i.createTrainingSessionHandler){let l=await i.createTrainingSessionHandler(e.checkpointState,e.trainModel,n,a,o);return new Zg(l,!!e.optimizerModel,!!e.evalModel)}else throw new Error(bu)}typeNarrowingForRunStep(e,r,n,a,s){let i={},o={};if(typeof n!="object"||n===null||n instanceof ft||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let l=!0;if(typeof a=="object"){if(a===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(a instanceof ft)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(a)){if(a.length===0)throw new TypeError("'fetches' cannot be an empty array.");l=!1;for(let d of a){if(typeof d!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(d)===-1)throw new RangeError(`'fetches' contains invalid output name: ${d}.`);i[d]=null}if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let d=!1,c=Object.getOwnPropertyNames(a);for(let f of r)if(c.indexOf(f)!==-1){let g=a[f];(g===null||g instanceof ft)&&(d=!0,l=!1,i[f]=g)}if(d){if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else o=a}}else if(typeof a<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let d of e)if(typeof n[d]>"u")throw new Error(`input '${d}' is missing in 'feeds'.`);if(l)for(let d of r)i[d]=null;return[i,o]}convertHandlerReturnTypeToMapOfTensors(e){let r={};for(let n in e)if(Object.hasOwnProperty.call(e,n)){let a=e[n];a instanceof ft?r[n]=a:r[n]=new ft(a.type,a.data,a.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,r,n){let[a,s]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,r,n),i=await this.handler.runTrainStep(e,a,s);return this.convertHandlerReturnTypeToMapOfTensors(i)}async runOptimizerStep(e){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(e||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(e,r,n){if(this.hasEvalModel){let[a,s]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,r,n),i=await this.handler.runEvalStep(e,a,s);return this.convertHandlerReturnTypeToMapOfTensors(i)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,r=!0){let n=await this.getParametersSize(r);if(e.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,r)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}}),us,z0=X(()=>{M0(),us=vu}),$u={};nn($u,{InferenceSession:()=>os,TRACE:()=>Mn,TRACE_FUNC_BEGIN:()=>Wt,TRACE_FUNC_END:()=>Dt,Tensor:()=>ft,TrainingSession:()=>us,env:()=>Ue,registerBackend:()=>Rr});var Vt=X(()=>{w0(),v0(),C0(),is(),T0(),I0(),yu(),A0(),O0(),z0()}),ls={};nn(ls,{createReadStream:()=>ku,readFile:()=>xu,readFileSync:()=>Su});var xu,Su,ku,Eu=X(()=>{xu=void 0,Su=void 0,ku=void 0}),ds={};nn(ds,{join:()=>Cu});var Cu,Tu=X(()=>{Cu=void 0}),R0=rn((t,e)=>{var r=(()=>{var a;var n=typeof document<"u"?(a=document.currentScript)==null?void 0:a.src:void 0;return typeof __filename<"u"&&(n||(n=__filename)),function(s={}){var i=s,o,l,d=new Promise((h,_)=>{o=h,l=_});i.mountExternalData=(h,_)=>{(i.eb||(i.eb=new Map)).set(h,_)},i.unmountExternalData=()=>{delete i.eb};let c=()=>{let h=(b,x,A)=>(...P)=>{let j=kt,J=x==null?void 0:x();P=b(...P);let se=x==null?void 0:x();return J!==se&&(b=se,A(J),x=A=null),kt!=j?Pi():P},_=b=>async(...x)=>{var A;try{if(i.cb)throw Error("Session already started");let P=i.cb={xb:x[0],errors:[]},j=await b(...x);if(i.cb!==P)throw Error("Session mismatch");(A=i.kb)==null||A.flush();let J=P.errors;if(0<J.length){let se=await Promise.all(J);if(se=se.filter(re=>re),0<se.length)throw Error(se.join(`
`))}return j}finally{i.cb=null}};i._OrtCreateSession=h(i._OrtCreateSession,()=>i._OrtCreateSession,b=>i._OrtCreateSession=b),i._OrtRun=_(h(i._OrtRun,()=>i._OrtRun,b=>i._OrtRun=b)),i._OrtRunWithBinding=_(h(i._OrtRunWithBinding,()=>i._OrtRunWithBinding,b=>i._OrtRunWithBinding=b)),i._OrtBindInput=h(i._OrtBindInput,()=>i._OrtBindInput,b=>i._OrtBindInput=b),c=void 0};i.jsepInit=(h,_)=>{if(c==null||c(),h==="webgpu"){[i.kb,i.pb,i.tb,i.lb,i.sb,i.Ra,i.ub,i.wb,i.qb,i.rb,i.vb]=_;let b=i.kb;i.jsepRegisterBuffer=(x,A,P,j)=>b.registerBuffer(x,A,P,j),i.jsepGetBuffer=x=>b.getBuffer(x),i.jsepCreateDownloader=(x,A,P)=>b.createDownloader(x,A,P),i.jsepOnReleaseSession=x=>{b.onReleaseSession(x)},i.jsepOnRunStart=x=>b.onRunStart(x)}};var f=Object.assign({},i),g="./this.program",y=(h,_)=>{throw _},p=typeof window=="object",v=typeof importScripts=="function",S=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",E="",k,O,I;if(S){var T=(Eu(),zr(ls)),F=(Tu(),zr(ds));E=v?F.dirname(E)+"/":__dirname+"/",k=(h,_)=>(h=Ot(h)?new URL(h):F.normalize(h),T.readFileSync(h,_?void 0:"utf8")),I=h=>(h=k(h,!0),h.buffer||(h=new Uint8Array(h)),h),O=(h,_,b,x=!0)=>{h=Ot(h)?new URL(h):F.normalize(h),T.readFile(h,x?void 0:"utf8",(A,P)=>{A?b(A):_(x?P.buffer:P)})},!i.thisProgram&&1<process.argv.length&&(g=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),y=(h,_)=>{throw process.exitCode=h,_}}else(p||v)&&(v?E=self.location.href:typeof document<"u"&&document.currentScript&&(E=document.currentScript.src),n&&(E=n),E.startsWith("blob:")?E="":E=E.substr(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1),k=h=>{var _=new XMLHttpRequest;return _.open("GET",h,!1),_.send(null),_.responseText},v&&(I=h=>{var _=new XMLHttpRequest;return _.open("GET",h,!1),_.responseType="arraybuffer",_.send(null),new Uint8Array(_.response)}),O=(h,_,b)=>{var x=new XMLHttpRequest;x.open("GET",h,!0),x.responseType="arraybuffer",x.onload=()=>{x.status==200||x.status==0&&x.response?_(x.response):b()},x.onerror=b,x.send(null)});var B=console.log.bind(console),G=console.error.bind(console);Object.assign(i,f),f=null;var H,Z=!1,pe,oe,ne,de,D,z,q,te,ye,he,R;function ie(){var h=H.buffer;i.HEAP8=oe=new Int8Array(h),i.HEAP16=de=new Int16Array(h),i.HEAPU8=ne=new Uint8Array(h),i.HEAPU16=D=new Uint16Array(h),i.HEAP32=z=new Int32Array(h),i.HEAPU32=q=new Uint32Array(h),i.HEAPF32=te=new Float32Array(h),i.HEAPF64=R=new Float64Array(h),i.HEAP64=ye=new BigInt64Array(h),i.HEAPU64=he=new BigUint64Array(h)}var le=[],Ae=[],Me=[],rt=0,$t=null;function nt(h){throw h="Aborted("+h+")",G(h),Z=!0,pe=1,h=new WebAssembly.RuntimeError(h+". Build with -sASSERTIONS for more info."),l(h),h}var Zt=h=>h.startsWith("data:application/octet-stream;base64,"),Ot=h=>h.startsWith("file://"),er;if(er="ort-wasm-simd.wasm",!Zt(er)){var je=er;er=i.locateFile?i.locateFile(je,E):E+je}function at(h){if(I)return I(h);throw"both async and sync fetching of the wasm failed"}function tr(h){if(p||v){if(typeof fetch=="function"&&!Ot(h))return fetch(h,{credentials:"same-origin"}).then(_=>{if(!_.ok)throw`failed to load wasm binary file at '${h}'`;return _.arrayBuffer()}).catch(()=>at(h));if(O)return new Promise((_,b)=>{O(h,x=>_(new Uint8Array(x)),b)})}return Promise.resolve().then(()=>at(h))}function pt(h,_,b){return tr(h).then(x=>WebAssembly.instantiate(x,_)).then(b,x=>{G(`failed to asynchronously prepare wasm: ${x}`),nt(x)})}function fn(h,_){var b=er;return typeof WebAssembly.instantiateStreaming!="function"||Zt(b)||Ot(b)||S||typeof fetch!="function"?pt(b,h,_):fetch(b,{credentials:"same-origin"}).then(x=>WebAssembly.instantiateStreaming(x,h).then(_,function(A){return G(`wasm streaming compile failed: ${A}`),G("falling back to ArrayBuffer instantiation"),pt(b,h,_)}))}var mn={824936:(h,_,b,x)=>{if(typeof i>"u"||!i.eb)return 1;if(h=Ke(h>>>0),h.startsWith("./")&&(h=h.substring(2)),h=i.eb.get(h),!h)return 2;if(_>>>=0,b>>>=0,_+b>h.byteLength)return 3;try{return ne.set(h.subarray(_,_+b),x>>>0>>>0),0}catch{return 4}},825437:()=>{i.qb()},825468:()=>{i.rb()},825497:()=>{i.vb()},825522:h=>i.pb(h),825555:h=>i.tb(h),825587:(h,_,b)=>{i.lb(h,_,b,!0)},825626:(h,_,b)=>{i.lb(h,_,b)},825659:h=>{i.Ra("Abs",h,void 0)},825710:h=>{i.Ra("Neg",h,void 0)},825761:h=>{i.Ra("Floor",h,void 0)},825814:h=>{i.Ra("Ceil",h,void 0)},825866:h=>{i.Ra("Reciprocal",h,void 0)},825924:h=>{i.Ra("Sqrt",h,void 0)},825976:h=>{i.Ra("Exp",h,void 0)},826027:h=>{i.Ra("Erf",h,void 0)},826078:h=>{i.Ra("Sigmoid",h,void 0)},826133:(h,_,b)=>{i.Ra("HardSigmoid",h,{alpha:_,beta:b})},826212:h=>{i.Ra("Log",h,void 0)},826263:h=>{i.Ra("Sin",h,void 0)},826314:h=>{i.Ra("Cos",h,void 0)},826365:h=>{i.Ra("Tan",h,void 0)},826416:h=>{i.Ra("Asin",h,void 0)},826468:h=>{i.Ra("Acos",h,void 0)},826520:h=>{i.Ra("Atan",h,void 0)},826572:h=>{i.Ra("Sinh",h,void 0)},826624:h=>{i.Ra("Cosh",h,void 0)},826676:h=>{i.Ra("Asinh",h,void 0)},826729:h=>{i.Ra("Acosh",h,void 0)},826782:h=>{i.Ra("Atanh",h,void 0)},826835:h=>{i.Ra("Tanh",h,void 0)},826887:h=>{i.Ra("Not",h,void 0)},826938:(h,_,b)=>{i.Ra("Clip",h,{min:_,max:b})},827007:h=>{i.Ra("Clip",h,void 0)},827059:(h,_)=>{i.Ra("Elu",h,{alpha:_})},827117:h=>{i.Ra("Relu",h,void 0)},827169:(h,_)=>{i.Ra("LeakyRelu",h,{alpha:_})},827233:(h,_)=>{i.Ra("ThresholdedRelu",h,{alpha:_})},827303:(h,_)=>{i.Ra("Cast",h,{to:_})},827361:h=>{i.Ra("Add",h,void 0)},827412:h=>{i.Ra("Sub",h,void 0)},827463:h=>{i.Ra("Mul",h,void 0)},827514:h=>{i.Ra("Div",h,void 0)},827565:h=>{i.Ra("Pow",h,void 0)},827616:h=>{i.Ra("Equal",h,void 0)},827669:h=>{i.Ra("Greater",h,void 0)},827724:h=>{i.Ra("GreaterOrEqual",h,void 0)},827786:h=>{i.Ra("Less",h,void 0)},827838:h=>{i.Ra("LessOrEqual",h,void 0)},827897:(h,_,b,x,A)=>{i.Ra("ReduceMean",h,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:x?Array.from(z.subarray(x>>>0,A>>>0)):[]})},828056:(h,_,b,x,A)=>{i.Ra("ReduceMax",h,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:x?Array.from(z.subarray(x>>>0,A>>>0)):[]})},828214:(h,_,b,x,A)=>{i.Ra("ReduceMin",h,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:x?Array.from(z.subarray(x>>>0,A>>>0)):[]})},828372:(h,_,b,x,A)=>{i.Ra("ReduceProd",h,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:x?Array.from(z.subarray(x>>>0,A>>>0)):[]})},828531:(h,_,b,x,A)=>{i.Ra("ReduceSum",h,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:x?Array.from(z.subarray(x>>>0,A>>>0)):[]})},828689:(h,_,b,x,A)=>{i.Ra("ReduceL1",h,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:x?Array.from(z.subarray(x>>>0,A>>>0)):[]})},828846:(h,_,b,x,A)=>{i.Ra("ReduceL2",h,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:x?Array.from(z.subarray(x>>>0,A>>>0)):[]})},829003:(h,_,b,x,A)=>{i.Ra("ReduceLogSum",h,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:x?Array.from(z.subarray(x>>>0,A>>>0)):[]})},829164:(h,_,b,x,A)=>{i.Ra("ReduceSumSquare",h,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:x?Array.from(z.subarray(x>>>0,A>>>0)):[]})},829328:(h,_,b,x,A)=>{i.Ra("ReduceLogSumExp",h,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:x?Array.from(z.subarray(x>>>0,A>>>0)):[]})},829492:h=>{i.Ra("Where",h,void 0)},829545:(h,_,b)=>{i.Ra("Transpose",h,{perm:_?Array.from(z.subarray(_>>>0,b>>>0)):[]})},829653:(h,_,b,x)=>{i.Ra("DepthToSpace",h,{blocksize:_,mode:Ke(b),format:x?"NHWC":"NCHW"})},829786:(h,_,b,x)=>{i.Ra("DepthToSpace",h,{blocksize:_,mode:Ke(b),format:x?"NHWC":"NCHW"})},829919:(h,_,b,x,A,P,j,J,se,re,fe,Be,Fe,N,Se)=>{i.Ra("ConvTranspose",h,{format:se?"NHWC":"NCHW",autoPad:_,dilations:[b],group:x,kernelShape:[A],pads:[P,j],strides:[J],wIsConst:()=>!!oe[re>>>0],outputPadding:fe?Array.from(z.subarray(fe>>>0,Be>>>0)):[],outputShape:Fe?Array.from(z.subarray(Fe>>>0,N>>>0)):[],activation:Ke(Se)})},830320:(h,_,b,x,A,P,j,J,se,re,fe,Be,Fe,N)=>{i.Ra("ConvTranspose",h,{format:J?"NHWC":"NCHW",autoPad:_,dilations:Array.from(z.subarray(b>>>0,(b>>>0)+2>>>0)),group:x,kernelShape:Array.from(z.subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(z.subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(z.subarray(j>>>0,(j>>>0)+2>>>0)),wIsConst:()=>!!oe[se>>>0],outputPadding:re?Array.from(z.subarray(re>>>0,fe>>>0)):[],outputShape:Be?Array.from(z.subarray(Be>>>0,Fe>>>0)):[],activation:Ke(N)})},830885:(h,_,b,x,A,P,j,J,se,re,fe,Be,Fe,N,Se)=>{i.Ra("ConvTranspose",h,{format:se?"NHWC":"NCHW",autoPad:_,dilations:[b],group:x,kernelShape:[A],pads:[P,j],strides:[J],wIsConst:()=>!!oe[re>>>0],outputPadding:fe?Array.from(z.subarray(fe>>>0,Be>>>0)):[],outputShape:Fe?Array.from(z.subarray(Fe>>>0,N>>>0)):[],activation:Ke(Se)})},831286:(h,_,b,x,A,P,j,J,se,re,fe,Be,Fe,N)=>{i.Ra("ConvTranspose",h,{format:J?"NHWC":"NCHW",autoPad:_,dilations:Array.from(z.subarray(b>>>0,(b>>>0)+2>>>0)),group:x,kernelShape:Array.from(z.subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(z.subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(z.subarray(j>>>0,(j>>>0)+2>>>0)),wIsConst:()=>!!oe[se>>>0],outputPadding:re?Array.from(z.subarray(re>>>0,fe>>>0)):[],outputShape:Be?Array.from(z.subarray(Be>>>0,Fe>>>0)):[],activation:Ke(N)})},831851:(h,_)=>{i.Ra("GlobalAveragePool",h,{format:_?"NHWC":"NCHW"})},831942:(h,_,b,x,A,P,j,J,se,re,fe,Be,Fe,N,Se,ze)=>{i.Ra("AveragePool",h,{format:ze?"NHWC":"NCHW",auto_pad:_,ceil_mode:b,count_include_pad:x,storage_order:A,dilations:[P,j],kernel_shape:[J,se],pads:[re,fe,Be,Fe],strides:[N,Se]})},832226:(h,_)=>{i.Ra("GlobalAveragePool",h,{format:_?"NHWC":"NCHW"})},832317:(h,_,b,x,A,P,j,J,se,re,fe,Be,Fe,N,Se,ze)=>{i.Ra("AveragePool",h,{format:ze?"NHWC":"NCHW",auto_pad:_,ceil_mode:b,count_include_pad:x,storage_order:A,dilations:[P,j],kernel_shape:[J,se],pads:[re,fe,Be,Fe],strides:[N,Se]})},832601:(h,_)=>{i.Ra("GlobalMaxPool",h,{format:_?"NHWC":"NCHW"})},832688:(h,_,b,x,A,P,j,J,se,re,fe,Be,Fe,N,Se,ze)=>{i.Ra("MaxPool",h,{format:ze?"NHWC":"NCHW",auto_pad:_,ceil_mode:b,count_include_pad:x,storage_order:A,dilations:[P,j],kernel_shape:[J,se],pads:[re,fe,Be,Fe],strides:[N,Se]})},832968:(h,_)=>{i.Ra("GlobalMaxPool",h,{format:_?"NHWC":"NCHW"})},833055:(h,_,b,x,A,P,j,J,se,re,fe,Be,Fe,N,Se,ze)=>{i.Ra("MaxPool",h,{format:ze?"NHWC":"NCHW",auto_pad:_,ceil_mode:b,count_include_pad:x,storage_order:A,dilations:[P,j],kernel_shape:[J,se],pads:[re,fe,Be,Fe],strides:[N,Se]})},833335:(h,_,b,x,A)=>{i.Ra("Gemm",h,{alpha:_,beta:b,transA:x,transB:A})},833439:h=>{i.Ra("MatMul",h,void 0)},833493:(h,_,b,x)=>{i.Ra("ArgMax",h,{keepDims:!!_,selectLastIndex:!!b,axis:x})},833601:(h,_,b,x)=>{i.Ra("ArgMin",h,{keepDims:!!_,selectLastIndex:!!b,axis:x})},833709:(h,_)=>{i.Ra("Softmax",h,{axis:_})},833772:(h,_)=>{i.Ra("Concat",h,{axis:_})},833832:(h,_,b,x,A)=>{i.Ra("Split",h,{axis:_,numOutputs:b,splitSizes:x?Array.from(z.subarray(x>>>0,A>>>0)):[]})},833972:h=>{i.Ra("Expand",h,void 0)},834026:(h,_)=>{i.Ra("Gather",h,{axis:Number(_)})},834097:(h,_)=>{i.Ra("GatherElements",h,{axis:Number(_)})},834176:(h,_,b,x,A,P,j,J,se,re,fe)=>{i.Ra("Resize",h,{antialias:_,axes:b?Array.from(z.subarray(b>>>0,x>>>0)):[],coordinateTransformMode:Ke(A),cubicCoeffA:P,excludeOutside:j,extrapolationValue:J,keepAspectRatioPolicy:Ke(se),mode:Ke(re),nearestMode:Ke(fe)})},834522:(h,_,b,x,A,P,j)=>{i.Ra("Slice",h,{starts:_?Array.from(z.subarray(_>>>0,b>>>0)):[],ends:x?Array.from(z.subarray(x>>>0,A>>>0)):[],axes:P?Array.from(z.subarray(P>>>0,j>>>0)):[]})},834738:h=>{i.Ra("Tile",h,void 0)},834790:(h,_,b,x)=>{i.Ra("LayerNormalization",h,{axis:_,epsilon:b,simplified:!!x})},834901:(h,_,b)=>{i.Ra("InstanceNormalization",h,{epsilon:_,format:b?"NHWC":"NCHW"})},835015:(h,_,b)=>{i.Ra("InstanceNormalization",h,{epsilon:_,format:b?"NHWC":"NCHW"})},835129:h=>{i.Ra("Range",h,void 0)},835182:(h,_)=>{i.Ra("Einsum",h,{equation:Ke(_)})},835263:(h,_,b,x,A)=>{i.Ra("Pad",h,{mode:_,value:b,pads:x?Array.from(z.subarray(x>>>0,A>>>0)):[]})},835390:(h,_,b,x,A,P)=>{i.Ra("BatchNormalization",h,{epsilon:_,momentum:b,spatial:!!A,trainingMode:!!x,format:P?"NHWC":"NCHW"})},835559:(h,_,b,x,A,P)=>{i.Ra("BatchNormalization",h,{epsilon:_,momentum:b,spatial:!!A,trainingMode:!!x,format:P?"NHWC":"NCHW"})},835728:(h,_,b)=>{i.Ra("CumSum",h,{exclusive:Number(_),reverse:Number(b)})},835825:(h,_,b,x,A,P,j,J,se)=>{i.Ra("Attention",h,{numHeads:_,isUnidirectional:b,maskFilterValue:x,scale:A,doRotary:P,qkvHiddenSizes:j?Array.from(z.subarray(Number(J)>>>0,Number(J)+j>>>0)):[],pastPresentShareBuffer:!!se})},836097:h=>{i.Ra("BiasAdd",h,void 0)},836152:h=>{i.Ra("BiasSplitGelu",h,void 0)},836213:h=>{i.Ra("FastGelu",h,void 0)},836269:(h,_,b,x,A,P,j,J,se,re,fe,Be,Fe)=>{i.Ra("Conv",h,{format:se?"NHWC":"NCHW",auto_pad:_,dilations:[b],group:x,kernel_shape:[A],pads:P?Array.from(z.subarray(P>>>0,j>>>0)):[],strides:[J],w_is_const:()=>!!oe[re>>>0],activation:Ke(fe),activation_params:Be?Array.from(te.subarray(Be>>>0,Fe>>>0)):[]})},836639:(h,_,b,x,A,P,j,J,se,re,fe,Be,Fe,N,Se,ze)=>{i.Ra("Conv",h,{format:Be?"NHWC":"NCHW",auto_pad:_,dilations:[b,x],group:A,kernel_shape:[P,j],pads:J?Array.from(z.subarray(J>>>0,se>>>0)):[],strides:[re,fe],w_is_const:()=>!!oe[Fe>>>0],activation:Ke(N),activation_params:Se?Array.from(te.subarray(Se>>>0,ze>>>0)):[]})},837030:h=>{i.Ra("Gelu",h,void 0)},837082:(h,_,b,x,A,P)=>{i.Ra("MatMulNBits",h,{k:_,n:b,accuracyLevel:x,bits:A,blockSize:P})},837209:(h,_,b,x,A,P)=>{i.Ra("MultiHeadAttention",h,{numHeads:_,isUnidirectional:b,maskFilterValue:x,scale:A,doRotary:P})},837368:(h,_,b,x,A)=>{i.Ra("RotaryEmbedding",h,{interleaved:!!_,numHeads:b,rotaryEmbeddingDim:x,scale:A})},837507:(h,_,b)=>{i.Ra("SkipLayerNormalization",h,{epsilon:_,simplified:!!b})},837609:(h,_,b)=>{i.Ra("SkipLayerNormalization",h,{epsilon:_,simplified:!!b})},837711:(h,_,b,x)=>{i.Ra("LayerNormalization",h,{axis:_,epsilon:b,simplified:!!x})},837822:h=>{i.ub(h)},837856:(h,_)=>i.wb(h,_,i.cb.xb,i.cb.errors)};function Yr(h){this.name="ExitStatus",this.message=`Program terminated with exit(${h})`,this.status=h}class Po{constructor(_){this.hb=_-24}}var _r=0,Er=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,pa=(h,_,b)=>{_>>>=0;var x=_+b;for(b=_;h[b]&&!(b>=x);)++b;if(16<b-_&&h.buffer&&Er)return Er.decode(h.subarray(_,b));for(x="";_<b;){var A=h[_++];if(A&128){var P=h[_++]&63;if((A&224)==192)x+=String.fromCharCode((A&31)<<6|P);else{var j=h[_++]&63;A=(A&240)==224?(A&15)<<12|P<<6|j:(A&7)<<18|P<<12|j<<6|h[_++]&63,65536>A?x+=String.fromCharCode(A):(A-=65536,x+=String.fromCharCode(55296|A>>10,56320|A&1023))}}else x+=String.fromCharCode(A)}return x},Ke=(h,_)=>(h>>>=0)?pa(ne,h,_):"",gn=h=>{for(var _=0,b=0;b<h.length;++b){var x=h.charCodeAt(b);127>=x?_++:2047>=x?_+=2:55296<=x&&57343>=x?(_+=4,++b):_+=3}return _},Lt=(h,_,b,x)=>{if(b>>>=0,!(0<x))return 0;var A=b;x=b+x-1;for(var P=0;P<h.length;++P){var j=h.charCodeAt(P);if(55296<=j&&57343>=j){var J=h.charCodeAt(++P);j=65536+((j&1023)<<10)|J&1023}if(127>=j){if(b>=x)break;_[b++>>>0]=j}else{if(2047>=j){if(b+1>=x)break;_[b++>>>0]=192|j>>6}else{if(65535>=j){if(b+2>=x)break;_[b++>>>0]=224|j>>12}else{if(b+3>=x)break;_[b++>>>0]=240|j>>18,_[b++>>>0]=128|j>>12&63}_[b++>>>0]=128|j>>6&63}_[b++>>>0]=128|j&63}}return _[b>>>0]=0,b-A},Cr,Mt=h=>{for(var _="";ne[h>>>0];)_+=Cr[ne[h++>>>0]];return _},ha={},_n={},lr;function fa(h,_,b={}){var x=_.name;if(!h)throw new lr(`type "${x}" must have a positive integer typeid pointer`);if(_n.hasOwnProperty(h)){if(b.nb)return;throw new lr(`Cannot register type '${x}' twice`)}_n[h]=_,ha.hasOwnProperty(h)&&(_=ha[h],delete ha[h],_.forEach(A=>A()))}function xt(h,_,b={}){if(!("argPackAdvance"in _))throw new TypeError("registerType registeredInstance requires argPackAdvance");return fa(h,_,b)}var yn=(h,_,b)=>{switch(_){case 1:return b?x=>oe[x>>>0]:x=>ne[x>>>0];case 2:return b?x=>de[x>>>1>>>0]:x=>D[x>>>1>>>0];case 4:return b?x=>z[x>>>2>>>0]:x=>q[x>>>2>>>0];case 8:return b?x=>ye[x>>>3]:x=>he[x>>>3];default:throw new TypeError(`invalid integer width (${_}): ${h}`)}},wn=[],ut=[];function ma(h){h>>>=0,9<h&&--ut[h+1]===0&&(ut[h]=void 0,wn.push(h))}var Oe=h=>{if(!h)throw new lr("Cannot use deleted val. handle = "+h);return ut[h]},St=h=>{switch(h){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let _=wn.pop()||ut.length;return ut[_]=h,ut[_+1]=1,_}};function Qr(h){return this.fromWireType(q[h>>>2>>>0])}var Bo={name:"emscripten::val",fromWireType:h=>{var _=Oe(h);return ma(h),_},toWireType:(h,_)=>St(_),argPackAdvance:8,readValueFromPointer:Qr,bb:null},Ci=(h,_)=>{switch(_){case 4:return function(b){return this.fromWireType(te[b>>>2>>>0])};case 8:return function(b){return this.fromWireType(R[b>>>3>>>0])};default:throw new TypeError(`invalid float width (${_}): ${h}`)}},Ti=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,be=(h,_)=>{for(var b=h>>1,x=b+_/2;!(b>=x)&&D[b>>>0];)++b;if(b<<=1,32<b-h&&Ti)return Ti.decode(ne.subarray(h>>>0,b>>>0));for(b="",x=0;!(x>=_/2);++x){var A=de[h+2*x>>>1>>>0];if(A==0)break;b+=String.fromCharCode(A)}return b},bn=(h,_,b)=>{if(b??(b=2147483647),2>b)return 0;b-=2;var x=_;b=b<2*h.length?b/2:h.length;for(var A=0;A<b;++A)de[_>>>1>>>0]=h.charCodeAt(A),_+=2;return de[_>>>1>>>0]=0,_-x},Ii=h=>2*h.length,Do=(h,_)=>{for(var b=0,x="";!(b>=_/4);){var A=z[h+4*b>>>2>>>0];if(A==0)break;++b,65536<=A?(A-=65536,x+=String.fromCharCode(55296|A>>10,56320|A&1023)):x+=String.fromCharCode(A)}return x},Ai=(h,_,b)=>{if(_>>>=0,b??(b=2147483647),4>b)return 0;var x=_;b=x+b-4;for(var A=0;A<h.length;++A){var P=h.charCodeAt(A);if(55296<=P&&57343>=P){var j=h.charCodeAt(++A);P=65536+((P&1023)<<10)|j&1023}if(z[_>>>2>>>0]=P,_+=4,_+4>b)break}return z[_>>>2>>>0]=0,_-x},Oi=h=>{for(var _=0,b=0;b<h.length;++b){var x=h.charCodeAt(b);55296<=x&&57343>=x&&++b,_+=4}return _},vn=(h,_)=>{var b=_n[h];if(b===void 0)throw h=ka(h),b=Mt(h),yt(h),new lr(`${_} has unknown type ${b}`);return b},ga=(h,_,b)=>{var x=[];return h=h.toWireType(x,b),x.length&&(q[_>>>2>>>0]=St(x)),h},Xr=h=>{try{h()}catch(_){nt(_)}},tt=h=>{var _;if(!Z)try{h();try{pe=pe=h=pe,(_=i.onExit)==null||_.call(i,h),Z=!0,y(h,new Yr(h))}catch(b){b instanceof Yr||b=="unwind"||y(1,b)}}catch(b){b instanceof Yr||b=="unwind"||y(1,b)}};function Mi(){var h=we,_={};for(let[b,x]of Object.entries(h))_[b]=typeof x=="function"?(...A)=>{nr.push(b);try{return x(...A)}finally{Z||(nr.pop(),kt&&rr===1&&nr.length===0&&(rr=0,Xr(Wi),typeof Fibers<"u"&&Fibers.Db()))}}:x;return _}var rr=0,kt=null,_a=0,nr=[],ya={},wa={},zi=0,$n=null,Ri=[];function Pi(){return new Promise((h,_)=>{$n={resolve:h,reject:_}})}function Bi(){var h=Tr(65548),_=h+12;q[h>>>2>>>0]=_,q[h+4>>>2>>>0]=_+65536,_=nr[0];var b=ya[_];return b===void 0&&(b=zi++,ya[_]=b,wa[b]=_),z[h+8>>>2>>>0]=b,h}function Di(h){if(!Z){if(rr===0){var _=!1,b=!1;h((x=0)=>{if(!Z&&(_a=x,_=!0,b)){rr=2,Xr(()=>ir(kt)),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.resume(),x=!1;try{var A=(0,we[wa[z[kt+8>>>2>>>0]]])()}catch(J){A=J,x=!0}var P=!1;if(!kt){var j=$n;j&&($n=null,(x?j.reject:j.resolve)(A),P=!0)}if(x&&!P)throw A}}),b=!0,_||(rr=1,kt=Bi(),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.pause(),Xr(()=>en(kt)))}else rr===2?(rr=0,Xr(Pt),yt(kt),kt=null,Ri.forEach(tt)):nt(`invalid state: ${rr}`);return _a}}function ba(h){return Di(_=>{h().then(_)})}var Jr=[],Ni={},xn=h=>{var _=Ni[h];return _===void 0?Mt(h):_},zt=()=>typeof globalThis=="object"?globalThis:Function("return this")(),va=h=>{var _=Jr.length;return Jr.push(h),_},$a=(h,_)=>{for(var b=Array(h),x=0;x<h;++x)b[x]=vn(q[_+4*x>>>2>>>0],"parameter "+x);return b},ar=(h,_)=>Object.defineProperty(_,"name",{value:h});function No(h){var _=Function;if(!(_ instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof _} which is not a function`);var b=ar(_.name||"unknownFunctionName",function(){});return b.prototype=_.prototype,b=new b,h=_.apply(b,h),h instanceof Object?h:b}var ht=h=>h%4===0&&(h%100!==0||h%400===0),xa=[0,31,60,91,121,152,182,213,244,274,305,335],Sn=[0,31,59,90,120,151,181,212,243,273,304,334],Rt=[],kn=(h,_)=>{Rt.length=0;for(var b;b=ne[h++>>>0];){var x=b!=105;x&=b!=112,_+=x&&_%8?4:0,Rt.push(b==112?q[_>>>2>>>0]:b==106?ye[_>>>3]:b==105?z[_>>>2>>>0]:R[_>>>3>>>0]),_+=x?8:4}return Rt},lt={},Et=()=>{if(!Zr){var h={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:g||"./this.program"},_;for(_ in lt)lt[_]===void 0?delete h[_]:h[_]=lt[_];var b=[];for(_ in h)b.push(`${_}=${h[_]}`);Zr=b}return Zr},Zr,Fo=[null,[],[]],Fi=[31,29,31,30,31,30,31,31,30,31,30,31],Sa=[31,28,31,30,31,30,31,31,30,31,30,31];function Lo(h){var _=Array(gn(h)+1);return Lt(h,_,0,_.length),_}function Li(h,_,b,x){function A(N,Se,ze){for(N=typeof N=="number"?N.toString():N||"";N.length<Se;)N=ze[0]+N;return N}function P(N,Se){return A(N,Se,"0")}function j(N,Se){function ze(br){return 0>br?-1:0<br?1:0}var wr;return(wr=ze(N.getFullYear()-Se.getFullYear()))===0&&(wr=ze(N.getMonth()-Se.getMonth()))===0&&(wr=ze(N.getDate()-Se.getDate())),wr}function J(N){switch(N.getDay()){case 0:return new Date(N.getFullYear()-1,11,29);case 1:return N;case 2:return new Date(N.getFullYear(),0,3);case 3:return new Date(N.getFullYear(),0,2);case 4:return new Date(N.getFullYear(),0,1);case 5:return new Date(N.getFullYear()-1,11,31);case 6:return new Date(N.getFullYear()-1,11,30)}}function se(N){var Se=N.$a;for(N=new Date(new Date(N.ab+1900,0,1).getTime());0<Se;){var ze=N.getMonth(),wr=(ht(N.getFullYear())?Fi:Sa)[ze];if(Se>wr-N.getDate())Se-=wr-N.getDate()+1,N.setDate(1),11>ze?N.setMonth(ze+1):(N.setMonth(0),N.setFullYear(N.getFullYear()+1));else{N.setDate(N.getDate()+Se);break}}return ze=new Date(N.getFullYear()+1,0,4),Se=J(new Date(N.getFullYear(),0,4)),ze=J(ze),0>=j(Se,N)?0>=j(ze,N)?N.getFullYear()+1:N.getFullYear():N.getFullYear()-1}h>>>=0,_>>>=0,b>>>=0,x>>>=0;var re=q[x+40>>>2>>>0];x={Ab:z[x>>>2>>>0],zb:z[x+4>>>2>>>0],fb:z[x+8>>>2>>>0],jb:z[x+12>>>2>>>0],gb:z[x+16>>>2>>>0],ab:z[x+20>>>2>>>0],Va:z[x+24>>>2>>>0],$a:z[x+28>>>2>>>0],Cb:z[x+32>>>2>>>0],yb:z[x+36>>>2>>>0],Bb:re?Ke(re):""},b=Ke(b),re={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var fe in re)b=b.replace(new RegExp(fe,"g"),re[fe]);var Be="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Fe="January February March April May June July August September October November December".split(" ");re={"%a":N=>Be[N.Va].substring(0,3),"%A":N=>Be[N.Va],"%b":N=>Fe[N.gb].substring(0,3),"%B":N=>Fe[N.gb],"%C":N=>P((N.ab+1900)/100|0,2),"%d":N=>P(N.jb,2),"%e":N=>A(N.jb,2," "),"%g":N=>se(N).toString().substring(2),"%G":se,"%H":N=>P(N.fb,2),"%I":N=>(N=N.fb,N==0?N=12:12<N&&(N-=12),P(N,2)),"%j":N=>{for(var Se=0,ze=0;ze<=N.gb-1;Se+=(ht(N.ab+1900)?Fi:Sa)[ze++]);return P(N.jb+Se,3)},"%m":N=>P(N.gb+1,2),"%M":N=>P(N.zb,2),"%n":()=>`
`,"%p":N=>0<=N.fb&&12>N.fb?"AM":"PM","%S":N=>P(N.Ab,2),"%t":()=>"	","%u":N=>N.Va||7,"%U":N=>P(Math.floor((N.$a+7-N.Va)/7),2),"%V":N=>{var Se=Math.floor((N.$a+7-(N.Va+6)%7)/7);if(2>=(N.Va+371-N.$a-2)%7&&Se++,Se)Se==53&&(ze=(N.Va+371-N.$a)%7,ze==4||ze==3&&ht(N.ab)||(Se=1));else{Se=52;var ze=(N.Va+7-N.$a-1)%7;(ze==4||ze==5&&ht(N.ab%400-1))&&Se++}return P(Se,2)},"%w":N=>N.Va,"%W":N=>P(Math.floor((N.$a+7-(N.Va+6)%7)/7),2),"%y":N=>(N.ab+1900).toString().substring(2),"%Y":N=>N.ab+1900,"%z":N=>{N=N.yb;var Se=0<=N;return N=Math.abs(N)/60,(Se?"+":"-")+("0000"+(N/60*100+N%60)).slice(-4)},"%Z":N=>N.Bb,"%%":()=>"%"},b=b.replace(/%%/g,"\0\0");for(fe in re)b.includes(fe)&&(b=b.replace(new RegExp(fe,"g"),re[fe](x)));return b=b.replace(/\0\0/g,"%"),fe=Lo(b),fe.length>_?0:(oe.set(fe,h>>>0),fe.length-1)}for(var Ui=Array(256),En=0;256>En;++En)Ui[En]=String.fromCharCode(En);Cr=Ui,lr=i.BindingError=class extends Error{constructor(h){super(h),this.name="BindingError"}},i.InternalError=class extends Error{constructor(h){super(h),this.name="InternalError"}},ut.push(0,1,void 0,1,null,1,!0,1,!1,1),i.count_emval_handles=()=>ut.length/2-5-wn.length;var Uo={ia:function(h,_,b){return ba(async()=>{await i.sb(h,_,b)})},a:function(h,_,b){h>>>=0;var x=new Po(h);throw q[x.hb+16>>>2>>>0]=0,q[x.hb+4>>>2>>>0]=_>>>0,q[x.hb+8>>>2>>>0]=b>>>0,_r=h,_r},z:function(){return 0},ea:function(){},R:function(){},T:function(){},ga:function(){return 0},ca:function(){},Z:function(){},ba:function(){},G:function(){},S:function(){},P:function(){},da:function(){},Q:function(){},C:function(h,_,b){_=Mt(_>>>0),xt(h>>>0,{name:_,fromWireType:x=>x,toWireType:function(x,A){if(typeof A!="bigint"&&typeof A!="number")throw A===null?A="null":(x=typeof A,A=x==="object"||x==="array"||x==="function"?A.toString():""+A),new TypeError(`Cannot convert "${A}" to ${this.name}`);return typeof A=="number"&&(A=BigInt(A)),A},argPackAdvance:8,readValueFromPointer:yn(_,b>>>0,_.indexOf("u")==-1),bb:null})},K:function(h,_,b,x){_=Mt(_>>>0),xt(h>>>0,{name:_,fromWireType:function(A){return!!A},toWireType:function(A,P){return P?b:x},argPackAdvance:8,readValueFromPointer:function(A){return this.fromWireType(ne[A>>>0])},bb:null})},J:function(h){return xt(h>>>0,Bo)},B:function(h,_,b){_=Mt(_>>>0),xt(h>>>0,{name:_,fromWireType:x=>x,toWireType:(x,A)=>A,argPackAdvance:8,readValueFromPointer:Ci(_,b>>>0),bb:null})},s:function(h,_,b,x,A){if(h>>>=0,b>>>=0,_=Mt(_>>>0),A===-1&&(A=4294967295),A=J=>J,x===0){var P=32-8*b;A=J=>J<<P>>>P}var j=_.includes("unsigned")?function(J,se){return se>>>0}:function(J,se){return se};xt(h,{name:_,fromWireType:A,toWireType:j,argPackAdvance:8,readValueFromPointer:yn(_,b,x!==0),bb:null})},o:function(h,_,b){function x(P){return new A(oe.buffer,q[P+4>>>2>>>0],q[P>>>2>>>0])}var A=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][_];b=Mt(b>>>0),xt(h>>>0,{name:b,fromWireType:x,argPackAdvance:8,readValueFromPointer:x},{nb:!0})},D:function(h,_){_=Mt(_>>>0);var b=_==="std::string";xt(h>>>0,{name:_,fromWireType:function(x){var A=q[x>>>2>>>0],P=x+4;if(b)for(var j=P,J=0;J<=A;++J){var se=P+J;if(J==A||ne[se>>>0]==0){if(j=Ke(j,se-j),re===void 0)var re=j;else re+="\0",re+=j;j=se+1}}else{for(re=Array(A),J=0;J<A;++J)re[J]=String.fromCharCode(ne[P+J>>>0]);re=re.join("")}return yt(x),re},toWireType:function(x,A){A instanceof ArrayBuffer&&(A=new Uint8Array(A));var P=typeof A=="string";if(!(P||A instanceof Uint8Array||A instanceof Uint8ClampedArray||A instanceof Int8Array))throw new lr("Cannot pass non-string to std::string");var j=b&&P?gn(A):A.length,J=Tr(4+j+1),se=J+4;if(q[J>>>2>>>0]=j,b&&P)Lt(A,ne,se,j+1);else if(P)for(P=0;P<j;++P){var re=A.charCodeAt(P);if(255<re)throw yt(se),new lr("String has UTF-16 code units that do not fit in 8 bits");ne[se+P>>>0]=re}else for(P=0;P<j;++P)ne[se+P>>>0]=A[P];return x!==null&&x.push(yt,J),J},argPackAdvance:8,readValueFromPointer:Qr,bb(x){yt(x)}})},y:function(h,_,b){if(_>>>=0,b>>>=0,b=Mt(b),_===2)var x=be,A=bn,P=Ii,j=J=>D[J>>>1>>>0];else _===4&&(x=Do,A=Ai,P=Oi,j=J=>q[J>>>2>>>0]);xt(h>>>0,{name:b,fromWireType:J=>{for(var se=q[J>>>2>>>0],re,fe=J+4,Be=0;Be<=se;++Be){var Fe=J+4+Be*_;(Be==se||j(Fe)==0)&&(fe=x(fe,Fe-fe),re===void 0?re=fe:(re+="\0",re+=fe),fe=Fe+_)}return yt(J),re},toWireType:(J,se)=>{if(typeof se!="string")throw new lr(`Cannot pass non-string to C++ string type ${b}`);var re=P(se),fe=Tr(4+re+_);return q[fe>>>2>>>0]=re/_,A(se,fe+4,re+_),J!==null&&J.push(yt,fe),fe},argPackAdvance:8,readValueFromPointer:Qr,bb(J){yt(J)}})},L:function(h,_){_=Mt(_>>>0),xt(h>>>0,{ob:!0,name:_,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ha:()=>1,u:function(h,_,b){return _>>>=0,b>>>=0,h=Oe(h>>>0),_=vn(_,"emval::as"),ga(_,b,h)},x:function(h){return h>>>=0,ba(()=>(h=Oe(h),h.then(St)))},n:function(h,_,b,x){return b>>>=0,x>>>=0,h=Jr[h>>>0],_=Oe(_>>>0),h(null,_,b,x)},j:function(h,_,b,x,A){return b>>>=0,x>>>=0,A>>>=0,h=Jr[h>>>0],_=Oe(_>>>0),b=xn(b),h(_,_[b],x,A)},b:ma,w:function(h,_){return _>>>=0,h=Oe(h>>>0),_=Oe(_),h==_},m:function(h){return h>>>=0,h===0?St(zt()):(h=xn(h),St(zt()[h]))},i:function(h,_,b){_=$a(h,_>>>0);var x=_.shift();h--;var A=`return function (obj, func, destructorsRef, args) {
`,P=0,j=[];b===0&&j.push("obj");for(var J=["retType"],se=[x],re=0;re<h;++re)j.push("arg"+re),J.push("argType"+re),se.push(_[re]),A+=`  var arg${re} = argType${re}.readValueFromPointer(args${P?"+"+P:""});
`,P+=_[re].argPackAdvance;return A+=`  var rv = ${b===1?"new func":"func.call"}(${j.join(", ")});
`,x.ob||(J.push("emval_returnValue"),se.push(ga),A+=`  return emval_returnValue(retType, destructorsRef, rv);
`),J.push(A+`};
`),h=No(J)(...se),b=`methodCaller<(${_.map(fe=>fe.name).join(", ")}) => ${x.name}>`,va(ar(b,h))},r:function(h,_){return _>>>=0,h=Oe(h>>>0),_=Oe(_),St(h[_])},e:function(h){h>>>=0,9<h&&(ut[h+1]+=1)},t:function(){return St([])},l:function(h){h=Oe(h>>>0);for(var _=Array(h.length),b=0;b<h.length;b++)_[b]=h[b];return St(_)},f:function(h){return St(xn(h>>>0))},k:function(){return St({})},h:function(h){h>>>=0;for(var _=Oe(h);_.length;){var b=_.pop();_.pop()(b)}ma(h)},g:function(h,_,b){_>>>=0,b>>>=0,h=Oe(h>>>0),_=Oe(_),b=Oe(b),h[_]=b},c:function(h,_){return _>>>=0,h=vn(h>>>0,"_emval_take_value"),h=h.readValueFromPointer(_),St(h)},W:function(h,_){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),_>>>=0,h=new Date(1e3*h),z[_>>>2>>>0]=h.getUTCSeconds(),z[_+4>>>2>>>0]=h.getUTCMinutes(),z[_+8>>>2>>>0]=h.getUTCHours(),z[_+12>>>2>>>0]=h.getUTCDate(),z[_+16>>>2>>>0]=h.getUTCMonth(),z[_+20>>>2>>>0]=h.getUTCFullYear()-1900,z[_+24>>>2>>>0]=h.getUTCDay(),z[_+28>>>2>>>0]=(h.getTime()-Date.UTC(h.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},X:function(h,_){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),_>>>=0,h=new Date(1e3*h),z[_>>>2>>>0]=h.getSeconds(),z[_+4>>>2>>>0]=h.getMinutes(),z[_+8>>>2>>>0]=h.getHours(),z[_+12>>>2>>>0]=h.getDate(),z[_+16>>>2>>>0]=h.getMonth(),z[_+20>>>2>>>0]=h.getFullYear()-1900,z[_+24>>>2>>>0]=h.getDay(),z[_+28>>>2>>>0]=(ht(h.getFullYear())?xa:Sn)[h.getMonth()]+h.getDate()-1|0,z[_+36>>>2>>>0]=-(60*h.getTimezoneOffset());var b=new Date(h.getFullYear(),6,1).getTimezoneOffset(),x=new Date(h.getFullYear(),0,1).getTimezoneOffset();z[_+32>>>2>>>0]=(b!=x&&h.getTimezoneOffset()==Math.min(x,b))|0},Y:function(h){h>>>=0;var _=new Date(z[h+20>>>2>>>0]+1900,z[h+16>>>2>>>0],z[h+12>>>2>>>0],z[h+8>>>2>>>0],z[h+4>>>2>>>0],z[h>>>2>>>0],0),b=z[h+32>>>2>>>0],x=_.getTimezoneOffset(),A=new Date(_.getFullYear(),6,1).getTimezoneOffset(),P=new Date(_.getFullYear(),0,1).getTimezoneOffset(),j=Math.min(P,A);return 0>b?z[h+32>>>2>>>0]=+(A!=P&&j==x):0<b!=(j==x)&&(A=Math.max(P,A),_.setTime(_.getTime()+6e4*((0<b?j:A)-x))),z[h+24>>>2>>>0]=_.getDay(),z[h+28>>>2>>>0]=(ht(_.getFullYear())?xa:Sn)[_.getMonth()]+_.getDate()-1|0,z[h>>>2>>>0]=_.getSeconds(),z[h+4>>>2>>>0]=_.getMinutes(),z[h+8>>>2>>>0]=_.getHours(),z[h+12>>>2>>>0]=_.getDate(),z[h+16>>>2>>>0]=_.getMonth(),z[h+20>>>2>>>0]=_.getYear(),h=_.getTime(),BigInt(isNaN(h)?-1:h/1e3)},U:function(){return-52},V:function(){},N:function(h,_,b,x){b>>>=0,x>>>=0;var A=new Date().getFullYear(),P=new Date(A,0,1),j=new Date(A,6,1);A=P.getTimezoneOffset();var J=j.getTimezoneOffset();q[h>>>0>>>2>>>0]=60*Math.max(A,J),z[_>>>0>>>2>>>0]=+(A!=J),h=se=>se.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],P=h(P),j=h(j),J<A?(Lt(P,ne,b,17),Lt(j,ne,x,17)):(Lt(P,ne,x,17),Lt(j,ne,b,17))},v:()=>{nt("")},d:function(h,_,b){return h>>>=0,_=kn(_>>>0,b>>>0),mn[h](..._)},I:function(h,_,b){return h>>>=0,_=kn(_>>>0,b>>>0),mn[h](..._)},H:()=>Date.now(),O:function(){return 4294901760},q:()=>performance.now(),M:function(h){h>>>=0;var _=ne.length;if(4294901760<h)return!1;for(var b=1;4>=b;b*=2){var x=_*(1+.2/b);x=Math.min(x,h+100663296);var A=Math;x=Math.max(h,x);e:{A=(A.min.call(A,4294901760,x+(65536-x%65536)%65536)-H.buffer.byteLength+65535)/65536;try{H.grow(A),ie();var P=1;break e}catch{}P=void 0}if(P)return!0}return!1},$:function(h,_){h>>>=0,_>>>=0;var b=0;return Et().forEach((x,A)=>{var P=_+b;for(A=q[h+4*A>>>2>>>0]=P,P=0;P<x.length;++P)oe[A++>>>0]=x.charCodeAt(P);oe[A>>>0]=0,b+=x.length+1}),0},aa:function(h,_){h>>>=0,_>>>=0;var b=Et();q[h>>>2>>>0]=b.length;var x=0;return b.forEach(A=>x+=A.length+1),q[_>>>2>>>0]=x,0},A:()=>52,F:function(){return 52},_:function(){return 70},E:function(h,_,b,x){_>>>=0,b>>>=0,x>>>=0;for(var A=0,P=0;P<b;P++){var j=q[_>>>2>>>0],J=q[_+4>>>2>>>0];_+=8;for(var se=0;se<J;se++){var re=ne[j+se>>>0],fe=Fo[h];re===0||re===10?((h===1?B:G)(pa(fe,0)),fe.length=0):fe.push(re)}A+=J}return q[x>>>2>>>0]=A,0},fa:Li,p:function(h,_,b,x){return Li(h>>>0,_>>>0,b>>>0,x>>>0)}},we=function(){function h(b){return we=b.exports,we=Mi(),we=Vi(),H=we.ja,ie(),Ae.unshift(we.ka),rt--,rt==0&&$t&&(b=$t,$t=null,b()),we}var _={a:Uo};if(rt++,i.instantiateWasm)try{return i.instantiateWasm(_,h)}catch(b){G(`Module.instantiateWasm callback failed with error: ${b}`),l(b)}return fn(_,function(b){h(b.instance)}).catch(l),{}}(),ka=h=>(ka=we.la)(h);i._OrtInit=(h,_)=>(i._OrtInit=we.ma)(h,_),i._OrtGetLastError=(h,_)=>(i._OrtGetLastError=we.na)(h,_),i._OrtCreateSessionOptions=(h,_,b,x,A,P,j,J,se,re)=>(i._OrtCreateSessionOptions=we.oa)(h,_,b,x,A,P,j,J,se,re),i._OrtAppendExecutionProvider=(h,_)=>(i._OrtAppendExecutionProvider=we.pa)(h,_),i._OrtAddFreeDimensionOverride=(h,_,b)=>(i._OrtAddFreeDimensionOverride=we.qa)(h,_,b),i._OrtAddSessionConfigEntry=(h,_,b)=>(i._OrtAddSessionConfigEntry=we.ra)(h,_,b),i._OrtReleaseSessionOptions=h=>(i._OrtReleaseSessionOptions=we.sa)(h),i._OrtCreateSession=(h,_,b)=>(i._OrtCreateSession=we.ta)(h,_,b),i._OrtReleaseSession=h=>(i._OrtReleaseSession=we.ua)(h),i._OrtGetInputOutputCount=(h,_,b)=>(i._OrtGetInputOutputCount=we.va)(h,_,b),i._OrtGetInputName=(h,_)=>(i._OrtGetInputName=we.wa)(h,_),i._OrtGetOutputName=(h,_)=>(i._OrtGetOutputName=we.xa)(h,_),i._OrtFree=h=>(i._OrtFree=we.ya)(h),i._OrtCreateTensor=(h,_,b,x,A,P)=>(i._OrtCreateTensor=we.za)(h,_,b,x,A,P),i._OrtGetTensorData=(h,_,b,x,A)=>(i._OrtGetTensorData=we.Aa)(h,_,b,x,A),i._OrtReleaseTensor=h=>(i._OrtReleaseTensor=we.Ba)(h),i._OrtCreateRunOptions=(h,_,b,x)=>(i._OrtCreateRunOptions=we.Ca)(h,_,b,x),i._OrtAddRunConfigEntry=(h,_,b)=>(i._OrtAddRunConfigEntry=we.Da)(h,_,b),i._OrtReleaseRunOptions=h=>(i._OrtReleaseRunOptions=we.Ea)(h),i._OrtCreateBinding=h=>(i._OrtCreateBinding=we.Fa)(h),i._OrtBindInput=(h,_,b)=>(i._OrtBindInput=we.Ga)(h,_,b),i._OrtBindOutput=(h,_,b,x)=>(i._OrtBindOutput=we.Ha)(h,_,b,x),i._OrtClearBoundOutputs=h=>(i._OrtClearBoundOutputs=we.Ia)(h),i._OrtReleaseBinding=h=>(i._OrtReleaseBinding=we.Ja)(h),i._OrtRunWithBinding=(h,_,b,x,A)=>(i._OrtRunWithBinding=we.Ka)(h,_,b,x,A),i._OrtRun=(h,_,b,x,A,P,j,J)=>(i._OrtRun=we.La)(h,_,b,x,A,P,j,J),i._OrtEndProfiling=h=>(i._OrtEndProfiling=we.Ma)(h),i._JsepOutput=(h,_,b)=>(i._JsepOutput=we.Na)(h,_,b),i._JsepGetNodeName=h=>(i._JsepGetNodeName=we.Oa)(h);var Tr=i._malloc=h=>(Tr=i._malloc=we.Pa)(h),yt=i._free=h=>(yt=i._free=we.Qa)(h),Cn=h=>(Cn=we.Sa)(h),Tn=h=>(Tn=we.Ta)(h),Ea=()=>(Ea=we.Ua)(),en=h=>(en=we.Wa)(h),Wi=()=>(Wi=we.Xa)(),ir=h=>(ir=we.Ya)(h),Pt=()=>(Pt=we.Za)();i.___start_em_js=837968,i.___stop_em_js=838129;function Vi(){var h=we;h=Object.assign({},h);var _=b=>x=>b(x)>>>0;return h.la=_(h.la),h.Pa=_(h.Pa),h.Ta=_(h.Ta),h.Ua=(b=>()=>b()>>>0)(h.Ua),h}i.stackSave=()=>Ea(),i.stackRestore=h=>Cn(h),i.stackAlloc=h=>Tn(h),i.UTF8ToString=Ke,i.stringToUTF8=(h,_,b)=>Lt(h,ne,_,b),i.lengthBytesUTF8=gn;var yr;$t=function h(){yr||Ca(),yr||($t=h)};function Ca(){if(!(0<rt)){if(i.preRun)for(typeof i.preRun=="function"&&(i.preRun=[i.preRun]);i.preRun.length;){var h=i.preRun.shift();le.unshift(h)}for(;0<le.length;)le.shift()(i);if(!(0<rt||yr||(yr=!0,i.calledRun=!0,Z))){for(;0<Ae.length;)Ae.shift()(i);for(o(i);0<Me.length;)Me.shift()(i)}}}return Ca(),d}})();typeof t=="object"&&typeof e=="object"?e.exports=r:typeof define=="function"&&define.amd&&define([],()=>r)}),P0=rn(()=>{}),B0=rn(()=>{}),Iu={};nn(Iu,{cpus:()=>Au});var Au,D0=X(()=>{Au=void 0}),N0=rn((t,e)=>{var r=(()=>{var a;var n=typeof document<"u"?(a=document.currentScript)==null?void 0:a.src:void 0;return typeof __filename<"u"&&(n||(n=__filename)),function(s={}){function i(){return R.buffer!=Me.buffer&&pt(),Me}function o(){return R.buffer!=Me.buffer&&pt(),rt}function l(){return R.buffer!=Me.buffer&&pt(),$t}function d(){return R.buffer!=Me.buffer&&pt(),nt}function c(){return R.buffer!=Me.buffer&&pt(),Zt}function f(){return R.buffer!=Me.buffer&&pt(),Ot}function g(){return R.buffer!=Me.buffer&&pt(),er}function y(){return R.buffer!=Me.buffer&&pt(),tr}var p=s,v,S,E=new Promise((u,m)=>{v=u,S=m});p.mountExternalData=(u,m)=>{(p.Db||(p.Db=new Map)).set(u,m)},p.unmountExternalData=()=>{delete p.Db};let k=()=>{let u=(w,$,C)=>(...M)=>{let V=Pt,Q=$==null?void 0:$();M=w(...M);let ue=$==null?void 0:$();return Q!==ue&&(w=ue,C(Q),$=C=null),Pt!=V?A():M},m=w=>async(...$)=>{var C;try{if(p.Cb)throw Error("Session already started");let M=p.Cb={ec:$[0],errors:[]},V=await w(...$);if(p.Cb!==M)throw Error("Session mismatch");(C=p.Kb)==null||C.flush();let Q=M.errors;if(0<Q.length){let ue=await Promise.all(Q);if(ue=ue.filter(ae=>ae),0<ue.length)throw Error(ue.join(`
`))}return V}finally{p.Cb=null}};p._OrtCreateSession=u(p._OrtCreateSession,()=>p._OrtCreateSession,w=>p._OrtCreateSession=w),p._OrtRun=m(u(p._OrtRun,()=>p._OrtRun,w=>p._OrtRun=w)),p._OrtRunWithBinding=m(u(p._OrtRunWithBinding,()=>p._OrtRunWithBinding,w=>p._OrtRunWithBinding=w)),p._OrtBindInput=u(p._OrtBindInput,()=>p._OrtBindInput,w=>p._OrtBindInput=w),k=void 0};p.jsepInit=(u,m)=>{if(k==null||k(),u==="webgpu"){[p.Kb,p.Wb,p.$b,p.Lb,p.Zb,p.ob,p.ac,p.cc,p.Xb,p.Yb,p.bc]=m;let w=p.Kb;p.jsepRegisterBuffer=($,C,M,V)=>w.registerBuffer($,C,M,V),p.jsepGetBuffer=$=>w.getBuffer($),p.jsepCreateDownloader=($,C,M)=>w.createDownloader($,C,M),p.jsepOnReleaseSession=$=>{w.onReleaseSession($)},p.jsepOnRunStart=$=>w.onRunStart($)}};var O=Object.assign({},p),I="./this.program",T=(u,m)=>{throw m},F=typeof window=="object",B=typeof importScripts=="function",G=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",H=p.ENVIRONMENT_IS_PTHREAD||!1,Z="";function pe(u){return p.locateFile?p.locateFile(u,Z):Z+u}var oe,ne,de;if(G){var D=(Eu(),zr(ls)),z=(Tu(),zr(ds));Z=B?z.dirname(Z)+"/":__dirname+"/",oe=(u,m)=>(u=Lt(u)?new URL(u):z.normalize(u),D.readFileSync(u,m?void 0:"utf8")),de=u=>(u=oe(u,!0),u.buffer||(u=new Uint8Array(u)),u),ne=(u,m,w,$=!0)=>{u=Lt(u)?new URL(u):z.normalize(u),D.readFile(u,$?void 0:"utf8",(C,M)=>{C?w(C):m($?M.buffer:M)})},!p.thisProgram&&1<process.argv.length&&(I=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),T=(u,m)=>{throw process.exitCode=u,m},global.Worker=P0().Worker}else(F||B)&&(B?Z=self.location.href:typeof document<"u"&&document.currentScript&&(Z=document.currentScript.src),typeof n<"u"&&n&&(Z=n),Z.startsWith("blob:")?Z="":Z=Z.substr(0,Z.replace(/[?#].*/,"").lastIndexOf("/")+1),G||(oe=u=>{var m=new XMLHttpRequest;return m.open("GET",u,!1),m.send(null),m.responseText},B&&(de=u=>{var m=new XMLHttpRequest;return m.open("GET",u,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),ne=(u,m,w)=>{var $=new XMLHttpRequest;$.open("GET",u,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?m($.response):w()},$.onerror=w,$.send(null)}));G&&typeof performance>"u"&&(global.performance=B0().performance);var q=console.log.bind(console),te=console.error.bind(console);G&&(q=(...u)=>D.writeSync(1,u.join(" ")+`
`),te=(...u)=>D.writeSync(2,u.join(" ")+`
`));var ye=q,he=te;Object.assign(p,O),O=null;var R,ie,le=!1,Ae,Me,rt,$t,nt,Zt,Ot,er,je,at,tr;function pt(){var u=R.buffer;p.HEAP8=Me=new Int8Array(u),p.HEAP16=$t=new Int16Array(u),p.HEAPU8=rt=new Uint8Array(u),p.HEAPU16=nt=new Uint16Array(u),p.HEAP32=Zt=new Int32Array(u),p.HEAPU32=Ot=new Uint32Array(u),p.HEAPF32=er=new Float32Array(u),p.HEAPF64=tr=new Float64Array(u),p.HEAP64=je=new BigInt64Array(u),p.HEAPU64=at=new BigUint64Array(u)}var fn=16777216;if(H)R=p.wasmMemory;else if(p.wasmMemory)R=p.wasmMemory;else if(R=new WebAssembly.Memory({initial:fn/65536,maximum:65536,shared:!0}),!(R.buffer instanceof SharedArrayBuffer))throw he("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),G&&he("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");pt(),fn=R.buffer.byteLength;var mn=[],Yr=[],Po=[],_r=0,Er=null;function pa(){if(_r--,_r==0&&Er){var u=Er;Er=null,u()}}function Ke(u){throw u="Aborted("+u+")",he(u),le=!0,Ae=1,u=new WebAssembly.RuntimeError(u+". Build with -sASSERTIONS for more info."),S(u),u}var gn=u=>u.startsWith("data:application/octet-stream;base64,"),Lt=u=>u.startsWith("file://"),Cr;Cr="ort-wasm-simd-threaded.wasm",gn(Cr)||(Cr=pe(Cr));function Mt(u){if(de)return de(u);throw"both async and sync fetching of the wasm failed"}function ha(u){if(F||B){if(typeof fetch=="function"&&!Lt(u))return fetch(u,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw`failed to load wasm binary file at '${u}'`;return m.arrayBuffer()}).catch(()=>Mt(u));if(ne)return new Promise((m,w)=>{ne(u,$=>m(new Uint8Array($)),w)})}return Promise.resolve().then(()=>Mt(u))}function _n(u,m,w){return ha(u).then($=>WebAssembly.instantiate($,m)).then(w,$=>{he(`failed to asynchronously prepare wasm: ${$}`),Ke($)})}function lr(u,m){var w=Cr;return typeof WebAssembly.instantiateStreaming!="function"||gn(w)||Lt(w)||G||typeof fetch!="function"?_n(w,u,m):fetch(w,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,u).then(m,function(C){return he(`wasm streaming compile failed: ${C}`),he("falling back to ArrayBuffer instantiation"),_n(w,u,m)}))}var fa={826468:(u,m,w,$)=>{if(typeof p>"u"||!p.Db)return 1;if(u=tt(u>>>0),u.startsWith("./")&&(u=u.substring(2)),u=p.Db.get(u),!u)return 2;if(m>>>=0,w>>>=0,$>>>=0,m+w>u.byteLength)return 3;try{return o().set(u.subarray(m,m+w),$>>>0),0}catch{return 4}},826969:()=>{p.Xb()},827e3:()=>{p.Yb()},827029:()=>{p.bc()},827054:u=>p.Wb(u),827087:u=>p.$b(u),827119:(u,m,w)=>{p.Lb(u,m,w,!0)},827158:(u,m,w)=>{p.Lb(u,m,w)},827191:u=>{p.ob("Abs",u,void 0)},827242:u=>{p.ob("Neg",u,void 0)},827293:u=>{p.ob("Floor",u,void 0)},827346:u=>{p.ob("Ceil",u,void 0)},827398:u=>{p.ob("Reciprocal",u,void 0)},827456:u=>{p.ob("Sqrt",u,void 0)},827508:u=>{p.ob("Exp",u,void 0)},827559:u=>{p.ob("Erf",u,void 0)},827610:u=>{p.ob("Sigmoid",u,void 0)},827665:(u,m,w)=>{p.ob("HardSigmoid",u,{alpha:m,beta:w})},827744:u=>{p.ob("Log",u,void 0)},827795:u=>{p.ob("Sin",u,void 0)},827846:u=>{p.ob("Cos",u,void 0)},827897:u=>{p.ob("Tan",u,void 0)},827948:u=>{p.ob("Asin",u,void 0)},828e3:u=>{p.ob("Acos",u,void 0)},828052:u=>{p.ob("Atan",u,void 0)},828104:u=>{p.ob("Sinh",u,void 0)},828156:u=>{p.ob("Cosh",u,void 0)},828208:u=>{p.ob("Asinh",u,void 0)},828261:u=>{p.ob("Acosh",u,void 0)},828314:u=>{p.ob("Atanh",u,void 0)},828367:u=>{p.ob("Tanh",u,void 0)},828419:u=>{p.ob("Not",u,void 0)},828470:(u,m,w)=>{p.ob("Clip",u,{min:m,max:w})},828539:u=>{p.ob("Clip",u,void 0)},828591:(u,m)=>{p.ob("Elu",u,{alpha:m})},828649:u=>{p.ob("Relu",u,void 0)},828701:(u,m)=>{p.ob("LeakyRelu",u,{alpha:m})},828765:(u,m)=>{p.ob("ThresholdedRelu",u,{alpha:m})},828835:(u,m)=>{p.ob("Cast",u,{to:m})},828893:u=>{p.ob("Add",u,void 0)},828944:u=>{p.ob("Sub",u,void 0)},828995:u=>{p.ob("Mul",u,void 0)},829046:u=>{p.ob("Div",u,void 0)},829097:u=>{p.ob("Pow",u,void 0)},829148:u=>{p.ob("Equal",u,void 0)},829201:u=>{p.ob("Greater",u,void 0)},829256:u=>{p.ob("GreaterOrEqual",u,void 0)},829318:u=>{p.ob("Less",u,void 0)},829370:u=>{p.ob("LessOrEqual",u,void 0)},829429:(u,m,w,$,C)=>{p.ob("ReduceMean",u,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:$?Array.from(c().subarray($>>>0,C>>>0)):[]})},829588:(u,m,w,$,C)=>{p.ob("ReduceMax",u,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:$?Array.from(c().subarray($>>>0,C>>>0)):[]})},829746:(u,m,w,$,C)=>{p.ob("ReduceMin",u,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:$?Array.from(c().subarray($>>>0,C>>>0)):[]})},829904:(u,m,w,$,C)=>{p.ob("ReduceProd",u,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:$?Array.from(c().subarray($>>>0,C>>>0)):[]})},830063:(u,m,w,$,C)=>{p.ob("ReduceSum",u,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:$?Array.from(c().subarray($>>>0,C>>>0)):[]})},830221:(u,m,w,$,C)=>{p.ob("ReduceL1",u,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:$?Array.from(c().subarray($>>>0,C>>>0)):[]})},830378:(u,m,w,$,C)=>{p.ob("ReduceL2",u,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:$?Array.from(c().subarray($>>>0,C>>>0)):[]})},830535:(u,m,w,$,C)=>{p.ob("ReduceLogSum",u,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:$?Array.from(c().subarray($>>>0,C>>>0)):[]})},830696:(u,m,w,$,C)=>{p.ob("ReduceSumSquare",u,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:$?Array.from(c().subarray($>>>0,C>>>0)):[]})},830860:(u,m,w,$,C)=>{p.ob("ReduceLogSumExp",u,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:$?Array.from(c().subarray($>>>0,C>>>0)):[]})},831024:u=>{p.ob("Where",u,void 0)},831077:(u,m,w)=>{p.ob("Transpose",u,{perm:m?Array.from(c().subarray(m>>>0,w>>>0)):[]})},831185:(u,m,w,$)=>{p.ob("DepthToSpace",u,{blocksize:m,mode:tt(w),format:$?"NHWC":"NCHW"})},831318:(u,m,w,$)=>{p.ob("DepthToSpace",u,{blocksize:m,mode:tt(w),format:$?"NHWC":"NCHW"})},831451:(u,m,w,$,C,M,V,Q,ue,ae,ge,Le,We,U,Ce)=>{p.ob("ConvTranspose",u,{format:ue?"NHWC":"NCHW",autoPad:m,dilations:[w],group:$,kernelShape:[C],pads:[M,V],strides:[Q],wIsConst:()=>!!i()[ae>>>0],outputPadding:ge?Array.from(c().subarray(ge>>>0,Le>>>0)):[],outputShape:We?Array.from(c().subarray(We>>>0,U>>>0)):[],activation:tt(Ce)})},831852:(u,m,w,$,C,M,V,Q,ue,ae,ge,Le,We,U)=>{p.ob("ConvTranspose",u,{format:Q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(c().subarray(w>>>0,(w>>>0)+2>>>0)),group:$,kernelShape:Array.from(c().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(c().subarray(M>>>0,(M>>>0)+4>>>0)),strides:Array.from(c().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!i()[ue>>>0],outputPadding:ae?Array.from(c().subarray(ae>>>0,ge>>>0)):[],outputShape:Le?Array.from(c().subarray(Le>>>0,We>>>0)):[],activation:tt(U)})},832417:(u,m,w,$,C,M,V,Q,ue,ae,ge,Le,We,U,Ce)=>{p.ob("ConvTranspose",u,{format:ue?"NHWC":"NCHW",autoPad:m,dilations:[w],group:$,kernelShape:[C],pads:[M,V],strides:[Q],wIsConst:()=>!!i()[ae>>>0],outputPadding:ge?Array.from(c().subarray(ge>>>0,Le>>>0)):[],outputShape:We?Array.from(c().subarray(We>>>0,U>>>0)):[],activation:tt(Ce)})},832818:(u,m,w,$,C,M,V,Q,ue,ae,ge,Le,We,U)=>{p.ob("ConvTranspose",u,{format:Q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(c().subarray(w>>>0,(w>>>0)+2>>>0)),group:$,kernelShape:Array.from(c().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(c().subarray(M>>>0,(M>>>0)+4>>>0)),strides:Array.from(c().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!i()[ue>>>0],outputPadding:ae?Array.from(c().subarray(ae>>>0,ge>>>0)):[],outputShape:Le?Array.from(c().subarray(Le>>>0,We>>>0)):[],activation:tt(U)})},833383:(u,m)=>{p.ob("GlobalAveragePool",u,{format:m?"NHWC":"NCHW"})},833474:(u,m,w,$,C,M,V,Q,ue,ae,ge,Le,We,U,Ce,Ne)=>{p.ob("AveragePool",u,{format:Ne?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:$,storage_order:C,dilations:[M,V],kernel_shape:[Q,ue],pads:[ae,ge,Le,We],strides:[U,Ce]})},833758:(u,m)=>{p.ob("GlobalAveragePool",u,{format:m?"NHWC":"NCHW"})},833849:(u,m,w,$,C,M,V,Q,ue,ae,ge,Le,We,U,Ce,Ne)=>{p.ob("AveragePool",u,{format:Ne?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:$,storage_order:C,dilations:[M,V],kernel_shape:[Q,ue],pads:[ae,ge,Le,We],strides:[U,Ce]})},834133:(u,m)=>{p.ob("GlobalMaxPool",u,{format:m?"NHWC":"NCHW"})},834220:(u,m,w,$,C,M,V,Q,ue,ae,ge,Le,We,U,Ce,Ne)=>{p.ob("MaxPool",u,{format:Ne?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:$,storage_order:C,dilations:[M,V],kernel_shape:[Q,ue],pads:[ae,ge,Le,We],strides:[U,Ce]})},834500:(u,m)=>{p.ob("GlobalMaxPool",u,{format:m?"NHWC":"NCHW"})},834587:(u,m,w,$,C,M,V,Q,ue,ae,ge,Le,We,U,Ce,Ne)=>{p.ob("MaxPool",u,{format:Ne?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:$,storage_order:C,dilations:[M,V],kernel_shape:[Q,ue],pads:[ae,ge,Le,We],strides:[U,Ce]})},834867:(u,m,w,$,C)=>{p.ob("Gemm",u,{alpha:m,beta:w,transA:$,transB:C})},834971:u=>{p.ob("MatMul",u,void 0)},835025:(u,m,w,$)=>{p.ob("ArgMax",u,{keepDims:!!m,selectLastIndex:!!w,axis:$})},835133:(u,m,w,$)=>{p.ob("ArgMin",u,{keepDims:!!m,selectLastIndex:!!w,axis:$})},835241:(u,m)=>{p.ob("Softmax",u,{axis:m})},835304:(u,m)=>{p.ob("Concat",u,{axis:m})},835364:(u,m,w,$,C)=>{p.ob("Split",u,{axis:m,numOutputs:w,splitSizes:$?Array.from(c().subarray($>>>0,C>>>0)):[]})},835504:u=>{p.ob("Expand",u,void 0)},835558:(u,m)=>{p.ob("Gather",u,{axis:Number(m)})},835629:(u,m)=>{p.ob("GatherElements",u,{axis:Number(m)})},835708:(u,m,w,$,C,M,V,Q,ue,ae,ge)=>{p.ob("Resize",u,{antialias:m,axes:w?Array.from(c().subarray(w>>>0,$>>>0)):[],coordinateTransformMode:tt(C),cubicCoeffA:M,excludeOutside:V,extrapolationValue:Q,keepAspectRatioPolicy:tt(ue),mode:tt(ae),nearestMode:tt(ge)})},836054:(u,m,w,$,C,M,V)=>{p.ob("Slice",u,{starts:m?Array.from(c().subarray(m>>>0,w>>>0)):[],ends:$?Array.from(c().subarray($>>>0,C>>>0)):[],axes:M?Array.from(c().subarray(M>>>0,V>>>0)):[]})},836270:u=>{p.ob("Tile",u,void 0)},836322:(u,m,w,$)=>{p.ob("LayerNormalization",u,{axis:m,epsilon:w,simplified:!!$})},836433:(u,m,w)=>{p.ob("InstanceNormalization",u,{epsilon:m,format:w?"NHWC":"NCHW"})},836547:(u,m,w)=>{p.ob("InstanceNormalization",u,{epsilon:m,format:w?"NHWC":"NCHW"})},836661:u=>{p.ob("Range",u,void 0)},836714:(u,m)=>{p.ob("Einsum",u,{equation:tt(m)})},836795:(u,m,w,$,C)=>{p.ob("Pad",u,{mode:m,value:w,pads:$?Array.from(c().subarray($>>>0,C>>>0)):[]})},836922:(u,m,w,$,C,M)=>{p.ob("BatchNormalization",u,{epsilon:m,momentum:w,spatial:!!C,trainingMode:!!$,format:M?"NHWC":"NCHW"})},837091:(u,m,w,$,C,M)=>{p.ob("BatchNormalization",u,{epsilon:m,momentum:w,spatial:!!C,trainingMode:!!$,format:M?"NHWC":"NCHW"})},837260:(u,m,w)=>{p.ob("CumSum",u,{exclusive:Number(m),reverse:Number(w)})},837357:(u,m,w,$,C,M,V,Q,ue)=>{p.ob("Attention",u,{numHeads:m,isUnidirectional:w,maskFilterValue:$,scale:C,doRotary:M,qkvHiddenSizes:V?Array.from(c().subarray(Number(Q)>>>0,Number(Q)+V>>>0)):[],pastPresentShareBuffer:!!ue})},837629:u=>{p.ob("BiasAdd",u,void 0)},837684:u=>{p.ob("BiasSplitGelu",u,void 0)},837745:u=>{p.ob("FastGelu",u,void 0)},837801:(u,m,w,$,C,M,V,Q,ue,ae,ge,Le,We)=>{p.ob("Conv",u,{format:ue?"NHWC":"NCHW",auto_pad:m,dilations:[w],group:$,kernel_shape:[C],pads:M?Array.from(c().subarray(M>>>0,V>>>0)):[],strides:[Q],w_is_const:()=>!!i()[ae>>>0],activation:tt(ge),activation_params:Le?Array.from(g().subarray(Le>>>0,We>>>0)):[]})},838171:(u,m,w,$,C,M,V,Q,ue,ae,ge,Le,We,U,Ce,Ne)=>{p.ob("Conv",u,{format:Le?"NHWC":"NCHW",auto_pad:m,dilations:[w,$],group:C,kernel_shape:[M,V],pads:Q?Array.from(c().subarray(Q>>>0,ue>>>0)):[],strides:[ae,ge],w_is_const:()=>!!i()[We>>>0],activation:tt(U),activation_params:Ce?Array.from(g().subarray(Ce>>>0,Ne>>>0)):[]})},838562:u=>{p.ob("Gelu",u,void 0)},838614:(u,m,w,$,C,M)=>{p.ob("MatMulNBits",u,{k:m,n:w,accuracyLevel:$,bits:C,blockSize:M})},838741:(u,m,w,$,C,M)=>{p.ob("MultiHeadAttention",u,{numHeads:m,isUnidirectional:w,maskFilterValue:$,scale:C,doRotary:M})},838900:(u,m,w,$,C)=>{p.ob("RotaryEmbedding",u,{interleaved:!!m,numHeads:w,rotaryEmbeddingDim:$,scale:C})},839039:(u,m,w)=>{p.ob("SkipLayerNormalization",u,{epsilon:m,simplified:!!w})},839141:(u,m,w)=>{p.ob("SkipLayerNormalization",u,{epsilon:m,simplified:!!w})},839243:(u,m,w,$)=>{p.ob("LayerNormalization",u,{axis:m,epsilon:w,simplified:!!$})},839354:u=>{p.ac(u)},839388:(u,m)=>p.cc(u,m,p.Cb.ec,p.Cb.errors)};function xt(u){this.name="ExitStatus",this.message=`Program terminated with exit(${u})`,this.status=u}var yn=u=>{u.terminate(),u.onmessage=()=>{}},wn=u=>{be.xb.length==0&&(Ci(),be.Mb(be.xb[0]));var m=be.xb.pop();if(!m)return 6;be.yb.push(m),be.ub[u.wb]=m,m.wb=u.wb;var w={cmd:"run",start_routine:u.fc,arg:u.Rb,pthread_ptr:u.wb};return G&&m.unref(),m.postMessage(w,u.mc),0},ut=0,ma=u=>{var m=Ko();return u=u(),ji(m),u},Oe=(u,m,...w)=>ma(()=>{for(var $=2*w.length,C=jo(8*$),M=C>>>3,V=0;V<w.length;V++){var Q=w[V];typeof Q=="bigint"?(je[M+2*V]=1n,je[M+2*V+1]=Q):(je[M+2*V]=0n,y()[M+2*V+1>>>0]=Q)}return Wg(u,0,$,C,m)});function St(u){var m;if(H)return Oe(0,1,u);Ae=u,0<ut||(be.hc(),(m=p.onExit)==null||m.call(p,u),le=!0),T(u,new xt(u))}var Qr=u=>{if(Ae=u,H)throw Ii(u),"unwind";St(u)};function Bo(){for(var u=p.numThreads;u--;)Ci();mn.unshift(()=>{_r++,Ti(()=>pa())})}function Ci(){var u=pe("ort-wasm-simd-threaded.worker.js");u=new Worker(u),be.xb.push(u)}function Ti(u){H?u():Promise.all(be.xb.map(be.Mb)).then(u)}var be={xb:[],yb:[],Qb:[],ub:{},Gb(){H?(be.receiveObjectTransfer=be.dc,be.threadInitTLS=be.Pb,be.setExitStatus=be.Ob):Bo()},Ob:u=>Ae=u,pc:["$terminateWorker"],hc:()=>{for(var u of be.yb)yn(u);for(u of be.xb)yn(u);be.xb=[],be.yb=[],be.ub=[]},Nb:u=>{var m=u.wb;delete be.ub[m],be.xb.push(u),be.yb.splice(be.yb.indexOf(u),1),u.wb=0,Ho(m)},dc(){},Pb(){be.Qb.forEach(u=>u())},Mb:u=>new Promise(m=>{u.onmessage=M=>{M=M.data;var V=M.cmd;if(M.targetThread&&M.targetThread!=Hi()){var Q=be.ub[M.targetThread];Q?Q.postMessage(M,M.transferList):he(`Internal error! Worker sent a message "${V}" to target pthread ${M.targetThread}, but that thread no longer exists!`)}else V==="checkMailbox"?yt():V==="spawnThread"?wn(M):V==="cleanupThread"?be.Nb(be.ub[M.thread]):V==="killThread"?(M=M.thread,V=be.ub[M],delete be.ub[M],yn(V),Ho(M),be.yb.splice(be.yb.indexOf(V),1),V.wb=0):V==="cancelThread"?be.ub[M.thread].postMessage({cmd:"cancel"}):V==="loaded"?(u.loaded=!0,G&&!u.wb&&u.unref(),m(u)):V==="alert"?alert(`Thread ${M.threadId}: ${M.text}`):M.target==="setimmediate"?u.postMessage(M):V==="callHandler"?p[M.handler](...M.args):V&&he(`worker sent an unknown command ${V}`)},u.onerror=M=>{throw he(`worker sent an error! ${M.filename}:${M.lineno}: ${M.message}`),M},G&&(u.on("message",M=>u.onmessage({data:M})),u.on("error",M=>u.onerror(M)));var w=[],$=["onExit"],C;for(C of $)p.hasOwnProperty(C)&&w.push(C);u.postMessage({cmd:"load",handlers:w,urlOrBlob:p.mainScriptUrlOrBlob||n,wasmMemory:R,wasmModule:ie})})};p.PThread=be;var bn=u=>{for(;0<u.length;)u.shift()(p)};p.establishStackSpace=()=>{var u=Hi(),m=f()[u+52>>>2>>>0];u=f()[u+56>>>2>>>0],Gg(m,m-u),ji(m)};function Ii(u){if(H)return Oe(1,0,u);Qr(u)}p.invokeEntryPoint=(u,m)=>{ut=0,u=Hg(u,m),0<ut?be.Ob(u):qo(u)};class Do{constructor(m){this.Ib=m-24}Gb(m,w){f()[this.Ib+16>>>2>>>0]=0,f()[this.Ib+4>>>2>>>0]=m,f()[this.Ib+8>>>2>>>0]=w}}var Ai=0;function Oi(u,m,w,$){return H?Oe(2,1,u,m,w,$):vn(u,m,w,$)}function vn(u,m,w,$){if(u>>>=0,m>>>=0,w>>>=0,$>>>=0,typeof SharedArrayBuffer>"u")return he("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var C=[];return H&&C.length===0?Oi(u,m,w,$):(u={fc:w,wb:u,Rb:$,mc:C},H?(u.oc="spawnThread",postMessage(u,C),0):wn(u))}var ga=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Xr=(u,m,w)=>{m>>>=0;var $=m+w;for(w=m;u[w]&&!(w>=$);)++w;if(16<w-m&&u.buffer&&ga)return ga.decode(u.buffer instanceof SharedArrayBuffer?u.slice(m,w):u.subarray(m,w));for($="";m<w;){var C=u[m++];if(C&128){var M=u[m++]&63;if((C&224)==192)$+=String.fromCharCode((C&31)<<6|M);else{var V=u[m++]&63;C=(C&240)==224?(C&15)<<12|M<<6|V:(C&7)<<18|M<<12|V<<6|u[m++]&63,65536>C?$+=String.fromCharCode(C):(C-=65536,$+=String.fromCharCode(55296|C>>10,56320|C&1023))}}else $+=String.fromCharCode(C)}return $},tt=(u,m)=>(u>>>=0)?Xr(o(),u,m):"";function Mi(u,m,w){return H?Oe(3,1,u,m,w):0}function rr(u,m){if(H)return Oe(4,1,u,m)}var kt=u=>{for(var m=0,w=0;w<u.length;++w){var $=u.charCodeAt(w);127>=$?m++:2047>=$?m+=2:55296<=$&&57343>=$?(m+=4,++w):m+=3}return m},_a=(u,m,w,$)=>{if(w>>>=0,!(0<$))return 0;var C=w;$=w+$-1;for(var M=0;M<u.length;++M){var V=u.charCodeAt(M);if(55296<=V&&57343>=V){var Q=u.charCodeAt(++M);V=65536+((V&1023)<<10)|Q&1023}if(127>=V){if(w>=$)break;m[w++>>>0]=V}else{if(2047>=V){if(w+1>=$)break;m[w++>>>0]=192|V>>6}else{if(65535>=V){if(w+2>=$)break;m[w++>>>0]=224|V>>12}else{if(w+3>=$)break;m[w++>>>0]=240|V>>18,m[w++>>>0]=128|V>>12&63}m[w++>>>0]=128|V>>6&63}m[w++>>>0]=128|V&63}}return m[w>>>0]=0,w-C},nr=(u,m,w)=>_a(u,o(),m,w);function ya(u,m){if(H)return Oe(5,1,u,m)}function wa(u,m,w){if(H)return Oe(6,1,u,m,w)}function zi(u,m,w){return H?Oe(7,1,u,m,w):0}function $n(u,m){if(H)return Oe(8,1,u,m)}function Ri(u,m,w){if(H)return Oe(9,1,u,m,w)}function Pi(u,m,w,$){if(H)return Oe(10,1,u,m,w,$)}function Bi(u,m,w,$){if(H)return Oe(11,1,u,m,w,$)}function Di(u,m,w,$){if(H)return Oe(12,1,u,m,w,$)}function ba(u){if(H)return Oe(13,1,u)}function Jr(u,m){if(H)return Oe(14,1,u,m)}function Ni(u,m,w){if(H)return Oe(15,1,u,m,w)}var xn,zt=u=>{for(var m="";o()[u>>>0];)m+=xn[o()[u++>>>0]];return m},va={},$a={},ar;function No(u,m,w={}){var $=m.name;if(!u)throw new ar(`type "${$}" must have a positive integer typeid pointer`);if($a.hasOwnProperty(u)){if(w.Ub)return;throw new ar(`Cannot register type '${$}' twice`)}$a[u]=m,va.hasOwnProperty(u)&&(m=va[u],delete va[u],m.forEach(C=>C()))}function ht(u,m,w={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return No(u,m,w)}var xa=(u,m,w)=>{switch(m){case 1:return w?$=>i()[$>>>0]:$=>o()[$>>>0];case 2:return w?$=>l()[$>>>1>>>0]:$=>d()[$>>>1>>>0];case 4:return w?$=>c()[$>>>2>>>0]:$=>f()[$>>>2>>>0];case 8:return w?$=>je[$>>>3]:$=>at[$>>>3];default:throw new TypeError(`invalid integer width (${m}): ${u}`)}},Sn=[],Rt=[];function kn(u){u>>>=0,9<u&&--Rt[u+1]===0&&(Rt[u]=void 0,Sn.push(u))}var lt=u=>{if(!u)throw new ar("Cannot use deleted val. handle = "+u);return Rt[u]},Et=u=>{switch(u){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=Sn.pop()||Rt.length;return Rt[m]=u,Rt[m+1]=1,m}};function Zr(u){return this.fromWireType(f()[u>>>2>>>0])}var Fo={name:"emscripten::val",fromWireType:u=>{var m=lt(u);return kn(u),m},toWireType:(u,m)=>Et(m),argPackAdvance:8,readValueFromPointer:Zr,Bb:null},Fi=(u,m)=>{switch(m){case 4:return function(w){return this.fromWireType(g()[w>>>2>>>0])};case 8:return function(w){return this.fromWireType(y()[w>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${u}`)}},Sa=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Lo=(u,m)=>{for(var w=u>>1,$=w+m/2;!(w>=$)&&d()[w>>>0];)++w;if(w<<=1,32<w-u&&Sa)return Sa.decode(o().slice(u,w));for(w="",$=0;!($>=m/2);++$){var C=l()[u+2*$>>>1>>>0];if(C==0)break;w+=String.fromCharCode(C)}return w},Li=(u,m,w)=>{if(w??(w=2147483647),2>w)return 0;w-=2;var $=m;w=w<2*u.length?w/2:u.length;for(var C=0;C<w;++C){var M=u.charCodeAt(C);l()[m>>>1>>>0]=M,m+=2}return l()[m>>>1>>>0]=0,m-$},Ui=u=>2*u.length,En=(u,m)=>{for(var w=0,$="";!(w>=m/4);){var C=c()[u+4*w>>>2>>>0];if(C==0)break;++w,65536<=C?(C-=65536,$+=String.fromCharCode(55296|C>>10,56320|C&1023)):$+=String.fromCharCode(C)}return $},Uo=(u,m,w)=>{if(m>>>=0,w??(w=2147483647),4>w)return 0;var $=m;w=$+w-4;for(var C=0;C<u.length;++C){var M=u.charCodeAt(C);if(55296<=M&&57343>=M){var V=u.charCodeAt(++C);M=65536+((M&1023)<<10)|V&1023}if(c()[m>>>2>>>0]=M,m+=4,m+4>w)break}return c()[m>>>2>>>0]=0,m-$},we=u=>{for(var m=0,w=0;w<u.length;++w){var $=u.charCodeAt(w);55296<=$&&57343>=$&&++w,m+=4}return m},ka=u=>{if(!le)try{if(u(),!(0<ut))try{H?qo(Ae):Qr(Ae)}catch(m){m instanceof xt||m=="unwind"||T(1,m)}}catch(m){m instanceof xt||m=="unwind"||T(1,m)}};function Tr(u){u>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(c(),u>>>2,u).value.then(yt),u+=128,Atomics.store(c(),u>>>2,1))}p.__emscripten_thread_mailbox_await=Tr;var yt=()=>{var u=Hi();u&&(Tr(u),ka(Vg))};p.checkMailbox=yt;var Cn=[],Tn=(u,m)=>{var w=$a[u];if(w===void 0)throw u=Lg(u),w=zt(u),dr(u),new ar(`${m} has unknown type ${w}`);return w},Ea=(u,m,w)=>{var $=[];return u=u.toWireType($,w),$.length&&(f()[m>>>2>>>0]=Et($)),u},en=u=>{try{u()}catch(m){Ke(m)}};function Wi(){var u=ce,m={};for(let[w,$]of Object.entries(u))m[w]=typeof $=="function"?(...C)=>{yr.push(w);try{return $(...C)}finally{le||(yr.pop(),Pt&&ir===1&&yr.length===0&&(ir=0,ut+=1,en(jg),typeof Fibers<"u"&&Fibers.rc()))}}:$;return m}var ir=0,Pt=null,Vi=0,yr=[],Ca={},h={},_=0,b=null,x=[];function A(){return new Promise((u,m)=>{b={resolve:u,reject:m}})}function P(){var u=qi(65548),m=u+12;f()[u>>>2>>>0]=m,f()[u+4>>>2>>>0]=m+65536,m=yr[0];var w=Ca[m];return w===void 0&&(w=_++,Ca[m]=w,h[w]=m),m=w,c()[u+8>>>2>>>0]=m,u}function j(){var u=c()[Pt+8>>>2>>>0];return u=ce[h[u]],--ut,u()}function J(u){if(!le){if(ir===0){var m=!1,w=!1;u(($=0)=>{if(!le&&(Vi=$,m=!0,w)){ir=2,en(()=>Kg(Pt)),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.resume(),$=!1;try{var C=j()}catch(Q){C=Q,$=!0}var M=!1;if(!Pt){var V=b;V&&(b=null,($?V.reject:V.resolve)(C),M=!0)}if($&&!M)throw C}}),w=!0,m||(ir=1,Pt=P(),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.pause(),en(()=>qg(Pt)))}else ir===2?(ir=0,en(Yg),dr(Pt),Pt=null,x.forEach(ka)):Ke(`invalid state: ${ir}`);return Vi}}function se(u){return J(m=>{u().then(m)})}var re=[],fe={},Be=u=>{var m=fe[u];return m===void 0?zt(u):m},Fe=()=>typeof globalThis=="object"?globalThis:Function("return this")(),N=u=>{var m=re.length;return re.push(u),m},Se=(u,m)=>{for(var w=Array(u),$=0;$<u;++$)w[$]=Tn(f()[m+4*$>>>2>>>0],"parameter "+$);return w},ze=(u,m)=>Object.defineProperty(m,"name",{value:u});function wr(u){var m=Function;if(!(m instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof m} which is not a function`);var w=ze(m.name||"unknownFunctionName",function(){});return w.prototype=m.prototype,w=new w,u=m.apply(w,u),u instanceof Object?u:w}var br=u=>u%4===0&&(u%100!==0||u%400===0),Sg=[0,31,60,91,121,152,182,213,244,274,305,335],kg=[0,31,59,90,120,151,181,212,243,273,304,334];function Eg(u,m,w,$,C,M,V){return H?Oe(16,1,u,m,w,$,C,M,V):-52}function Cg(u,m,w,$,C,M){if(H)return Oe(17,1,u,m,w,$,C,M)}var Wo=[],Tg=(u,m)=>{Wo.length=0;for(var w;w=o()[u++>>>0];){var $=w!=105;$&=w!=112,m+=$&&m%8?4:0,Wo.push(w==112?f()[m>>>2>>>0]:w==106?je[m>>>3]:w==105?c()[m>>>2>>>0]:y()[m>>>3>>>0]),m+=$?8:4}return Wo},Vo={},Ig=()=>{if(!Go){var u={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:I||"./this.program"},m;for(m in Vo)Vo[m]===void 0?delete u[m]:u[m]=Vo[m];var w=[];for(m in u)w.push(`${m}=${u[m]}`);Go=w}return Go},Go;function Ag(u,m){if(H)return Oe(18,1,u,m);u>>>=0,m>>>=0;var w=0;return Ig().forEach(($,C)=>{var M=m+w;for(C=f()[u+4*C>>>2>>>0]=M,M=0;M<$.length;++M)i()[C++>>>0]=$.charCodeAt(M);i()[C>>>0]=0,w+=$.length+1}),0}function Og(u,m){if(H)return Oe(19,1,u,m);u>>>=0,m>>>=0;var w=Ig();f()[u>>>2>>>0]=w.length;var $=0;return w.forEach(C=>$+=C.length+1),f()[m>>>2>>>0]=$,0}function Mg(u){return H?Oe(20,1,u):52}function zg(u,m,w,$){return H?Oe(21,1,u,m,w,$):52}function Rg(u,m,w,$){return H?Oe(22,1,u,m,w,$):70}var Lx=[null,[],[]];function Pg(u,m,w,$){if(H)return Oe(23,1,u,m,w,$);m>>>=0,w>>>=0,$>>>=0;for(var C=0,M=0;M<w;M++){var V=f()[m>>>2>>>0],Q=f()[m+4>>>2>>>0];m+=8;for(var ue=0;ue<Q;ue++){var ae=o()[V+ue>>>0],ge=Lx[u];ae===0||ae===10?((u===1?ye:he)(Xr(ge,0)),ge.length=0):ge.push(ae)}C+=Q}return f()[$>>>2>>>0]=C,0}var Bg=[31,29,31,30,31,30,31,31,30,31,30,31],Dg=[31,28,31,30,31,30,31,31,30,31,30,31];function Ux(u){var m=Array(kt(u)+1);return _a(u,m,0,m.length),m}var Wx=(u,m)=>{i().set(u,m>>>0)};function Ng(u,m,w,$){function C(U,Ce,Ne){for(U=typeof U=="number"?U.toString():U||"";U.length<Ce;)U=Ne[0]+U;return U}function M(U,Ce){return C(U,Ce,"0")}function V(U,Ce){function Ne(Xg){return 0>Xg?-1:0<Xg?1:0}var tn;return(tn=Ne(U.getFullYear()-Ce.getFullYear()))===0&&(tn=Ne(U.getMonth()-Ce.getMonth()))===0&&(tn=Ne(U.getDate()-Ce.getDate())),tn}function Q(U){switch(U.getDay()){case 0:return new Date(U.getFullYear()-1,11,29);case 1:return U;case 2:return new Date(U.getFullYear(),0,3);case 3:return new Date(U.getFullYear(),0,2);case 4:return new Date(U.getFullYear(),0,1);case 5:return new Date(U.getFullYear()-1,11,31);case 6:return new Date(U.getFullYear()-1,11,30)}}function ue(U){var Ce=U.zb;for(U=new Date(new Date(U.Ab+1900,0,1).getTime());0<Ce;){var Ne=U.getMonth(),tn=(br(U.getFullYear())?Bg:Dg)[Ne];if(Ce>tn-U.getDate())Ce-=tn-U.getDate()+1,U.setDate(1),11>Ne?U.setMonth(Ne+1):(U.setMonth(0),U.setFullYear(U.getFullYear()+1));else{U.setDate(U.getDate()+Ce);break}}return Ne=new Date(U.getFullYear()+1,0,4),Ce=Q(new Date(U.getFullYear(),0,4)),Ne=Q(Ne),0>=V(Ce,U)?0>=V(Ne,U)?U.getFullYear()+1:U.getFullYear():U.getFullYear()-1}u>>>=0,m>>>=0,w>>>=0,$>>>=0;var ae=f()[$+40>>>2>>>0];$={kc:c()[$>>>2>>>0],jc:c()[$+4>>>2>>>0],Eb:c()[$+8>>>2>>>0],Jb:c()[$+12>>>2>>>0],Fb:c()[$+16>>>2>>>0],Ab:c()[$+20>>>2>>>0],vb:c()[$+24>>>2>>>0],zb:c()[$+28>>>2>>>0],qc:c()[$+32>>>2>>>0],ic:c()[$+36>>>2>>>0],lc:ae?tt(ae):""},w=tt(w),ae={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ge in ae)w=w.replace(new RegExp(ge,"g"),ae[ge]);var Le="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),We="January February March April May June July August September October November December".split(" ");ae={"%a":U=>Le[U.vb].substring(0,3),"%A":U=>Le[U.vb],"%b":U=>We[U.Fb].substring(0,3),"%B":U=>We[U.Fb],"%C":U=>M((U.Ab+1900)/100|0,2),"%d":U=>M(U.Jb,2),"%e":U=>C(U.Jb,2," "),"%g":U=>ue(U).toString().substring(2),"%G":ue,"%H":U=>M(U.Eb,2),"%I":U=>(U=U.Eb,U==0?U=12:12<U&&(U-=12),M(U,2)),"%j":U=>{for(var Ce=0,Ne=0;Ne<=U.Fb-1;Ce+=(br(U.Ab+1900)?Bg:Dg)[Ne++]);return M(U.Jb+Ce,3)},"%m":U=>M(U.Fb+1,2),"%M":U=>M(U.jc,2),"%n":()=>`
`,"%p":U=>0<=U.Eb&&12>U.Eb?"AM":"PM","%S":U=>M(U.kc,2),"%t":()=>"	","%u":U=>U.vb||7,"%U":U=>M(Math.floor((U.zb+7-U.vb)/7),2),"%V":U=>{var Ce=Math.floor((U.zb+7-(U.vb+6)%7)/7);if(2>=(U.vb+371-U.zb-2)%7&&Ce++,Ce)Ce==53&&(Ne=(U.vb+371-U.zb)%7,Ne==4||Ne==3&&br(U.Ab)||(Ce=1));else{Ce=52;var Ne=(U.vb+7-U.zb-1)%7;(Ne==4||Ne==5&&br(U.Ab%400-1))&&Ce++}return M(Ce,2)},"%w":U=>U.vb,"%W":U=>M(Math.floor((U.zb+7-(U.vb+6)%7)/7),2),"%y":U=>(U.Ab+1900).toString().substring(2),"%Y":U=>U.Ab+1900,"%z":U=>{U=U.ic;var Ce=0<=U;return U=Math.abs(U)/60,(Ce?"+":"-")+("0000"+(U/60*100+U%60)).slice(-4)},"%Z":U=>U.lc,"%%":()=>"%"},w=w.replace(/%%/g,"\0\0");for(ge in ae)w.includes(ge)&&(w=w.replace(new RegExp(ge,"g"),ae[ge]($)));return w=w.replace(/\0\0/g,"%"),ge=Ux(w),ge.length>m?0:(Wx(ge,u),ge.length-1)}be.Gb();for(var Fg=Array(256),Gi=0;256>Gi;++Gi)Fg[Gi]=String.fromCharCode(Gi);xn=Fg,ar=p.BindingError=class extends Error{constructor(u){super(u),this.name="BindingError"}},p.InternalError=class extends Error{constructor(u){super(u),this.name="InternalError"}},Rt.push(0,1,void 0,1,null,1,!0,1,!1,1),p.count_emval_handles=()=>Rt.length/2-5-Sn.length;var Vx=[St,Ii,Oi,Mi,rr,ya,wa,zi,$n,Ri,Pi,Bi,Di,ba,Jr,Ni,Eg,Cg,Ag,Og,Mg,zg,Rg,Pg],Gx={ua:function(u,m,w){return se(async()=>{await p.Zb(u,m,w)})},b:function(u,m,w){throw u>>>=0,new Do(u).Gb(m>>>0,w>>>0),Ai=u,Ai},ia:function(u){Ug(u>>>0,!B,1,!F,131072,!1),be.Pb()},G:function(u){u>>>=0,H?postMessage({cmd:"cleanupThread",thread:u}):be.Nb(be.ub[u])},_:vn,B:Mi,pa:rr,W:ya,Y:wa,qa:zi,na:$n,fa:Ri,ma:Pi,K:Bi,X:Di,U:ba,oa:Jr,V:Ni,E:function(u,m,w){u>>>=0,w>>>=0,m=zt(m>>>0),ht(u,{name:m,fromWireType:$=>$,toWireType:function($,C){if(typeof C!="bigint"&&typeof C!="number")throw C===null?C="null":($=typeof C,C=$==="object"||$==="array"||$==="function"?C.toString():""+C),new TypeError(`Cannot convert "${C}" to ${this.name}`);return typeof C=="number"&&(C=BigInt(C)),C},argPackAdvance:8,readValueFromPointer:xa(m,w,m.indexOf("u")==-1),Bb:null})},O:function(u,m,w,$){u>>>=0,m=zt(m>>>0),ht(u,{name:m,fromWireType:function(C){return!!C},toWireType:function(C,M){return M?w:$},argPackAdvance:8,readValueFromPointer:function(C){return this.fromWireType(o()[C>>>0])},Bb:null})},N:function(u){return ht(u>>>0,Fo)},D:function(u,m,w){u>>>=0,w>>>=0,m=zt(m>>>0),ht(u,{name:m,fromWireType:$=>$,toWireType:($,C)=>C,argPackAdvance:8,readValueFromPointer:Fi(m,w),Bb:null})},t:function(u,m,w,$,C){if(u>>>=0,w>>>=0,m=zt(m>>>0),C===-1&&(C=4294967295),C=Q=>Q,$===0){var M=32-8*w;C=Q=>Q<<M>>>M}var V=m.includes("unsigned")?function(Q,ue){return ue>>>0}:function(Q,ue){return ue};ht(u,{name:m,fromWireType:C,toWireType:V,argPackAdvance:8,readValueFromPointer:xa(m,w,$!==0),Bb:null})},p:function(u,m,w){function $(M){var V=f()[M>>>2>>>0];return M=f()[M+4>>>2>>>0],new C(i().buffer,M,V)}u>>>=0;var C=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];w=zt(w>>>0),ht(u,{name:w,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{Ub:!0})},F:function(u,m){u>>>=0,m=zt(m>>>0);var w=m==="std::string";ht(u,{name:m,fromWireType:function($){var C=f()[$>>>2>>>0],M=$+4;if(w)for(var V=M,Q=0;Q<=C;++Q){var ue=M+Q;if(Q==C||o()[ue>>>0]==0){if(V=tt(V,ue-V),ae===void 0)var ae=V;else ae+="\0",ae+=V;V=ue+1}}else{for(ae=Array(C),Q=0;Q<C;++Q)ae[Q]=String.fromCharCode(o()[M+Q>>>0]);ae=ae.join("")}return dr($),ae},toWireType:function($,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var M=typeof C=="string";if(!(M||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new ar("Cannot pass non-string to std::string");var V=w&&M?kt(C):C.length,Q=qi(4+V+1),ue=Q+4;if(f()[Q>>>2>>>0]=V,w&&M)nr(C,ue,V+1);else if(M)for(M=0;M<V;++M){var ae=C.charCodeAt(M);if(255<ae)throw dr(ue),new ar("String has UTF-16 code units that do not fit in 8 bits");o()[ue+M>>>0]=ae}else for(M=0;M<V;++M)o()[ue+M>>>0]=C[M];return $!==null&&$.push(dr,Q),Q},argPackAdvance:8,readValueFromPointer:Zr,Bb($){dr($)}})},A:function(u,m,w){if(u>>>=0,m>>>=0,w>>>=0,w=zt(w),m===2)var $=Lo,C=Li,M=Ui,V=Q=>d()[Q>>>1>>>0];else m===4&&($=En,C=Uo,M=we,V=Q=>f()[Q>>>2>>>0]);ht(u,{name:w,fromWireType:Q=>{for(var ue=f()[Q>>>2>>>0],ae,ge=Q+4,Le=0;Le<=ue;++Le){var We=Q+4+Le*m;(Le==ue||V(We)==0)&&(ge=$(ge,We-ge),ae===void 0?ae=ge:(ae+="\0",ae+=ge),ge=We+m)}return dr(Q),ae},toWireType:(Q,ue)=>{if(typeof ue!="string")throw new ar(`Cannot pass non-string to C++ string type ${w}`);var ae=M(ue),ge=qi(4+ae+m);return f()[ge>>>2>>>0]=ae/m,C(ue,ge+4,ae+m),Q!==null&&Q.push(dr,ge),ge},argPackAdvance:8,readValueFromPointer:Zr,Bb(Q){dr(Q)}})},P:function(u,m){u>>>=0,m=zt(m>>>0),ht(u,{Vb:!0,name:m,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ta:()=>1,S:function(u,m){u>>>=0,u==m>>>0?setTimeout(yt):H?postMessage({targetThread:u,cmd:"checkMailbox"}):(u=be.ub[u])&&u.postMessage({cmd:"checkMailbox"})},$:function(u,m,w,$,C){m>>>=0,w>>>=0,$/=2,Cn.length=$,C=C>>>0>>>3;for(var M=0;M<$;M++)Cn[M]=je[C+2*M]?je[C+2*M+1]:y()[C+2*M+1>>>0];return u=m?fa[m]:Vx[u],be.Sb=w,w=u(...Cn),be.Sb=0,w},ha:Tr,sa:function(u){G&&be.ub[u>>>0].ref()},w:function(u,m,w){return m>>>=0,w>>>=0,u=lt(u>>>0),m=Tn(m,"emval::as"),Ea(m,w,u)},z:function(u){return u>>>=0,se(()=>(u=lt(u),u.then(Et)))},o:function(u,m,w,$){return w>>>=0,$>>>=0,u=re[u>>>0],m=lt(m>>>0),u(null,m,w,$)},k:function(u,m,w,$,C){return w>>>=0,$>>>=0,C>>>=0,u=re[u>>>0],m=lt(m>>>0),w=Be(w),u(m,m[w],$,C)},c:kn,y:function(u,m){return m>>>=0,u=lt(u>>>0),m=lt(m),u==m},n:function(u){return u>>>=0,u===0?Et(Fe()):(u=Be(u),Et(Fe()[u]))},j:function(u,m,w){m=Se(u,m>>>0);var $=m.shift();u--;var C=`return function (obj, func, destructorsRef, args) {
`,M=0,V=[];w===0&&V.push("obj");for(var Q=["retType"],ue=[$],ae=0;ae<u;++ae)V.push("arg"+ae),Q.push("argType"+ae),ue.push(m[ae]),C+=`  var arg${ae} = argType${ae}.readValueFromPointer(args${M?"+"+M:""});
`,M+=m[ae].argPackAdvance;return C+=`  var rv = ${w===1?"new func":"func.call"}(${V.join(", ")});
`,$.Vb||(Q.push("emval_returnValue"),ue.push(Ea),C+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Q.push(C+`};
`),u=wr(Q)(...ue),w=`methodCaller<(${m.map(ge=>ge.name).join(", ")}) => ${$.name}>`,N(ze(w,u))},s:function(u,m){return m>>>=0,u=lt(u>>>0),m=lt(m),Et(u[m])},d:function(u){u>>>=0,9<u&&(Rt[u+1]+=1)},v:function(){return Et([])},m:function(u){u=lt(u>>>0);for(var m=Array(u.length),w=0;w<u.length;w++)m[w]=u[w];return Et(m)},g:function(u){return Et(Be(u>>>0))},l:function(){return Et({})},i:function(u){u>>>=0;for(var m=lt(u);m.length;){var w=m.pop();m.pop()(w)}kn(u)},h:function(u,m,w){m>>>=0,w>>>=0,u=lt(u>>>0),m=lt(m),w=lt(w),u[m]=w},e:function(u,m){return m>>>=0,u=Tn(u>>>0,"_emval_take_value"),u=u.readValueFromPointer(m),Et(u)},ca:function(u,m){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),m>>>=0,u=new Date(1e3*u),c()[m>>>2>>>0]=u.getUTCSeconds(),c()[m+4>>>2>>>0]=u.getUTCMinutes(),c()[m+8>>>2>>>0]=u.getUTCHours(),c()[m+12>>>2>>>0]=u.getUTCDate(),c()[m+16>>>2>>>0]=u.getUTCMonth(),c()[m+20>>>2>>>0]=u.getUTCFullYear()-1900,c()[m+24>>>2>>>0]=u.getUTCDay(),u=(u.getTime()-Date.UTC(u.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,c()[m+28>>>2>>>0]=u},da:function(u,m){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),m>>>=0,u=new Date(1e3*u),c()[m>>>2>>>0]=u.getSeconds(),c()[m+4>>>2>>>0]=u.getMinutes(),c()[m+8>>>2>>>0]=u.getHours(),c()[m+12>>>2>>>0]=u.getDate(),c()[m+16>>>2>>>0]=u.getMonth(),c()[m+20>>>2>>>0]=u.getFullYear()-1900,c()[m+24>>>2>>>0]=u.getDay();var w=(br(u.getFullYear())?Sg:kg)[u.getMonth()]+u.getDate()-1|0;c()[m+28>>>2>>>0]=w,c()[m+36>>>2>>>0]=-(60*u.getTimezoneOffset()),w=new Date(u.getFullYear(),6,1).getTimezoneOffset();var $=new Date(u.getFullYear(),0,1).getTimezoneOffset();u=(w!=$&&u.getTimezoneOffset()==Math.min($,w))|0,c()[m+32>>>2>>>0]=u},ea:function(u){u>>>=0;var m=new Date(c()[u+20>>>2>>>0]+1900,c()[u+16>>>2>>>0],c()[u+12>>>2>>>0],c()[u+8>>>2>>>0],c()[u+4>>>2>>>0],c()[u>>>2>>>0],0),w=c()[u+32>>>2>>>0],$=m.getTimezoneOffset(),C=new Date(m.getFullYear(),6,1).getTimezoneOffset(),M=new Date(m.getFullYear(),0,1).getTimezoneOffset(),V=Math.min(M,C);return 0>w?c()[u+32>>>2>>>0]=+(C!=M&&V==$):0<w!=(V==$)&&(C=Math.max(M,C),m.setTime(m.getTime()+6e4*((0<w?V:C)-$))),c()[u+24>>>2>>>0]=m.getDay(),w=(br(m.getFullYear())?Sg:kg)[m.getMonth()]+m.getDate()-1|0,c()[u+28>>>2>>>0]=w,c()[u>>>2>>>0]=m.getSeconds(),c()[u+4>>>2>>>0]=m.getMinutes(),c()[u+8>>>2>>>0]=m.getHours(),c()[u+12>>>2>>>0]=m.getDate(),c()[u+16>>>2>>>0]=m.getMonth(),c()[u+20>>>2>>>0]=m.getYear(),u=m.getTime(),BigInt(isNaN(u)?-1:u/1e3)},aa:Eg,ba:Cg,R:function(u,m,w,$){u>>>=0,m>>>=0,w>>>=0,$>>>=0;var C=new Date().getFullYear(),M=new Date(C,0,1),V=new Date(C,6,1);C=M.getTimezoneOffset();var Q=V.getTimezoneOffset(),ue=Math.max(C,Q);f()[u>>>2>>>0]=60*ue,c()[m>>>2>>>0]=+(C!=Q),u=ae=>ae.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],M=u(M),V=u(V),Q<C?(nr(M,w,17),nr(V,$,17)):(nr(M,$,17),nr(V,w,17))},q:()=>{Ke("")},f:function(u,m,w){return u>>>=0,m=Tg(m>>>0,w>>>0),fa[u](...m)},M:function(u,m,w){return u>>>=0,m=Tg(m>>>0,w>>>0),fa[u](...m)},H:()=>{},L:()=>Date.now(),ra:()=>{throw ut+=1,"unwind"},T:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>G?(D0(),zr(Iu)).cpus().length:navigator.hardwareConcurrency,Q:function(u){u>>>=0;var m=o().length;if(u<=m||4294901760<u)return!1;for(var w=1;4>=w;w*=2){var $=m*(1+.2/w);$=Math.min($,u+100663296);var C=Math;$=Math.max(u,$);e:{C=(C.min.call(C,4294901760,$+(65536-$%65536)%65536)-R.buffer.byteLength+65535)/65536;try{R.grow(C),pt();var M=1;break e}catch{}M=void 0}if(M)return!0}return!1},ja:Ag,la:Og,Z:Qr,C:Mg,J:zg,ga:Rg,I:Pg,a:R||p.wasmMemory,ka:Ng,r:function(u,m,w,$){return Ng(u>>>0,m>>>0,w>>>0,$>>>0)}},ce=function(){function u(w,$){return ce=w.exports,ce=Wi(),ce=Hx(),be.Qb.push(ce.cb),Yr.unshift(ce.va),ie=$,pa(),ce}var m={a:Gx};if(_r++,p.instantiateWasm)try{return p.instantiateWasm(m,u)}catch(w){he(`Module.instantiateWasm callback failed with error: ${w}`),S(w)}return lr(m,function(w){u(w.instance,w.module)}).catch(S),{}}(),Lg=u=>(Lg=ce.wa)(u);p.__embind_initialize_bindings=()=>(p.__embind_initialize_bindings=ce.xa)(),p._OrtInit=(u,m)=>(p._OrtInit=ce.ya)(u,m),p._OrtGetLastError=(u,m)=>(p._OrtGetLastError=ce.za)(u,m),p._OrtCreateSessionOptions=(u,m,w,$,C,M,V,Q,ue,ae)=>(p._OrtCreateSessionOptions=ce.Aa)(u,m,w,$,C,M,V,Q,ue,ae),p._OrtAppendExecutionProvider=(u,m)=>(p._OrtAppendExecutionProvider=ce.Ba)(u,m),p._OrtAddFreeDimensionOverride=(u,m,w)=>(p._OrtAddFreeDimensionOverride=ce.Ca)(u,m,w),p._OrtAddSessionConfigEntry=(u,m,w)=>(p._OrtAddSessionConfigEntry=ce.Da)(u,m,w),p._OrtReleaseSessionOptions=u=>(p._OrtReleaseSessionOptions=ce.Ea)(u),p._OrtCreateSession=(u,m,w)=>(p._OrtCreateSession=ce.Fa)(u,m,w),p._OrtReleaseSession=u=>(p._OrtReleaseSession=ce.Ga)(u),p._OrtGetInputOutputCount=(u,m,w)=>(p._OrtGetInputOutputCount=ce.Ha)(u,m,w),p._OrtGetInputName=(u,m)=>(p._OrtGetInputName=ce.Ia)(u,m),p._OrtGetOutputName=(u,m)=>(p._OrtGetOutputName=ce.Ja)(u,m),p._OrtFree=u=>(p._OrtFree=ce.Ka)(u),p._OrtCreateTensor=(u,m,w,$,C,M)=>(p._OrtCreateTensor=ce.La)(u,m,w,$,C,M),p._OrtGetTensorData=(u,m,w,$,C)=>(p._OrtGetTensorData=ce.Ma)(u,m,w,$,C),p._OrtReleaseTensor=u=>(p._OrtReleaseTensor=ce.Na)(u),p._OrtCreateRunOptions=(u,m,w,$)=>(p._OrtCreateRunOptions=ce.Oa)(u,m,w,$),p._OrtAddRunConfigEntry=(u,m,w)=>(p._OrtAddRunConfigEntry=ce.Pa)(u,m,w),p._OrtReleaseRunOptions=u=>(p._OrtReleaseRunOptions=ce.Qa)(u),p._OrtCreateBinding=u=>(p._OrtCreateBinding=ce.Ra)(u),p._OrtBindInput=(u,m,w)=>(p._OrtBindInput=ce.Sa)(u,m,w),p._OrtBindOutput=(u,m,w,$)=>(p._OrtBindOutput=ce.Ta)(u,m,w,$),p._OrtClearBoundOutputs=u=>(p._OrtClearBoundOutputs=ce.Ua)(u),p._OrtReleaseBinding=u=>(p._OrtReleaseBinding=ce.Va)(u),p._OrtRunWithBinding=(u,m,w,$,C)=>(p._OrtRunWithBinding=ce.Wa)(u,m,w,$,C),p._OrtRun=(u,m,w,$,C,M,V,Q)=>(p._OrtRun=ce.Xa)(u,m,w,$,C,M,V,Q),p._OrtEndProfiling=u=>(p._OrtEndProfiling=ce.Ya)(u),p._JsepOutput=(u,m,w)=>(p._JsepOutput=ce.Za)(u,m,w),p._JsepGetNodeName=u=>(p._JsepGetNodeName=ce._a)(u);var Hi=p._pthread_self=()=>(Hi=p._pthread_self=ce.$a)(),qi=p._malloc=u=>(qi=p._malloc=ce.ab)(u),dr=p._free=u=>(dr=p._free=ce.bb)(u);p.__emscripten_tls_init=()=>(p.__emscripten_tls_init=ce.cb)();var Ug=p.__emscripten_thread_init=(u,m,w,$,C,M)=>(Ug=p.__emscripten_thread_init=ce.eb)(u,m,w,$,C,M);p.__emscripten_thread_crashed=()=>(p.__emscripten_thread_crashed=ce.fb)();var Wg=(u,m,w,$,C)=>(Wg=ce.gb)(u,m,w,$,C),Ho=u=>(Ho=ce.hb)(u),qo=p.__emscripten_thread_exit=u=>(qo=p.__emscripten_thread_exit=ce.ib)(u),Vg=()=>(Vg=ce.jb)(),Gg=(u,m)=>(Gg=ce.kb)(u,m),ji=u=>(ji=ce.lb)(u),jo=u=>(jo=ce.mb)(u),Ko=()=>(Ko=ce.nb)(),Hg=p.dynCall_ii=(u,m)=>(Hg=p.dynCall_ii=ce.pb)(u,m),qg=u=>(qg=ce.qb)(u),jg=()=>(jg=ce.rb)(),Kg=u=>(Kg=ce.sb)(u),Yg=()=>(Yg=ce.tb)();p.___start_em_js=839500,p.___stop_em_js=839661;function Hx(){var u=ce;u=Object.assign({},u);var m=$=>C=>$(C)>>>0,w=$=>()=>$()>>>0;return u.wa=m(u.wa),u.$a=w(u.$a),u.ab=m(u.ab),u.emscripten_main_runtime_thread_id=w(u.emscripten_main_runtime_thread_id),u.mb=m(u.mb),u.nb=w(u.nb),u}p.wasmMemory=R,p.stackSave=()=>Ko(),p.stackRestore=u=>ji(u),p.stackAlloc=u=>jo(u),p.keepRuntimeAlive=()=>0<ut,p.UTF8ToString=tt,p.stringToUTF8=nr,p.lengthBytesUTF8=kt,p.ExitStatus=xt,p.PThread=be;var Ki;Er=function u(){Ki||Qg(),Ki||(Er=u)};function Qg(){if(!(0<_r))if(H)v(p),H||bn(Yr),startWorker(p);else{if(p.preRun)for(typeof p.preRun=="function"&&(p.preRun=[p.preRun]);p.preRun.length;)mn.unshift(p.preRun.shift());bn(mn),0<_r||Ki||(Ki=!0,p.calledRun=!0,le||(H||bn(Yr),v(p),H||bn(Po)))}}return Qg(),E}})();typeof t=="object"&&typeof e=="object"?e.exports=r:typeof define=="function"&&define.amd&&define([],()=>r)}),F0=rn((t,e)=>{e.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(...e){var a=e.join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,a+`\n`);return}console.error(a)}function threadAlert(...e){var a=e.join(" ");postMessage({cmd:"alert",text:a,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,a)=>{var r=Module.wasmModule;Module.wasmModule=null;var t=new WebAssembly.Instance(r,e);return a(t)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let r=[];self.onmessage=t=>r.push(t),self.startWorker=t=>{Module=t,postMessage({cmd:"loaded"});for(let s of r)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const t of e.data.handlers)Module[t]=(...s)=>{postMessage({cmd:"callHandler",handler:t,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var a=URL.createObjectURL(e.data.urlOrBlob);importScripts(a),URL.revokeObjectURL(a)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(r){if(r!="unwind")throw r}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(r){throw Module.__emscripten_thread_crashed?.(),r}}self.onmessage=handleMessage;\n'}),Ou,Mu,cs,Ba,zn,ps,zu,Ru,Pu,Bu,Ze,Rn=X(()=>{Ou=R0(),Mu=N0(),Ba=!1,zn=!1,ps=!1,zu=t=>{if(t===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+t+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Ru=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Pu=(t,e)=>t?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Bu=async t=>{if(Ba)return Promise.resolve();if(zn)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(ps)throw new Error("previous call to 'initializeWebAssembly()' failed.");zn=!0;let e=t.initTimeout,r=t.numThreads,n=t.simd,a=zu(r),s=n&&Ru(),i=t.wasmPaths,o=typeof i=="string"?i:void 0,l=Pu(s,a),d=typeof i=="object"?i[l]:void 0,c=!1,f=[];if(e>0&&f.push(new Promise(g=>{setTimeout(()=>{c=!0,g()},e)})),f.push(new Promise((g,y)=>{let p=a?Mu:Ou,v={locateFile:(S,E)=>{if(a&&S.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([F0()],{type:"text/javascript"}));if(S.endsWith(".wasm")){if(d)return d;let k=o??E;return l==="ort-wasm-simd.wasm"?k+"ort-wasm-simd.jsep.wasm":l==="ort-wasm-simd-threaded.wasm"?k+"ort-wasm-simd-threaded.jsep.wasm":k+l}return E+S}};if(a)if(v.numThreads=r,typeof Blob>"u")v.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let S=`var ortWasmThreaded=${p.toString()};`;v.mainScriptUrlOrBlob=new Blob([S],{type:"text/javascript"})}p(v).then(S=>{zn=!1,Ba=!0,cs=S,g()},S=>{zn=!1,ps=!0,y(S)})})),await Promise.race(f),c)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},Ze=()=>{if(Ba&&cs)return cs;throw new Error("WebAssembly is not initialized yet.")}}),Qe,Da,Ge,hs=X(()=>{Rn(),Qe=(t,e)=>{let r=Ze(),n=r.lengthBytesUTF8(t)+1,a=r._malloc(n);return r.stringToUTF8(t,a,n),e.push(a),a},Da=(t,e,r,n)=>{if(typeof t=="object"&&t!==null){if(r.has(t))throw new Error("Circular reference in options");r.add(t)}Object.entries(t).forEach(([a,s])=>{let i=e?e+a:a;if(typeof s=="object")Da(s,i+".",r,n);else if(typeof s=="string"||typeof s=="number")n(i,s.toString());else if(typeof s=="boolean")n(i,s?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof s}`)})},Ge=t=>{let e=Ze(),r=e.stackSave();try{let n=e.stackAlloc(8);e._OrtGetLastError(n,n+4);let a=e.HEAP32[n/4],s=e.HEAPU32[n/4+1],i=s?e.UTF8ToString(s):"";throw new Error(`${t} ERROR_CODE: ${a}, ERROR_MESSAGE: ${i}`)}finally{e.stackRestore(r)}}}),Du,L0=X(()=>{Rn(),hs(),Du=t=>{let e=Ze(),r=0,n=[],a=t||{};try{if((t==null?void 0:t.logSeverityLevel)===void 0)a.logSeverityLevel=2;else if(typeof t.logSeverityLevel!="number"||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if((t==null?void 0:t.logVerbosityLevel)===void 0)a.logVerbosityLevel=0;else if(typeof t.logVerbosityLevel!="number"||!Number.isInteger(t.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);(t==null?void 0:t.terminate)===void 0&&(a.terminate=!1);let s=0;return(t==null?void 0:t.tag)!==void 0&&(s=Qe(t.tag,n)),r=e._OrtCreateRunOptions(a.logSeverityLevel,a.logVerbosityLevel,!!a.terminate,s),r===0&&Ge("Can't create run options."),(t==null?void 0:t.extra)!==void 0&&Da(t.extra,"",new WeakSet,(i,o)=>{let l=Qe(i,n),d=Qe(o,n);e._OrtAddRunConfigEntry(r,l,d)!==0&&Ge(`Can't set a run config entry: ${i} - ${o}.`)}),[r,n]}catch(s){throw r!==0&&e._OrtReleaseRunOptions(r),n.forEach(i=>e._free(i)),s}}}),Nu,Fu,Lu,Uu,Wu,U0=X(()=>{Rn(),hs(),Nu=t=>{switch(t){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${t}`)}},Fu=t=>{switch(t){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${t}`)}},Lu=t=>{t.extra||(t.extra={}),t.extra.session||(t.extra.session={});let e=t.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),t.executionProviders&&t.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(t.enableMemPattern=!1)},Uu=(t,e,r)=>{for(let n of e){let a=typeof n=="string"?n:n.name;switch(a){case"webnn":if(a="WEBNN",typeof n!="string"){let i=n;if(i!=null&&i.deviceType){let o=Qe("deviceType",r),l=Qe(i.deviceType,r);Ze()._OrtAddSessionConfigEntry(t,o,l)!==0&&Ge(`Can't set a session config entry: 'deviceType' - ${i.deviceType}.`)}if(i!=null&&i.numThreads){let o=i.numThreads;(typeof o!="number"||!Number.isInteger(o)||o<0)&&(o=0);let l=Qe("numThreads",r),d=Qe(o.toString(),r);Ze()._OrtAddSessionConfigEntry(t,l,d)!==0&&Ge(`Can't set a session config entry: 'numThreads' - ${i.numThreads}.`)}if(i!=null&&i.powerPreference){let o=Qe("powerPreference",r),l=Qe(i.powerPreference,r);Ze()._OrtAddSessionConfigEntry(t,o,l)!==0&&Ge(`Can't set a session config entry: 'powerPreference' - ${i.powerPreference}.`)}}break;case"webgpu":if(a="JS",typeof n!="string"){let i=n;if(i!=null&&i.preferredLayout){if(i.preferredLayout!=="NCHW"&&i.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${i.preferredLayout}`);let o=Qe("preferredLayout",r),l=Qe(i.preferredLayout,r);Ze()._OrtAddSessionConfigEntry(t,o,l)!==0&&Ge(`Can't set a session config entry: 'preferredLayout' - ${i.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${a}`)}let s=Qe(a,r);Ze()._OrtAppendExecutionProvider(t,s)!==0&&Ge(`Can't append execution provider: ${a}.`)}},Wu=t=>{let e=Ze(),r=0,n=[],a=t||{};Lu(a);try{let s=Nu(a.graphOptimizationLevel??"all"),i=Fu(a.executionMode??"sequential"),o=typeof a.logId=="string"?Qe(a.logId,n):0,l=a.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let d=a.logVerbosityLevel??0;if(!Number.isInteger(d)||d<0||d>4)throw new Error(`log verbosity level is not valid: ${d}`);let c=typeof a.optimizedModelFilePath=="string"?Qe(a.optimizedModelFilePath,n):0;if(r=e._OrtCreateSessionOptions(s,!!a.enableCpuMemArena,!!a.enableMemPattern,i,!!a.enableProfiling,0,o,l,d,c),r===0&&Ge("Can't create session options."),a.executionProviders&&Uu(r,a.executionProviders,n),a.enableGraphCapture!==void 0){if(typeof a.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${a.enableGraphCapture}`);let f=Qe("enableGraphCapture",n),g=Qe(a.enableGraphCapture.toString(),n);e._OrtAddSessionConfigEntry(r,f,g)!==0&&Ge(`Can't set a session config entry: 'enableGraphCapture' - ${a.enableGraphCapture}.`)}if(a.freeDimensionOverrides)for(let[f,g]of Object.entries(a.freeDimensionOverrides)){if(typeof f!="string")throw new Error(`free dimension override name must be a string: ${f}`);if(typeof g!="number"||!Number.isInteger(g)||g<0)throw new Error(`free dimension override value must be a non-negative integer: ${g}`);let y=Qe(f,n);e._OrtAddFreeDimensionOverride(r,y,g)!==0&&Ge(`Can't set a free dimension override: ${f} - ${g}.`)}return a.extra!==void 0&&Da(a.extra,"",new WeakSet,(f,g)=>{let y=Qe(f,n),p=Qe(g,n);e._OrtAddSessionConfigEntry(r,y,p)!==0&&Ge(`Can't set a session config entry: ${f} - ${g}.`)}),[r,n]}catch(s){throw r!==0&&e._OrtReleaseSessionOptions(r),n.forEach(i=>e._free(i)),s}}}),fs,Br,Pn,ms,Na,gs,_s,$e=X(()=>{fs=t=>{switch(t){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${t}`)}},Br=t=>{switch(t){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${t}`)}},Pn=t=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][t],ms=t=>{switch(t){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${t}`)}},Na=t=>{switch(t){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${t}`)}},gs=t=>t==="float32"||t==="float16"||t==="int32"||t==="int64"||t==="uint32"||t==="uint8"||t==="bool",_s=t=>{switch(t){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${t}`)}}}),Fa,Vu=X(()=>{Fa=async t=>{if(typeof t=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(t))}catch(e){if(e.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(t),n=[];for await(let a of r)n.push(a);return new Uint8Array(Buffer.concat(n))}throw e}else{let e=await fetch(t);if(!e.ok)throw new Error(`failed to load external data file: ${t}`);let r=e.headers.get("Content-Length"),n=r?parseInt(r,10):0;if(n<1073741824)return new Uint8Array(await e.arrayBuffer());{if(!e.body)throw new Error(`failed to load external data file: ${t}, no response body.`);let a=e.body.getReader(),s;try{s=new ArrayBuffer(n)}catch(o){if(o instanceof RangeError){let l=Math.ceil(n/65536);s=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw o}let i=0;for(;;){let{done:o,value:l}=await a.read();if(o)break;let d=l.byteLength;new Uint8Array(s,i,d).set(l),i+=d}return new Uint8Array(s,0,n)}}else return t instanceof Blob?new Uint8Array(await t.arrayBuffer()):t instanceof Uint8Array?t:new Uint8Array(t)}}),Gu,Hu,qu,ju,Ku,Yu,Xe,Dr=X(()=>{$e(),Gu=["V","I","W","E","F"],Hu=(t,e)=>{console.log(`[${Gu[t]},${new Date().toISOString()}]${e}`)},Ku=(t,e)=>{qu=t,ju=e},Yu=(t,e)=>{let r=Na(t),n=Na(qu);r>=n&&Hu(r,typeof e=="function"?e():e)},Xe=(...t)=>{ju&&Yu(...t)}}),Qu,W0=X(()=>{$e(),Qu=(t,e)=>new(ms(e))(t)}),ys=X(()=>{}),ws,La,Ua,Xu,Ju,bs,vs,Zu,el,V0=X(()=>{Dr(),ys(),ws=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),La=[],Ua=t=>Math.ceil(t/16)*16,Xu=t=>{for(let e=0;e<La.length;e++){let r=La[e];if(t<=r)return r}return Math.ceil(t/16)*16},Ju=1,bs=()=>Ju++,vs=async(t,e,r,n)=>{let a=Ua(r),s=t.device.createBuffer({size:a,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let i=t.getCommandEncoder();t.endComputePass(),i.copyBufferToBuffer(e,0,s,0,a),t.flush(),await s.mapAsync(GPUMapMode.READ);let o=s.getMappedRange();if(n){let l=n();return l.set(new Uint8Array(o,0,r)),l}else return new Uint8Array(o.slice(0,r))}finally{s.destroy()}},Zu=class{constructor(t){this.backend=t,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map;for(let[e]of ws)La.push(e),this.freeBuffers.set(e,[]),this.freeUniformBuffers.set(e,[])}upload(t,e){let r=e.buffer,n=e.byteOffset,a=e.byteLength,s=Ua(a),i=this.storageCache.get(t);if(!i)throw new Error("gpu data for uploading does not exist");if(i.originalSize!==a)throw new Error(`inconsistent data size. gpu data size=${i.originalSize}, data size=${a}`);let o=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=o.getMappedRange();new Uint8Array(l).set(new Uint8Array(r,n,a)),o.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(o,0,i.gpuData.buffer,0,s),Xe("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(o)}memcpy(t,e){let r=this.storageCache.get(t);if(!r)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(e);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(r.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let a=Ua(r.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(r.gpuData.buffer,0,n.gpuData.buffer,0,a)}registerExternalBuffer(t,e,r){let n;if(r){if(n=this.externalBuffers.get(r),n===void 0)throw new Error("previous buffer is not registered");if(t===r)return Xe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${e}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);this.externalBuffers.delete(r)}else n=bs();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:t},originalSize:e}),this.externalBuffers.set(t,n),Xe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${e}) => id=${n}, registered.`),n}unregisterExternalBuffer(t){let e=this.externalBuffers.get(t);e!==void 0&&(this.storageCache.delete(e),this.externalBuffers.delete(t),Xe("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(t,e=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r=Xu(t),n,a=(e&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(e&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(a||s){let o=(a?this.freeBuffers:this.freeUniformBuffers).get(r);o?o.length>0?n=o.pop():n=this.backend.device.createBuffer({size:r,usage:e}):n=this.backend.device.createBuffer({size:r,usage:e})}else n=this.backend.device.createBuffer({size:r,usage:e});let i={id:bs(),type:0,buffer:n};return this.storageCache.set(i.id,{gpuData:i,originalSize:t}),Xe("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${i.id}`),i}get(t){var e;return(e=this.storageCache.get(t))==null?void 0:e.gpuData}release(t){let e=this.storageCache.get(t);if(!e)throw new Error("releasing data does not exist");return Xe("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${e.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(e.gpuData.buffer),e.originalSize}async download(t,e){let r=this.storageCache.get(t);if(!r)throw new Error("data does not exist");await vs(this.backend,r.gpuData.buffer,r.originalSize,e)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending){let e=ws.get(t.size);if((t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(t.size)||[];e===void 0||r.length>=e?t.destroy():r.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(t.size)||[];e===void 0||r.length>=e?t.destroy():r.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let e of this.buffersPending)t.push(e);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(e=>{e.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(e=>{e.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(e=>{e.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let e=this.capturedPendingBuffers.get(t);e&&(e.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(t))}},el=(...t)=>new Zu(...t)}),tl,He,st=X(()=>{tl=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},He=t=>new tl(t)}),rl,an,K,Wa,nl,$s,xs,Ie=X(()=>{rl=class{static calcMatMulShape(t,e){return t[1]!==e[0]?void 0:[t[0],e[1]]}},an=class{static calcShape(t,e,r=!1){let n=t.length,a=e.length;if(n===0)return e;if(a===0)return t;let s=Math.max(t.length,e.length),i=new Array(s);if(r){if(n<2||a<2)return;let o=rl.calcMatMulShape([t[n-2],t[n-1]],[e[a-2],e[a-1]]);if(o===void 0)return;[i[s-2],i[s-1]]=o}for(let o=r?3:1;o<=s;o++){let l=n-o<0?1:t[n-o],d=a-o<0?1:e[a-o];if(l!==d&&l>1&&d>1)return;let c=Math.max(l,d);if(l&&d)i[s-o]=Math.max(l,d);else{if(c>1)return;i[s-o]=0}}return i}static isValidBroadcast(t,e){let r=t.length,n=e.length;if(r>n)return!1;for(let a=1;a<=r;a++)if(t[r-a]!==1&&t[r-a]!==e[n-a])return!1;return!0}},K=class Yi{static size(e){return Yi.getSizeFromDimensionRange(e,0,e.length)}static convertShape(e,r=4){let n=e.length;if(n===0)return[];let a=new Array(n),s=n-1;for(;s>=0;){if(e[s]%r===0){a[s]=e[s]/r;break}if(r%e[s]!==0)throw new Error("cannot convert shape");a[s]=1,r/=e[s],s--}for(s--;s>=0;s--)a[s]=e[s];return a}static sizeFromDimension(e,r){if(r<0||r>e.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return Yi.getSizeFromDimensionRange(e,r,e.length)}static sizeToDimension(e,r){if(r<0||r>e.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${e.length} dimensions.`);return Yi.getSizeFromDimensionRange(e,0,r)}static getSizeFromDimensionRange(e,r,n){let a=1;for(let s=r;s<n;s++){if(e[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");a*=e[s]}return a}static computeStrides(e){let r=e.length;if(r===0)return[];if(r===1)return[1];let n=new Array(r);n[r-1]=1,n[r-2]=e[r-1];for(let a=r-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}static normalizeAxis(e,r){if(e<-r&&e>=r)throw new Error("unsupported axis for this operation.");return e<0?e+r:e}static normalizeAxes(e,r){return e.map(n=>this.normalizeAxis(n,r??e.length))}static sortBasedOnPerm(e,r){return r?r.map(n=>e[n]):e.slice().reverse()}static padShape(e,r){let n=e.length;return e.map((a,s)=>a+r[s]+r[s+n])}static areEqual(e,r){return e.length!==r.length?!1:e.every((n,a)=>n===r[a])}},Wa=class Ta{static adjustPoolAttributes(e,r,n,a,s,i){if(!e&&n.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let o=0;o<r.length-2;o++)o>=n.length?n.push(r[o+2]):n[o]=r[o+2];for(let o=0;o<n.length;o++)if(o<a.length){if(a[o]<0)throw new Error("strides should be greater than or equal to 1")}else a.push(1);for(let o=0;o<n.length;o++)if(o<s.length){if(s[o]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let o=0;o<n.length*2;o++)if(o<i.length){if(i[o]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let o=0;o<n.length;o++){if(n[o]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[o]>=n[o]||i[o+n.length]>=n[o])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,r,n,a,s,i,o){if(o){if(s.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(a.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<e.length-2;l++)Ta.adjustPadAndReturnShape(e[l+(i?1:2)],r[l],n[l],a[l],s,l,l+e.length-2,o)}}static computePoolOutputShape(e,r,n,a,s,i,o){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let l=[r[0],r[1]];return Ta.computeShapeHelper(e,r,l,n,a,s,i,o),l}static computeConvOutputShape(e,r,n,a,s,i,o){if(e.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[e[0],r[0]];return Ta.computeShapeHelper(!1,e,l,n,a,s,i,o),l}static computeShapeHelper(e,r,n,a,s,i,o,l){if(e)for(let d=0;d<r.length-2;d++)n.push(1);else for(let d=0;d<r.length-2;d++)n.push(Ta.adjustPadAndReturnShape(r[d+2],a[d],s[d],i[d],o,d,d+r.length-2,l))}static adjustPadAndReturnShape(e,r,n,a,s,i,o,l){let d=n*(a-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return s[i]=0,s[o]=0,Math.floor((e-d)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(n!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let c=((e+r-1)/r-1)*r+a-e;return s[i]=Math.floor(l==="SAME_LOWER"?(c+1)/2:c/2),s[o]=c-s[i],Math.floor((e+c-a)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+s[i]+s[o]-d)/r+1)}},nl=class{static getShapeOfGemmResult(t,e,r,n,a){if(t.length!==2||r.length!==2)throw new Error("shape need to be of size 2");let s,i,o;e?(s=t[1],i=t[0]):(s=t[0],i=t[1]);let l=-1;if(n?(o=r[0],l=1):(o=r[1],l=0),r[l]!==i)throw new Error("dimension mismatch");if(s<=0||o<=0||i<=0)throw new Error("invalid shape specified");if(a&&!an.isValidBroadcast(a,[s,o]))throw new Error("gemm: invalid bias shape for broadcast");return[s,o,i]}},$s=-34028234663852886e22,xs=34028234663852886e22}),sn,Va,ot,wt,_e,et,Nr,on,$r,xe,Ga,Y,me,Ss,al,il,Bn,Te=X(()=>{$e(),Ie(),sn=64,Va=(t,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(t){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${t}`)}},ot=(t,e=1)=>{let r=Va(t,e);return typeof r=="string"?r:r[0]},wt=(t,e=1)=>{let r=Va(t,e);return typeof r=="string"?r:r[1]},_e=(...t)=>{let e=[];return t.forEach(r=>{r.length!==0&&e.push({type:12,data:r},{type:12,data:K.computeStrides(r)})}),e},et=t=>t%4===0?4:t%2===0?2:1,Nr=(t="f32",e,r="0")=>!e||e===1?`${t}(${r})`:`vec${e}<${t}>(${r})`,on=(t,e,r)=>t==="f32"?r:e===1?`f32(${r})`:`vec${e}<f32>(${r})`,$r=(t,e)=>e===4?`(${t}.x + ${t}.y + ${t}.z + ${t}.w)`:e===2?`(${t}.x + ${t}.y)`:e===3?`(${t}.x + ${t}.y + ${t}.z)`:t,xe=(t,e,r,n)=>t.startsWith("uniforms.")&&r>4?typeof e=="string"?n==="f16"?`${t}[(${e}) / 8][(${e}) % 8 / 4][(${e}) % 8 % 4]`:`${t}[(${e}) / 4][(${e}) % 4]`:n==="f16"?`${t}[${Math.floor(e/8)}][${Math.floor(e%8/4)}][${e%8%4}]`:`${t}[${Math.floor(e/4)}][${e%4}]`:r>1?`${t}[${e}]`:t,Ga=(t,e,r,n,a)=>{let s=typeof r=="number",i=s?r:r.length,o=[...new Array(i).keys()],l=i<2?"u32":i<=4?`vec${i}<u32>`:`array<u32, ${i}>`,d=Va(e,a),c=typeof d=="string"?d:d[1],f=typeof d=="string"?d:d[0],g={indices:l,value:c,storage:f,tensor:e},y=R=>typeof R=="string"?R:`${R}u`,p={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},v=s?"uniforms.":"",S=`${v}${t}_shape`,E=`${v}${t}_strides`,k="";for(let R=0;R<i-1;R++)k+=`
    let dim${R} = current / ${xe(E,R,i)};
    let rest${R} = current % ${xe(E,R,i)};
    indices[${R}] = dim${R};
    current = rest${R};
    `;k+=`indices[${i-1}] = current;`;let O=i<2?"":`
  fn o2i_${t}(offset: u32) -> ${g.indices} {
    var indices: ${g.indices};
    var current = offset;
    ${k}
    return indices;
  }`,I=R=>(p.offsetToIndices=!0,i<2?R:`o2i_${t}(${R})`),T=[];if(i>=2)for(let R=i-1;R>=0;R--)T.push(`${xe(E,R,i)} * (indices[${R}])`);let F=i<2?"":`
  fn i2o_${t}(indices: ${g.indices}) -> u32 {
    return ${T.join("+")};
  }`,B=R=>(p.indicesToOffset=!0,i<2?R:`i2o_${t}(${R})`),G=(...R)=>i===0?"0u":`${g.indices}(${R.map(y).join(",")})`,H=(R,ie)=>i<2?`${R}`:`${xe(R,ie,i)}`,Z=(R,ie,le)=>i<2?`${R}=${le};`:`${xe(R,ie,i)}=${le};`,pe={},oe=(R,ie)=>{p.broadcastedIndicesToOffset=!0;let le=`${ie.name}broadcastedIndicesTo${t}Offset`;if(le in pe)return`${le}(${R})`;let Ae=[];for(let Me=i-1;Me>=0;Me--){let rt=ie.indicesGet("outputIndices",Me+ie.rank-i);Ae.push(`${H(E,Me)} * (${rt} % ${H(S,Me)})`)}return pe[le]=`fn ${le}(outputIndices: ${ie.type.indices}) -> u32 {
             return ${Ae.length>0?Ae.join("+"):"0u"};
           }`,`${le}(${R})`},ne=(R,ie)=>(()=>{if(g.storage===g.value)return`${t}[${R}]=${ie};`;if(g.storage==="vec2<u32>"&&g.value==="i32")return`${t}[${R}]=vec2<u32>(u32(${ie}), select(0u, 0xFFFFFFFFu, ${ie} < 0));`;if(g.storage==="vec2<u32>"&&g.value==="u32")return`${t}[${R}]=vec2<u32>(u32(${ie}), 0u);`;if(g.storage==="u32"&&g.value==="vec4<bool>")return`${t}[${R}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ie}));`;throw new Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),de=R=>(()=>{if(g.storage===g.value)return`${t}[${R}]`;if(g.storage==="vec2<u32>"&&g.value==="i32")return`i32(${t}[${R}].x)`;if(g.storage==="vec2<u32>"&&g.value==="u32")return`u32(${t}[${R}].x)`;if(g.storage==="u32"&&g.value==="vec4<bool>")return`vec4<bool>(bool(${t}[${R}] & 0xFFu), bool(${t}[${R}] & 0xFF00u), bool(${t}[${R}] & 0xFF0000u), bool(${t}[${R}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),D=i<2?"":`
  fn get_${t}ByIndices(indices: ${g.indices}) -> ${c} {
    return ${de(`i2o_${t}(indices)`)};
  }`,z=i<2?"":(()=>{let R=o.map(le=>`d${le}: u32`).join(", "),ie=o.map(le=>`d${le}`).join(", ");return`
  fn get_${t}(${R}) -> ${c} {
    return get_${t}ByIndices(${G(ie)});
  }`})(),q=(...R)=>{if(R.length!==i)throw new Error(`indices length must be ${i}`);let ie=R.map(y).join(",");return i===0?de("0u"):i===1?de(ie[0]):(p.get=!0,p.getByIndices=!0,p.indicesToOffset=!0,`get_${t}(${ie})`)},te=R=>i<2?de(R):(p.getByIndices=!0,p.indicesToOffset=!0,`get_${t}ByIndices(${R})`),ye=i<2?"":`
  fn set_${t}ByIndices(indices: ${g.indices}, value: ${c}) {
    ${ne(`i2o_${t}(indices)`,"value")}
  }`,he=i<2?"":(()=>{let R=o.map(le=>`d${le}: u32`).join(", "),ie=o.map(le=>`d${le}`).join(", ");return`
  fn set_${t}(${R}, value: ${c}) {
    set_${t}ByIndices(${G(ie)}, value);
  }`})();return{impl:()=>{let R=[],ie=!1;return p.offsetToIndices&&(R.push(O),ie=!0),p.indicesToOffset&&(R.push(F),ie=!0),p.broadcastedIndicesToOffset&&(Object.values(pe).forEach(le=>R.push(le)),ie=!0),p.set&&(R.push(he),ie=!0),p.setByIndices&&(R.push(ye),ie=!0),p.get&&(R.push(z),ie=!0),p.getByIndices&&(R.push(D),ie=!0),!s&&ie&&R.unshift(`const ${S} = ${g.indices}(${r.join(",")});`,`const ${E} = ${g.indices}(${K.computeStrides(r).join(",")});`),R.join(`
`)},type:g,offsetToIndices:I,indicesToOffset:B,broadcastedIndicesToOffset:oe,indices:G,indicesGet:H,indicesSet:Z,set:(...R)=>{if(R.length!==i+1)throw new Error(`indices length must be ${i}`);let ie=R[i];if(typeof ie!="string")throw new Error("value must be string");let le=R.slice(0,i).map(y).join(",");return i===0?ne("0u",ie):i===1?ne(le[0],ie):(p.set=!0,p.setByIndices=!0,p.indicesToOffset=!0,`set_${t}(${le}, ${ie})`)},setByOffset:ne,setByIndices:(R,ie)=>i<2?ne(R,ie):(p.setByIndices=!0,p.indicesToOffset=!0,`set_${t}ByIndices(${R}, ${ie});`),get:q,getByOffset:de,getByIndices:te,usage:n,name:t,strides:E,shape:S,rank:i}},Y=(t,e,r,n=1)=>Ga(t,e,r,"input",n),me=(t,e,r,n=1)=>Ga(t,e,r,"output",n),Ss=(t,e,r,n=1)=>Ga(t,e,r,"internal",n),al=class{constructor(t,e){this.normalizedDispatchGroup=t,this.limits=e,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=sn){let e=typeof t=="number"?t:t[0],r=typeof t=="number"?1:t[1],n=typeof t=="number"?1:t[2];if(e>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||n>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${e}, ${r}, ${n}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(e*r*n>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${e}, ${r}, ${n}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let a=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=a?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,i=a?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${e*r*n}u + local_idx;`;return`@compute @workgroup_size(${e}, ${r}, ${n})
  fn main(${s}) {
    ${i}
  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,e){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let r=t.usage==="input"?"read":"read_write",n=t.type.storage;return`@group(0) @binding(${e}) var<storage, ${r}> ${t.name}: array<${n}>;`}declareVariables(...t){return t.map(e=>this.declareVariable(e,this.variableIndex++)).join(`
`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(e=>this.registerInternalVariable(e)),this}registerUniform(t,e,r=1){return this.uniforms.push({name:t,type:e,length:r}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:e,type:r,length:n}of this.uniforms)if(n&&n>4)r==="f16"?t.push(`@align(16) ${e}:array<mat2x4<${r}>, ${Math.ceil(n/8)}>`):t.push(`${e}:array<vec4<${r}>, ${Math.ceil(n/4)}>`);else{let a=n==null||n===1?r:`vec${n}<${r}>`;t.push(`${e}:${a}`)}return`
      struct Uniforms { ${t.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`
`)+this.internalVariables.map(t=>t.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let t=e=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(e)];return this.uniforms.map(e=>[t(e.type),e.length??1])}},il=(t,e)=>new al(t,e),Bn=(t,e)=>{let r=t.length,n=[];for(let a=0;a<r;a++){let s=r-1-a,i=t[s]||1;(e[e.length-1-a]||1)>1&&i===1&&n.unshift(s)}return n}}),sl,ks,ol,ul,hr,ll,dl,Dn=X(()=>{$e(),Ie(),st(),Te(),sl=t=>{if(!t||t.length!==1)throw new Error("Transpose requires 1 input.")},ks=(t,e)=>e&&e.length!==t?[...new Array(t).keys()].reverse():e,ol=(t,e)=>K.sortBasedOnPerm(t,ks(t.length,e)),ul=(t,e,r,n)=>{let a=[];a.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let s=0;s<e;++s)a.push(r.indicesSet("a",t[s],`i[${s}]`));return a.push("return a;}"),a.join(`
`)},hr=(t,e)=>{let r=t.dataType,n=t.dims.length,a=ks(n,e),s=ol(t.dims,a),i=me("output",r,s.length),o=Y("a",r,n),l=d=>`
  ${d.registerUniform("output_size","u32").declareVariables(o,i)}

  ${ul(a,n,o,i)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${i.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${i.setByOffset("global_idx",o.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:["rank"]},getRunData:d=>{let c=K.size(s);return{outputs:[{dims:s,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:[{type:12,data:c},..._e(d[0].dims,s)]}},getShaderSource:l}},ll=(t,e)=>{sl(t.inputs),t.compute(hr(t.inputs[0],e.perm))},dl=t=>He({perm:t.perm})}),cl,pl,hl,fl,ml,gl,_l,yl,wl,bl,Gt,vl,$l,xl,Sl,kl,El,Cl,Tl,Il,Al,G0=X(()=>{$e(),Ie(),Te(),Cs(),Dn(),cl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},pl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},hl={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},fl={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ml=(t,e)=>{let r=[];for(let n=e-t;n<e;++n)r.push(n);return r},gl=(t,e)=>{let r=[],n=t.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&r.push(t[s]);let a=e.map(s=>t[s]);return[r,a]},_l=(t,e)=>{let r=t.length+e.length,n=[],a=0;for(let s=0;s<r;s++)e.indexOf(s)===-1?n.push(t[a++]):n.push(1);return n},yl=(t,e)=>{for(let r=0;r<t.length;++r)if(t[t.length-r-1]!==e-1-r)return!1;return!0},wl=(t,e)=>{let r=[];if(!yl(t,e)){for(let n=0;n<e;++n)t.indexOf(n)===-1&&r.push(n);t.forEach(n=>r.push(n))}return r},bl=(t,e,r,n,a,s,i)=>{let o=r[0].dims,l=K.size(s),d=K.size(i),c=Y("_A",r[0].dataType,o),f=me("output",a,s),g=32,y=`
          var<workgroup> aBestValues : array<f32, ${g}>;
       `;return{name:t,shaderCache:e,getShaderSource:p=>`
        ${p.registerUniform("reduceSize","u32").declareVariables(c,f)}
        ${y}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${p.mainStart(g)}

          let outputIndex = global_idx / ${g};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${hl[n]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${g}) {
           let candidate = f32(${c.getByOffset("offset + k")});
           bestValue = ${cl[n]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${g}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${pl[n]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${f.setByOffset("outputIndex",`${n==="mean"?`${f.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${f.type.storage}(${fl[n]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:s,dataType:a}],dispatchGroup:{x:l},programUniforms:[{type:12,data:d}]})}},Gt=(t,e,r,n)=>{let a=t.inputs.length===1?r:Es(t.inputs,r),s=a.axes;s.length===0&&!a.noopWithEmptyAxes&&(s=t.inputs[0].dims.map((y,p)=>p));let i=K.normalizeAxes(s,t.inputs[0].dims.length),o=i,l=t.inputs[0],d=wl(o,t.inputs[0].dims.length);d.length>0&&(l=t.compute(hr(t.inputs[0],d),{inputs:[0],outputs:[-1]})[0],o=ml(o.length,l.dims.length));let[c,f]=gl(l.dims,o),g=c;a.keepDims&&(g=_l(c,i)),t.compute(bl(e,{hint:a.cacheKey,inputDependencies:["type"]},[l],n,t.inputs[0].dataType,g,f),{inputs:[l]})},vl=(t,e)=>{Gt(t,"ReduceMeanShared",e,"mean")},$l=(t,e)=>{Gt(t,"ReduceL1Shared",e,"l1")},xl=(t,e)=>{Gt(t,"ReduceL2Shared",e,"l2")},Sl=(t,e)=>{Gt(t,"ReduceLogSumExpShared",e,"logSumExp")},kl=(t,e)=>{Gt(t,"ReduceMaxShared",e,"max")},El=(t,e)=>{Gt(t,"ReduceMinShared",e,"min")},Cl=(t,e)=>{Gt(t,"ReduceProdShared",e,"prod")},Tl=(t,e)=>{Gt(t,"ReduceSumShared",e,"sum")},Il=(t,e)=>{Gt(t,"ReduceSumSquareShared",e,"sumSquare")},Al=(t,e)=>{Gt(t,"ReduceLogSumShared",e,"logSum")}}),Ht,Ol,Ha,Es,qt,Ml,zl,Rl,Pl,Bl,Dl,Nl,Fl,Ll,Ul,jt,Wl,Vl,Gl,Hl,ql,jl,Kl,Yl,Ql,Xl,Cs=X(()=>{$e(),Ie(),st(),Te(),G0(),Ht=t=>{if(!t||t.length===0||t.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(t.length===2&&t[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Ol=t=>["","",`var value = ${t.getByIndices("input_indices")};`,""],Ha=(t,e,r,n,a,s,i=!1,o=!1)=>{let l=[],d=r[0].dims,c=d.length,f=K.normalizeAxes(a,c),g=!o&&f.length===0;d.forEach((v,S)=>{g||f.indexOf(S)>=0?i&&l.push(1):l.push(v)});let y=l.length,p=K.size(l);return{name:t,shaderCache:e,getShaderSource:v=>{let S=[],E=Y("_A",r[0].dataType,c),k=me("output",s,y),O=n(E,k,f),I=O[2];for(let T=0,F=0;T<c;T++)g||f.indexOf(T)>=0?(i&&F++,I=`for(var j${T}: u32 = 0; j${T} < ${d[T]}; j${T}++) {
                  ${O[2].includes("last_index")?`let last_index = j${T};`:""}
                  ${E.indicesSet("input_indices",T,`j${T}`)}
                  ${I}
                }`):(S.push(`${E.indicesSet("input_indices",T,k.indicesGet("output_indices",F))};`),F++);return`

        ${v.registerUniform("output_size","u32").declareVariables(E,k)}

        ${v.mainStart()}
          ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${E.type.indices};
          let output_indices = ${k.offsetToIndices("global_idx")};

          ${S.join(`
`)}
          ${O[0]}       // init ops for reduce max/min
          ${O[1]}
          ${I}
          ${O[3]}
          ${O.length===4?k.setByOffset("global_idx","value"):O.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:s}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},..._e(d,l)]})}},Es=(t,e)=>{let r=[];return t[1].dims[0]>0&&t[1].getBigInt64Array().forEach(n=>r.push(Number(n))),He({axes:r,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},qt=(t,e,r,n)=>{let a=t.inputs,s=a.length===1?r:Es(a,r);t.compute(Ha(e,{hint:s.cacheKey,inputDependencies:["rank"]},[a[0]],s.noopWithEmptyAxes&&s.axes.length===0?Ol:n,s.axes,a[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},Ml=(t,e)=>{Ht(t.inputs),qt(t,"ReduceLogSum",e,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,"value = log(value);"])},zl=(t,e)=>{Ht(t.inputs),qt(t,"ReduceL1",e,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${r.getByIndices("input_indices")});`,""])},Rl=(t,e)=>{Ht(t.inputs),qt(t,"ReduceL2",e,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Pl=(t,e)=>{Ht(t.inputs),qt(t,"ReduceLogSumExp",e,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${r.getByIndices("input_indices")});`,"value = log(value);"])},Bl=(t,e)=>{Ht(t.inputs),qt(t,"ReduceMax",e,(r,n,a)=>{let s=[];for(let i=0;i<r.rank;i++)(a.indexOf(i)>=0||a.length===0)&&s.push(r.indicesSet("input_indices",i,0));return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = max(value, ${r.getByIndices("input_indices")});`,""]})},Dl=(t,e)=>{Ht(t.inputs),qt(t,"ReduceMean",e,(r,n,a)=>{let s=1;for(let i=0;i<r.rank;i++)(a.indexOf(i)>=0||a.length===0)&&(s*=t.inputs[0].dims[i]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${s});`]})},Nl=(t,e)=>{Ht(t.inputs),qt(t,"ReduceMin",e,(r,n,a)=>{let s=[];for(let i=0;i<r.rank;i++)(a.indexOf(i)>=0||a.length===0)&&s.push(`input_indices[${i}] = 0;`);return[`${s.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = min(value, ${r.getByIndices("input_indices")});`,""]})},Fl=(t,e)=>{Ht(t.inputs),qt(t,"ReduceProd",e,(r,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${r.getByIndices("input_indices")};`,""])},Ll=(t,e)=>{Ht(t.inputs),qt(t,"ReduceSum",e,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,""])},Ul=(t,e)=>{Ht(t.inputs),qt(t,"ReduceSumSquare",e,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += t * t;`,""])},jt=(t,e,r)=>{if(e.length===0)return r;let n=1,a=1;for(let s=0;s<e.length;s++)e.indexOf(s)===-1?n*=t[s]:a*=t[s];return a<32&&n>1024},Wl=(t,e)=>{jt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Dl(t,e):vl(t,e)},Vl=(t,e)=>{jt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?zl(t,e):$l(t,e)},Gl=(t,e)=>{jt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Rl(t,e):xl(t,e)},Hl=(t,e)=>{jt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Pl(t,e):Sl(t,e)},ql=(t,e)=>{jt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Bl(t,e):kl(t,e)},jl=(t,e)=>{jt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Nl(t,e):El(t,e)},Kl=(t,e)=>{jt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Fl(t,e):Cl(t,e)},Yl=(t,e)=>{jt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Ll(t,e):Tl(t,e)},Ql=(t,e)=>{jt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Ul(t,e):Il(t,e)},Xl=(t,e)=>{jt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Ml(t,e):Al(t,e)}}),Ts,Jl,Zl,Is,H0=X(()=>{$e(),st(),Cs(),Ts=t=>{if(!t||t.length===0||t.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(t[0].dataType!==1)throw new Error("Invalid input type.")},Jl=(t,e)=>{Ts(t.inputs);let r=(n,a,s)=>{let i=[];for(let o=0;o<n.rank;o++)(s.indexOf(o)>=0||s.length===0)&&i.push(`input_indices[${o}] = 0;`);return[`${i.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",a.setByOffset("global_idx","best_index")]};t.compute(Ha("ArgMin",{hint:e.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],r,[e.axis],7,e.keepDims),{inputs:[0]})},Zl=(t,e)=>{Ts(t.inputs);let r=(n,a,s)=>{let i=[];for(let o=0;o<n.rank;o++)(s.indexOf(o)>=0||s.length===0)&&i.push(`input_indices[${o}] = 0;`);return[`${i.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",a.setByOffset("global_idx","best_index")]};t.compute(Ha("argMax",{hint:e.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],r,[e.axis],7,e.keepDims),{inputs:[0]})},Is=t=>He(t)}),ed,td,rd,qa,nd,ad,id=X(()=>{$e(),Ie(),st(),Te(),ed=(t,e)=>{if(!t||t.length<1)throw new Error("too few inputs");let r=0,n=t[r],a=n.dataType,s=n.dims.length;t.forEach((i,o)=>{if(o!==r){if(i.dataType!==a)throw new Error("input tensors should be one type");if(i.dims.length!==s)throw new Error("input tensors should have the same shape");i.dims.forEach((l,d)=>{if(d!==e&&l!==n.dims[d])throw new Error("non concat dimensions must match")})}})},td=(t,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${t}u>(${e});
    for (var i: u32 = 0u; i < ${t}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${t}u;
  }`,rd=(t,e)=>{let r=t.length,n=[];for(let a=0;a<r;++a){let s=e.setByOffset("global_idx",t[a].getByIndices("indices"));r===1?n.push(s):a===0?n.push(`if (inputIndex == ${a}u) { ${s} }`):a===r-1?n.push(`else { ${s} }`):n.push(`else if (inputIndex == ${a}) { ${s} }`)}return n.join(`
`)},qa=(t,e,r,n)=>{let a=K.size(r),s=new Array(t.length),i=new Array(t.length),o=0,l=[],d=[],c=[{type:12,data:a}];for(let v=0;v<t.length;++v)o+=t[v].dims[e],s[v]=o,d.push(t[v].dims.length),i[v]=Y(`input${v}`,n,d[v]),l.push("rank"),c.push({type:12,data:s[v]});for(let v=0;v<t.length;++v)c.push(..._e(t[v].dims));c.push(..._e(r));let f=me("output",n,r.length),g=f.indicesGet("indices",e),y=Array.from(Array(s.length).keys()).map(v=>`uniforms.sizeInConcatAxis${v}`).join(","),p=v=>`

  ${(()=>{v.registerUniform("outputSize","u32");for(let S=0;S<t.length;S++)v.registerUniform(`sizeInConcatAxis${S}`,"u32");return v.declareVariables(...i,f)})()}

  ${td(s.length,y)}

  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${f.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${g});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${s.length}u>(${y});
      ${g} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${rd(i,f)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:r,dataType:n}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:c}),getShaderSource:p}},nd=(t,e)=>{let r=t.inputs,n=r[0].dims,a=K.normalizeAxis(e.axis,n.length);ed(r,a);let s=n.slice();s[a]=r.reduce((o,l)=>o+(l.dims.length>a?l.dims[a]:0),0);let i=r.filter(o=>K.size(o.dims)>0);t.compute(qa(i,a,s,r[0].dataType),{inputs:i})},ad=t=>He({axis:t.axis})}),sd,od,ud,ld,ja,dd,cd,pd=X(()=>{$e(),ys(),Te(),id(),sd=(t,e)=>{let r=t[0],n=t[1],a=t[2],s=t[3],i=t[4],o=t[5];if(i&&o)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=r.dims[0],d=r.dims[1],c=r.dims[2];if(a.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(n.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(n.dims[0]!==c)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(a.dims[0]!==n.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let f=a.dims[0]/3,g=f,y=g;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let O of e.qkvHiddenSizes)if(O%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");f=e.qkvHiddenSizes[0],g=e.qkvHiddenSizes[1],y=e.qkvHiddenSizes[2]}let p=d;if(f!==g)throw new Error("qkv_hidden_sizes first element should be same as the second");if(a.dims[0]!==f+g+y)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let v=0;if(i){if(g!==y)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(i.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(i.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(i.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(i.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(i.dims[4]!==g/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(v=i.dims[3])}let S=p+v,E=-1,k=0;if(s)throw new Error("Mask not supported");if(i)throw new Error("past is not supported");return{batchSize:l,sequenceLength:d,pastSequenceLength:v,kvSequenceLength:p,totalSequenceLength:S,maxSequenceLength:E,inputHiddenSize:c,hiddenSize:f,vHiddenSize:y,headSize:Math.floor(f/e.numHeads),vHeadSize:Math.floor(y/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:k,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},od=(t,e,r,n)=>{let a=et(n),s=64,i=n/a;i<s?s=1:i/8<64&&(s=Math.ceil(i/8));let o=Math.ceil(n/a/s),l=[{type:e.dataType,data:1/n},{type:12,data:i},{type:12,data:o}],d=ot(e.dataType,a),c=wt(1,a),f=g=>{let y=me("x",e.dataType,e.dims,a),p=[{name:"d_inv",type:wt(e.dataType)},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${s}>;
  var<workgroup> thread_sum: array<f32, ${s}>;
  ${g.registerUniforms(p).declareVariables(y)}
  ${g.mainStart([s,1,1])}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = workgroup_id.x * uniforms.d_comp + local_offset;

    var thread_max_vector = ${c}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      thread_max_vector = max(${c}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(a){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${a}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${s}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${c}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      sum_vector += exp(${c}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(a){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${a}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${s}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        x[offset + i] = ${y.type.value}(uniforms.d_inv);
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        var f32input = ${c}(x[offset + i]);
        x[offset + i] = ${y.type.value}(exp(f32input - max_value) / sum);
      }
    }
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${s};${d};${a}`},getShaderSource:f,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:l})}},ud=(t,e,r,n,a,s,i)=>{let o=i+a.kvSequenceLength,l=[a.batchSize,a.numHeads,a.sequenceLength,o],d=s.scale===0?1/Math.sqrt(a.headSize):s.scale,c=et(a.headSize),f=a.headSize/c,g=12,y={x:Math.ceil(o/g),y:Math.ceil(a.sequenceLength/g),z:a.batchSize*a.numHeads},p=[{type:12,data:a.sequenceLength},{type:12,data:f},{type:12,data:o},{type:12,data:a.numHeads},{type:1,data:d}],v=n?["type","type","type"]:["type","type"],S=E=>{let k=Y("q",e.dataType,e.dims,c),O=Y("key",r.dataType,r.dims,c),I=[k,O];n&&I.push(Y("relative_position_bias",n.dataType,n.dims));let T=me("output",e.dataType,l),F=wt(1,c),B=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"}];return`
  const TILE_SIZE = ${g}u;

  var<workgroup> tileQ: array<${k.type.storage}, ${g*g}>;
  var<workgroup> tileK: array<${k.type.storage}, ${g*g}>;
  ${E.registerUniforms(B).declareVariables(...I,T)}
  ${E.mainStart([g,g,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;

    var value = ${F}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
        value += ${F}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(c){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${c}`)}})()};
        output[outputIdx] = ${T.type.value} (sum * uniforms.alpha) + ${n?"relative_position_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${c}`,inputDependencies:v},getRunData:()=>({outputs:[{dims:l,dataType:e.dataType,gpuDataType:0}],dispatchGroup:y,programUniforms:p}),getShaderSource:S}},ld=(t,e,r,n,a)=>{let s=a+n.kvSequenceLength,i=[n.batchSize,n.sequenceLength,n.vHiddenSize],o=12,l={x:Math.ceil(n.vHeadSize/o),y:Math.ceil(n.sequenceLength/o),z:n.batchSize*n.numHeads},d=[{type:12,data:n.sequenceLength},{type:12,data:s},{type:12,data:n.vHeadSize},{type:12,data:n.numHeads},{type:12,data:n.vHiddenSize}];return{name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType,gpuDataType:0}],dispatchGroup:l,programUniforms:d}),getShaderSource:c=>{let f=Y("probs",e.dataType,e.dims),g=Y("v",r.dataType,r.dims),y=me("output",e.dataType,i),p=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileQ: array<${f.type.value}, ${o*o}>;
  var<workgroup> tileK: array<${f.type.value}, ${o*o}>;
  ${c.registerUniforms(p).declareVariables(f,g,y)}
  ${c.mainStart([o,o,1])}
   let headIdx = workgroup_id.z;
   let m = global_id.y;
   let n = global_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${f.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`}}},ja=(t,e,r,n,a,s,i,o,l,d,c)=>{let f=t.outputCount>1,g=t.outputCount>2,y=f&&g?d.pastSequenceLength:0,p=y+d.kvSequenceLength,v=[d.batchSize,d.numHeads,p,d.headSize],S=i?[i,r]:[r],E=f?t.compute(qa(S,2,v,r.dataType),{inputs:S,outputs:[1]})[0]:r,k=[d.batchSize,d.numHeads,p,d.headSize],O=o?[o,n]:[n],I=g?t.compute(qa(O,2,k,n.dataType),{inputs:O,outputs:[2]})[0]:n,T=[e,E];l&&T.push(l);let F=t.compute(ud(t,e,E,l,d,c,y),{inputs:T,outputs:[-1]})[0];t.compute(od(t,F,d.batchSize*d.numHeads*d.sequenceLength,p),{inputs:[F],outputs:[]});let B=[F,I];t.compute(ld(t,F,I,d,y),{inputs:B,outputs:[0]})},dd=(t,e)=>{let r=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],n=e.sequenceLength,a=e.inputHiddenSize,s=e.headSize,i=12,o={x:Math.ceil(e.headSize/i),y:Math.ceil(e.sequenceLength/i),z:e.batchSize*e.numHeads},l=[t.inputs[0],t.inputs[1],t.inputs[2]],d=[{type:12,data:n},{type:12,data:a},{type:12,data:s},{type:12,data:e.numHeads},{type:12,data:e.headSize},{type:12,data:e.hiddenSize},{type:12,data:e.hiddenSize+e.hiddenSize+e.vHiddenSize}],c=f=>{let g=me("output_q",l[0].dataType,r),y=me("output_k",l[0].dataType,r),p=me("output_v",l[0].dataType,r),v=Y("input",l[0].dataType,l[0].dims),S=Y("weight",l[1].dataType,l[1].dims),E=Y("bias",l[2].dataType,l[2].dims),k=v.type.storage,O=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileInput: array<${k}, ${i*i}>;
  var<workgroup> tileWeightQ: array<${k}, ${i*i}>;
  var<workgroup> tileWeightK: array<${k}, ${i*i}>;
  var<workgroup> tileWeightV: array<${k}, ${i*i}>;
  ${f.registerUniforms(O).declareVariables(v,S,E,g,y,p)}
  ${f.mainStart([i,i,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${k}(0);
    var valueK = ${k}(0);
    var valueV = ${k}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return t.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:t.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:t.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:t.inputs[0].dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:d}),getShaderSource:c},{inputs:l,outputs:[-1,-1,-1]})},cd=(t,e)=>{let r=sd(t.inputs,e),[n,a,s]=dd(t,r);return ja(t,n,a,s,t.inputs[4],void 0,void 0,void 0,t.inputs[5],r,e)}}),hd,fd,md,gd,q0=X(()=>{Vt(),$e(),Ie(),st(),Te(),hd=(t,e)=>{if(!t||t.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(n,a,s)=>{let i=a.length;if(i!==n.length)throw new Error(`${s}: num dimensions != ${i}`);a.forEach((o,l)=>{if(o!==n[l])throw new Error(`${s}: dim[${l}] do not match`)})};if(t[0].dims.length>1){let n=e.format==="NHWC"?e.spatial?t[0].dims.slice(-1):t[0].dims.slice(-1).concat(t[0].dims.slice(1,t[0].dims.length-1)):t[0].dims.slice(1,e.spatial?2:void 0);r(t[1].dims,n,"Invalid input scale"),r(t[2].dims,n,"Invalid input B"),r(t[3].dims,n,"Invalid input mean"),r(t[4].dims,n,"Invalid input var")}else r(t[1].dims,[1],"Invalid input scale"),r(t[2].dims,[1],"Invalid input B"),r(t[3].dims,[1],"Invalid input mean"),r(t[4].dims,[1],"Invalid input var")},fd=(t,e)=>{let{epsilon:r,spatial:n,format:a}=e,s=t[0].dims,i=n?et(s[s.length-1]):1,o=a==="NHWC"&&s.length>1?i:1,l=K.size(s)/i,d=n,c=d?s.length:s,f=Y("x",t[0].dataType,t[0].dims,i),g=Y("scale",t[1].dataType,t[1].dims,o),y=Y("bias",t[2].dataType,t[2].dims,o),p=Y("inputMean",t[3].dataType,t[3].dims,o),v=Y("inputVar",t[4].dataType,t[4].dims,o),S=me("y",t[0].dataType,c,i),E=()=>{let O="";if(n)O=`let cOffset = ${s.length===1?"0u":a==="NHWC"?`outputIndices[${s.length-1}] / ${i}`:"outputIndices[1]"};`;else if(a==="NCHW")O=`
            ${S.indicesSet("outputIndices","0","0")}
            let cOffset = ${S.indicesToOffset("outputIndices")};`;else{O=`var cIndices = ${g.type.indices}(0);
                       cIndices[0] = outputIndices[${s.length-1}];`;for(let I=1;I<g.rank;I++)O+=`cIndices[${I}] = outputIndices[${I}];`;O+=`let cOffset = ${g.indicesToOffset("cIndices")};`}return O},k=O=>`
  const epsilon = ${r};
  ${O.registerUniform("outputSize","u32").declareVariables(f,g,y,p,v,S)}
  ${O.mainStart()}
  ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${S.offsetToIndices(`global_idx * ${i}`)};
    ${E()}
    let scale = ${g.getByOffset("cOffset")};
    let bias = ${y.getByOffset("cOffset")};
    let inputMean = ${p.getByOffset("cOffset")};
    let inputVar = ${v.getByOffset("cOffset")};
    let x = ${f.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${S.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${n}_${i}`,inputDependencies:d?["rank","type","type","type","type"]:void 0},getShaderSource:k,getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d?[{type:12,data:l},..._e(s)]:[{type:12,data:l}]})}},md=t=>He(t),gd=(t,e)=>{let{inputs:r,outputCount:n}=t,a=md({...e,outputCount:n});if(Ue.webgpu.validateInputContent&&hd(r,a),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");t.compute(fd(r,a))}}),_d,yd,wd,j0=X(()=>{Ie(),Te(),_d=t=>{if(t[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(t[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(t[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw new Error("last dimension of input and bias are not the same")},yd=t=>{let e=t[0].dims,r=t[0].dims[2],n=K.size(e)/4,a=t[0].dataType,s=Y("input",a,e,4),i=Y("bias",a,[r],4),o=Y("residual",a,e,4),l=me("output",a,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:d=>`
  const channels = ${r}u / 4;
  ${d.declareVariables(s,i,o,l)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let value = ${s.getByOffset("global_idx")}
      + ${i.getByOffset("global_idx % channels")} + ${o.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},wd=t=>{_d(t.inputs),t.compute(yd(t.inputs))}}),bd,De,vd,$d,xd,Sd,kd,Ed,Cd,Td,Id,Ad,Od,Md,zd,Rd,Ka,Pd,Ya,Bd,Dd,Nd,Fd,Ld,Ud,Wd,Vd,Gd,Hd,qd,jd,Kd,Yd,Qd,Xd,As,Jd,Os,Ms,Zd,ec,tc,zs=X(()=>{$e(),Ie(),st(),Te(),bd=(t,e,r,n,a,s)=>{let i=Math.ceil(e/4),o="";typeof a=="string"?o=`${a}(a)`:o=a("a");let l=Y("inputData",r,[i],4),d=me("outputData",n,[i],4);return`
      ${t.registerUniform("vec_size","u32").declareVariables(l,d)}

  ${s??""}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${l.getByOffset("global_idx")};
    ${d.setByOffset("global_idx",o)}
  }`},De=(t,e,r,n,a,s=t.dataType)=>({name:e,shaderCache:{hint:a,inputDependencies:["type"]},getShaderSource:i=>bd(i,K.size(t.dims),t.dataType,s,r,n),getRunData:i=>({outputs:[{dims:t.dims,dataType:s}],dispatchGroup:{x:Math.ceil(K.size(i[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(K.size(t.dims)/4)}]})}),vd=t=>{t.compute(De(t.inputs[0],"Abs","abs"))},$d=t=>{t.compute(De(t.inputs[0],"Acos","acos"))},xd=t=>{t.compute(De(t.inputs[0],"Acosh","acosh"))},Sd=t=>{t.compute(De(t.inputs[0],"Asin","asin"))},kd=t=>{t.compute(De(t.inputs[0],"Asinh","asinh"))},Ed=t=>{t.compute(De(t.inputs[0],"Atan","atan"))},Cd=t=>{t.compute(De(t.inputs[0],"Atanh","atanh"))},Td=t=>He(t),Id=(t,e)=>{let r;switch(e.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}t.compute(De(t.inputs[0],"Cast",r,void 0,e.cacheKey,e.to))},Ad=t=>{let e=t.length>=2&&t[1].data!==0?t[1].getFloat32Array()[0]:$s,r=t.length>=3&&t[2].data!==0?t[2].getFloat32Array()[0]:xs;return He({min:e,max:r})},Od=(t,e)=>{let r=t.inputs.length===1?e:Ad(t.inputs),n=wt(t.inputs[0].dataType);t.compute(De(t.inputs[0],"Clip",a=>`clamp(${a}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${n}> = vec4(${n}(${r.min}));
    const clip_max_: vec4<${n}> = vec4(${n}(${r.max}));
`,r.cacheKey),{inputs:[0]})},Md=t=>{t.compute(De(t.inputs[0],"Ceil","ceil"))},zd=t=>{t.compute(De(t.inputs[0],"Cos","cos"))},Rd=t=>{t.compute(De(t.inputs[0],"Cosh","cosh"))},Ka=t=>He(t),Pd=(t,e)=>{let r=wt(t.inputs[0].dataType);t.compute(De(t.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_ = ${r}(${e.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},Ya=(t="f32")=>`
const r0: ${t} = 0.3275911;
const r1: ${t} = 0.254829592;
const r2: ${t} = -0.284496736;
const r3: ${t} = 1.421413741;
const r4: ${t} = -1.453152027;
const r5: ${t} = 1.061405429;

fn erf_vf32(v: vec4<${t}>) -> vec4<${t}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Bd=t=>{let e=wt(t.inputs[0].dataType);t.compute(De(t.inputs[0],"Erf",r=>`erf_vf32(${r})`,Ya(e)))},Dd=t=>{t.compute(De(t.inputs[0],"Exp","exp"))},Nd=t=>{t.compute(De(t.inputs[0],"Floor","floor"))},Fd=t=>{let e=wt(t.inputs[0].dataType);t.compute(De(t.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Ya(e)))},Ld=(t,e)=>{let r=wt(t.inputs[0].dataType);t.compute(De(t.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${e.alpha});`,e.cacheKey))},Ud=t=>{t.compute(De(t.inputs[0],"Not",e=>`!${e}`))},Wd=t=>{t.compute(De(t.inputs[0],"Neg",e=>`-${e}`))},Vd=t=>{t.compute(De(t.inputs[0],"Reciprocal",e=>`1.0/${e}`))},Gd=t=>{let e=wt(t.inputs[0].dataType);t.compute(De(t.inputs[0],"Relu",r=>`select(vec4<${e}>(0.0), ${r}, ${r} > vec4<${e}>(0.0))`))},Hd=t=>{t.compute(De(t.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},qd=t=>He(t),jd=(t,e)=>{let r=wt(t.inputs[0].dataType);t.compute(De(t.inputs[0],"HardSigmoid",n=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${e.alpha} * ${n} + vec4<${r}>(${e.beta})))`,void 0,e.cacheKey))},Kd=t=>{t.compute(De(t.inputs[0],"Sin","sin"))},Yd=t=>{t.compute(De(t.inputs[0],"Sinh","sinh"))},Qd=t=>{t.compute(De(t.inputs[0],"Sqrt","sqrt"))},Xd=t=>{t.compute(De(t.inputs[0],"Tan","tan"))},As=t=>`sign(${t}) * (1 - exp(-2 * abs(${t}))) / (1 + exp(-2 * abs(${t})))`,Jd=t=>{t.compute(De(t.inputs[0],"Tanh",As))},Os=(t="f32")=>`
const fast_gelu_a: ${t} = 0.5;
const fast_gelu_b: ${t} = 0.7978845608028654;
const fast_gelu_c: ${t} = 0.035677408136300125;

fn tanh_v(v: vec4<${t}>) -> vec4<${t}> {
  return ${As("v")};
}
`,Ms=t=>`(fast_gelu_a + fast_gelu_a * tanh_v(${t} * (fast_gelu_c * ${t} * ${t} + fast_gelu_b))) * ${t}`,Zd=t=>{let e=wt(t.inputs[0].dataType);t.compute(De(t.inputs[0],"FastGelu",Ms,Os(e),void 0,t.inputs[0].dataType))},ec=(t,e)=>{let r=wt(t.inputs[0].dataType);return t.compute(De(t.inputs[0],"ThresholdedRelu",n=>`select(vec4<${r}>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${e.alpha});`,e.cacheKey)),0},tc=t=>{t.compute(De(t.inputs[0],"Log","log"))}}),rc,nc,ac,K0=X(()=>{Ie(),Te(),zs(),rc=t=>{if(t[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(t[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(t[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw new Error("last dimension of input and bias are not the same")},nc=t=>{let e=t[0].dims.slice();e[2]=e[2]/2;let r=Y("input",t[0].dataType,t[0].dims,4),n=Y("bias",t[0].dataType,[t[0].dims[2]],4),a=me("output",t[0].dataType,e,4),s=K.size(e)/4,i=ot(t[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:o=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${t[0].dims[2]/4/2}u;

  ${o.declareVariables(r,n,a)}

  ${Ya(i)}

  ${o.mainStart()}
    ${o.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${a.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},ac=t=>{rc(t.inputs),t.compute(nc(t.inputs))}}),ic,sc,Kt,oc,uc,lc,dc,cc,pc,hc,fc,mc,gc,Y0=X(()=>{$e(),Ie(),Te(),ic=(t,e,r,n,a,s,i,o,l,d,c,f)=>{let g,y;typeof o=="string"?g=y=(k,O)=>`${o}((${k}),(${O}))`:typeof o=="function"?g=y=o:(g=o.scalar,y=o.vector);let p=me("outputData",c,n.length,4),v=Y("aData",l,e.length,4),S=Y("bData",d,r.length,4),E;if(a)if(s){let k=K.size(e)===1,O=K.size(r)===1,I=e.length>0&&e[e.length-1]%4===0,T=r.length>0&&r[r.length-1]%4===0;k||O?E=p.setByOffset("global_idx",y(k?`${v.type.value}(${v.getByOffset("0")}.x)`:v.getByOffset("global_idx"),O?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"))):E=`
            let outputIndices = ${p.offsetToIndices("global_idx * 4u")};
            let offsetA = ${v.broadcastedIndicesToOffset("outputIndices",p)};
            let offsetB = ${S.broadcastedIndicesToOffset("outputIndices",p)};
            ${p.setByOffset("global_idx",y(i||I?v.getByOffset("offsetA / 4u"):`${v.type.value}(${v.getByOffset("offsetA / 4u")}[offsetA % 4u])`,i||T?S.getByOffset("offsetB / 4u"):`${S.type.value}(${S.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else E=p.setByOffset("global_idx",y(v.getByOffset("global_idx"),S.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let k=(O,I,T="")=>{let F=`aData[indexA${I}][componentA${I}]`,B=`bData[indexB${I}][componentB${I}]`;return`
            let outputIndices${I} = ${p.offsetToIndices(`global_idx * 4u + ${I}u`)};
            let offsetA${I} = ${v.broadcastedIndicesToOffset(`outputIndices${I}`,p)};
            let offsetB${I} = ${S.broadcastedIndicesToOffset(`outputIndices${I}`,p)};
            let indexA${I} = offsetA${I} / 4u;
            let indexB${I} = offsetB${I} / 4u;
            let componentA${I} = offsetA${I} % 4u;
            let componentB${I} = offsetB${I} % 4u;
            ${O}[${I}] = ${T}(${g(F,B)});
          `};c===9?E=`
            var data = vec4<u32>(0);
            ${k("data",0,"u32")}
            ${k("data",1,"u32")}
            ${k("data",2,"u32")}
            ${k("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:E=`
            ${k("outputData[global_idx]",0)}
            ${k("outputData[global_idx]",1)}
            ${k("outputData[global_idx]",2)}
            ${k("outputData[global_idx]",3)}
          `}return`
        ${t.registerUniform("vec_size","u32").declareVariables(v,S,p)}

        ${f??""}

        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${E}
      }`},sc=(t,e,r,n,a,s,i=r.dataType)=>{let o=!K.areEqual(r.dims,n.dims),l=r.dims,d=K.size(r.dims),c=!1,f=!1,g=[o];if(o){let y=an.calcShape(r.dims,n.dims,!1);if(!y)throw new Error("Can't perform binary op on the given tensors");l=y,d=K.size(l);let p=K.size(r.dims)===1,v=K.size(n.dims)===1,S=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,E=n.dims.length>0&&n.dims[n.dims.length-1]%4===0;g.push(p),g.push(v),g.push(S),g.push(E);let k=1;for(let O=1;O<l.length;O++){let I=r.dims[r.dims.length-O]??1,T=n.dims[n.dims.length-O]??1;if(I===T)k*=I;else break}k%4===0?(f=!0,c=!0):(p||v||S||E)&&(c=!0)}else c=!0;return g.push(c),{name:t,shaderCache:{hint:e+g.map(y=>y.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:y=>ic(y,r.dims,n.dims,l,c,o,f,a,r.dataType,n.dataType,i,s),getRunData:()=>({outputs:[{dims:l,dataType:i}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:Math.ceil(K.size(l)/4)},..._e(r.dims,n.dims,l)]})}},Kt=(t,e,r,n,a,s)=>{t.compute(sc(e,a??"",t.inputs[0],t.inputs[1],r,n,s))},oc=t=>{Kt(t,"Add",(e,r)=>`${e}+${r}`)},uc=t=>{Kt(t,"Div",(e,r)=>`${e}/${r}`)},lc=t=>{Kt(t,"Equal",{scalar:(e,r)=>`u32(${e}==${r})`,vector:(e,r)=>`vec4<u32>(${e}==${r})`},void 0,void 0,9)},dc=t=>{Kt(t,"Mul",(e,r)=>`${e}*${r}`)},cc=t=>{let e=Y("input",t.inputs[0].dataType,t.inputs[0].dims).type.value;Kt(t,"Pow",{scalar:(r,n)=>`pow_custom(${r},${n})`,vector:(r,n)=>`pow_vector_custom(${r},${n})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},pc=t=>{Kt(t,"Sub",(e,r)=>`${e}-${r}`)},hc=t=>{Kt(t,"Greater",{scalar:(e,r)=>`u32(${e}>${r})`,vector:(e,r)=>`vec4<u32>(${e}>${r})`},void 0,void 0,9)},fc=t=>{Kt(t,"Less",{scalar:(e,r)=>`u32(${e}<${r})`,vector:(e,r)=>`vec4<u32>(${e}<${r})`},void 0,void 0,9)},mc=t=>{Kt(t,"GreaterOrEqual",{scalar:(e,r)=>`u32(${e}>=${r})`,vector:(e,r)=>`vec4<u32>(${e}>=${r})`},void 0,void 0,9)},gc=t=>{Kt(t,"LessOrEqual",{scalar:(e,r)=>`u32(${e}<=${r})`,vector:(e,r)=>`vec4<u32>(${e}<=${r})`},void 0,void 0,9)}}),Fr,Lr,Ur,Rs,Wr=X(()=>{$e(),Ie(),Fr=(t,e,r="f32")=>{switch(t.activation){case"Relu":return`value = max(value, ${e}(0.0));`;case"Sigmoid":return`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${e}(${r}(uniforms.clip_min)), ${e}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${e}(0.0), min(${e}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${e}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${t.activation}`)}},Lr=(t,e)=>{t.activation==="Clip"?e.push({type:1,data:t.clipMax},{type:1,data:t.clipMin}):t.activation==="HardSigmoid"?e.push({type:1,data:t.alpha},{type:1,data:t.beta}):t.activation==="LeakyRelu"&&e.push({type:1,data:t.alpha})},Ur=(t,e)=>{t.activation==="Clip"?e.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):t.activation==="HardSigmoid"?e.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):t.activation==="LeakyRelu"&&e.push({name:"alpha",type:"f32"})},Rs=t=>{let e=(t==null?void 0:t.activation)||"";if(e==="HardSigmoid"){let[r,n]=(t==null?void 0:t.activation_params)||[.2,.5];return{activation:e,alpha:r,beta:n}}else if(e==="Clip"){let[r,n]=(t==null?void 0:t.activation_params)||[$s,xs];return{activation:e,clipMax:n,clipMin:r}}else if(e==="LeakyRelu"){let[r]=(t==null?void 0:t.activation_params)||[.01];return{activation:e,alpha:r}}return{activation:e}}}),mt,Ps,Bs=X(()=>{mt=(t,e)=>{switch(t){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${t}-component is not supported.`)}},Ps=t=>`
      ${t?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Ds,_c=X(()=>{Ds=t=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${t}.x), i32(${t}.y), i32(${t}.z), 1));
}
`}),yc,wc,Qa,Ns,bc,Xa,vc,Fs,Ja=X(()=>{$e(),Ie(),Te(),Wr(),Bs(),yc=(t,e)=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,wc=(t,e)=>t?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Qa=(t,e,r="f32",n,a=!1,s=32,i=!1,o=32)=>{let l=e[1]*t[1],d=e[0]*t[0],c=a?l:s,f=a?s:l,g=c/e[0],y=s/e[1];if(!((a&&g===4&&t[1]===4||!a&&(g===3||g===4))&&c%e[0]===0&&s%e[1]===0&&t[0]===4))throw new Error(`If transposeA ${a} is true, innerElementSize ${g} and workPerThread[1] ${t[1]} must be 4.
      Otherwise, innerElementSize ${g} must be 3 or 4.
  tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${t[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${g}<${r}>, ${c/g}>, ${f}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${d/t[0]}>, ${s}>;

const rowPerThread = ${t[1]};
const colPerThread = ${t[0]};
const innerElementSize = ${g};
const tileInner = ${s};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${i?"0":"i32(globalId.z)"};
  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${i?`${Math.ceil(o/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${i?`i32(globalId.z) * ${o}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${y};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${yc(a,n)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${g===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${wc(a,g)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Ns=(t,e)=>t?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,bc=t=>t?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Xa=(t,e,r="f32",n,a=!1,s=32,i=!1,o=32,l=!1)=>{let d=t[1]*e[1],c=t[0]*e[0],f=a?d:s,g=a?s:d;if(!(g%e[1]===0&&f%e[0]===0&&s%e[1]===0))throw new Error(`tileAHight ${g} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${f} must be divisible by workgroupSize[0]${e[0]}, tileInner ${s} must be divisible by workgroupSize[1]${e[1]}`);let y=g/e[1],p=f/e[0],v=s/e[1],S=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${d};
    let globalColStart = i32(workgroupId.x) * ${c};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${g}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${f}; inputCol = inputCol + ${e[0]}) {
          ${Ns(a,n)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${n?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${a?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${d};

let tileRowA = i32(localId.y) * ${y};
let tileColA = i32(localId.x) * ${p};
let tileRowB = i32(localId.y) * ${v};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${p}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Ns(a,n)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${v}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${n?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${bc(a)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${f}>, ${g}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${c}>, ${s}>;
  const rowPerThread = ${t[1]};
  const colPerThread = ${t[0]};
  const tileInner = ${s};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${i?"0":"i32(globalId.z)"};
    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${i?`${Math.ceil(o/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${i?`i32(globalId.z) * ${o}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${S}
  }
`},vc=(t,e,r,n,a,s=!1)=>{let[i,o,l]=a,[d,c,f,g]=n,y=Bn(i,l),p=Bn(o,l),v=ot(n[0].type.tensor),S=()=>{let k=c.rank,O=d.rank,I=`var aIndices: ${c.type.indices};`;for(let T=k-2-1,F=O-1;T>=0;T--,F--)I+=`
aIndices[${T}] = ${O>1?`batchIndices[${F}]`:"batchIndices"};`;return y.forEach(T=>{I+=`
aIndices[${T}] = 0;`}),I+=`
aIndices[${k-2}] = u32(row);
                   aIndices[${k-1}] = u32(colIn);`,I},E=()=>{let k=f.rank,O=d.rank,I=`var bIndices: ${f.type.indices};`;for(let T=k-2-1,F=O-1;T>=0;T--,F--)I+=`
bIndices[${T}] = ${O>1?`batchIndices[${F}]`:"batchIndices"};`;return p.forEach(T=>{I+=`
bIndices[${T}] = 0;`}),I+=`
bIndices[${k-2}] = u32(row);
                   bIndices[${k-1}] = u32(colIn);`,I};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${d.type.indices}) -> ${mt(t,v)} {
      var value = ${mt(t,v)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${S()}
        value = ${c.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${d.type.indices}) -> ${mt(t,v)} {
      var value = ${mt(t,v)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${E()}
        value = ${f.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${mt(t,v)}) {
      let col = colIn * ${t};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${s?"bias[colIn]":`${mt(t,v)}(bias[row])`};`:""}
        ${r}
        ${g.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Fs=(t,e,r,n,a=!1)=>{let s=t[0].dims,i=t[1].dims,o=s.slice(0,-2),l=i.slice(0,-2),d=n?n.slice(0,-2):r.slice(0,-2),c=K.size(d),f=s[s.length-2],g=s[s.length-1],y=i[i.length-1],p=g%4===0&&y%4===0,v=f<=8?[4,1,1]:[4,4,1],S=[8,8,1],E=[Math.ceil(y/S[0]/v[0]),Math.ceil(f/S[1]/v[1]),Math.ceil(c/S[2]/v[2])],k=p?4:1,O=[...o,f,g/k],I=O.length,T=[...l,g,y/k],F=T.length,B=[c,f,y/k],G=[{type:6,data:f},{type:6,data:y},{type:6,data:g}];Lr(e,G),G.push(..._e(d,O,T));let H=["rank","rank"],Z=t.length>2;Z&&(G.push(..._e(t[2].dims)),H.push("rank")),G.push(..._e(B));let pe=oe=>{let ne=d.length,de=Ss("batchDims",t[0].dataType,ne,1),D=ot(t[0].dataType),z=Y("a",t[0].dataType,I,k),q=Y("b",t[1].dataType,F,k),te=me("result",t[0].dataType,B.length,k),ye=[z,q];if(Z){let Ae=a?k:1;ye.push(Y("bias",t[2].dataType,t[2].dims.length,Ae))}let he=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ur(e,he);let R=ot(te.type.tensor),ie=Fr(e,te.type.value,R),le=vc(k,Z,ie,[de,z,q,te],[o,l,d],a);return`
  ${oe.registerUniforms(he).registerInternalVariables(de).declareVariables(...ye,te)}
  ${le}
  ${p?Qa(v,S,D,de):Xa(v,S,D,de)}
                   `};return{name:"MatMul",shaderCache:{hint:`${v};${e.activation};${p};${a}`,inputDependencies:H},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:G}),getShaderSource:pe}}}),$c,xc,Q0=X(()=>{$e(),Dr(),Te(),Wr(),Bs(),_c(),Ja(),$c=(t,e,r,n,a=!1,s,i=4,o=4,l=4,d="f32")=>{let c=H=>{switch(H){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${d}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${H} is not supported.`)}},f=H=>{switch(H){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${H} is not supported.`)}},g=t?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,y=t?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,p=t?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",v=t?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",S=t?"row":"col",E=t?"col":"row",k=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${S} / outWidth;
    let outCol = ${S} % outWidth;

    let WRow = ${E} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${E} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${E} % inChannels;
    var resData = ${mt(i,d)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${p} && xCol >= 0 && xCol < ${v}) {
      ${g}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${c(i)}
    }
    return resData;`,O=t?e&&n?`
    let col = colIn * ${i};
    ${k}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${k}
    }
    return ${mt(i,d)}(0.0);`:n&&r?`
    let col = colIn * ${i};
    ${k}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${k}
    }
    return ${mt(i,d)}(0.0);`,I=`${f(o)}`,T=mt(l,d),F=mt(t?i:o,d),B=mt(t?o:i,d),G=Fr(s,T,d);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${F} {
      ${t?O:I}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${B} {
      ${t?I:O}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${T}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${y}
      ${Ps(a)}
      ${G}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},xc=(t,e,r,n,a,s,i,o)=>{let l=e.format==="NHWC",d=l?t[0].dims[3]:t[0].dims[1],c=r[0],f=l?r[2]:r[3],g=l?r[1]:r[2],y=l?r[3]:r[1],p=l&&(d%4===0||d%3===0)&&y%4===0,v=l?y:f*g,S=l?f*g:y,E=[8,8,1],k=n<=8?[4,1,1]:[4,4,1],O=[Math.ceil(v/E[0]/k[0]),Math.ceil(S/E[1]/k[1]),Math.ceil(c/E[2]/k[2])];Xe("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${O}`);let I=p?l&&d%4!==0?3:4:1,T=E[1]*k[1],F=E[0]*k[0],B=Math.max(E[0]*I,E[1]),G=n%T===0,H=a%F===0,Z=s%B===0,pe=p?[I,4,4]:[1,1,1],oe=[{type:6,data:n},{type:6,data:a},{type:6,data:s},{type:6,data:[e.pads[0],e.pads[1]]},{type:6,data:e.strides},{type:6,data:e.dilations}];Lr(e,oe),oe.push(..._e(t[0].dims,t[1].dims));let ne=["rank","rank"];i&&(oe.push(..._e(t[2].dims)),ne.push("rank")),oe.push(..._e(r));let de=D=>{let z=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ur(e,z);let q=p?4:1,te=ot(t[0].dataType),ye=`
      fn setOutputAtIndex(flatIndex : i32, value : ${p?`vec4<${te}>`:te}) {
        result[flatIndex] = ${p?`vec4<${te}>`:te}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${p?`vec4<${te}>`:te}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${p?"/ 4":""}, value);
      }`,he=Y("x",t[0].dataType,t[0].dims.length,I===3?1:I),R=Y("w",t[1].dataType,t[1].dims.length,q),ie=[he,R],le=me("result",t[0].dataType,r.length,q);if(i){let Ae=Y("bias",t[2].dataType,t[2].dims.length,q);ie.push(Ae),ye+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${p?`vec4<${te}>`:te} {
          return bias[coords.${l?"w":"y"}${p?"/ 4":""}];
        }`}return`
        ${Ds("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${D.registerUniforms(z).declareVariables(...ie,le)}
        ${ye}
        ${$c(l,G,H,Z,i,e,pe[0],pe[1],pe[2],te)}
        ${p?Qa(k,E,te,void 0,!l,B):Xa(k,E,te,void 0,!l,B,!1,void 0,o)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${e.cacheKey};${I};${p};${G};${H};${Z};${T};${F};${B}`,inputDependencies:ne},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:oe}),getShaderSource:de}}}),Ls,Sc,X0=X(()=>{$e(),Ie(),Te(),Oc(),Wr(),Ls=(t,e,r)=>{let n=t.length>2,a=n?"value += b[output_channel];":"",s=t[0].dims,i=t[1].dims,o=i[0]/e.group,l=e.format==="NHWC",d=Za(s,i,e.dilations,e.pads,e.strides,l),c=K.size(d),f=[{type:12,data:c},{type:12,data:e.dilations},{type:12,data:[e.strides[0],e.strides[1]]},{type:12,data:[e.pads[0],e.pads[1]]},{type:12,data:o}];Lr(e,f),f.push(..._e(s,i));let g=["rank","rank"];n&&(f.push(..._e(t[2].dims)),g.push("rank")),f.push(..._e(d));let y=p=>{let v=me("output",t[0].dataType,d.length),S=ot(v.type.tensor),E=Fr(e,v.type.value,S),k=Y("x",t[0].dataType,s.length),O=Y("w",t[1].dataType,i.length),I=[k,O];n&&I.push(Y("b",t[2].dataType,t[2].dims.length));let T=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:e.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Ur(e,T),`
  ${p.registerUniforms(T).declareVariables(...I,v)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${v.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${v.type.value} = ${v.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${l?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${l?2:3}]) {
            continue;
          }

          let xVal = ${l?k.get("batch","xHeight","xWidth","input_channel"):k.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${O.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${a}
    ${E}
    ${v.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:e.cacheKey,inputDependencies:g},getRunData:()=>({outputs:[{dims:r?r(d):d,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:f}),getShaderSource:y}},Sc=(t,e,r)=>{let n=t.length>2,a=et(r[3]),s=et(r[2]),i=K.size(r)/a/s,o=[t[0].dims[0],t[0].dims[1],t[0].dims[2],t[0].dims[3]/a],l=[t[1].dims[0],t[1].dims[1],t[1].dims[2],t[1].dims[3]/a],d=[r[0],r[1],r[2],r[3]/a],c=[{type:12,data:i},{type:6,data:[e.strides[0],e.strides[1]]},{type:6,data:[e.pads[0],e.pads[1]]}];Lr(e,c),c.push(..._e(o,l,d));let f=(s-1)*e.strides[1]+l[1],g=y=>{let p=me("output",t[0].dataType,d.length,a),v=ot(p.type.tensor),S=Fr(e,p.type.value,v),E=Y("x",t[0].dataType,o.length,a),k=Y("w",t[1].dataType,l.length,a),O=[E,k];n&&O.push(Y("b",t[2].dataType,t[2].dims,a));let I=n?"value += b[output_channel];":"",T=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Ur(e,T),`
  ${y.registerUniforms(T).declareVariables(...O,p)}
  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${s}u;
    let col = (index1 % width1) * ${s}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${E.type.value}, ${f}>;
    var values: array<${p.type.value}, ${s}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${l[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${f}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${E.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${E.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${l[1]}; w_width++) {
          let w_val = ${k.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${s}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${s}u; i++) {
      var value = values[i];
      ${I}
      ${S}
      ${p.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${e.cacheKey};${a};${s};${f};${l[0]};${l[1]}`,inputDependencies:n?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:c}),getShaderSource:g}}}),Us,kc,Ec,Cc=X(()=>{$e(),Ie(),Ja(),Te(),Wr(),Us=(t,e,r,n,a=!1)=>{let s=t[0].dims,i=t[1].dims,o=s[s.length-2],l=i[i.length-1],d=s[s.length-1],c=et(l),f=et(d),g=et(o),y=K.size(r)/c/g,p=t.length>2,v=n?n.slice(0,-2):r.slice(0,-2),S=[K.size(v),o,l],E=[{type:12,data:y},{type:12,data:o},{type:12,data:l},{type:12,data:d}];Lr(e,E),E.push(..._e(v,s,i)),p&&E.push(..._e(t[2].dims)),E.push(..._e(S));let k=O=>{let I=Ss("batch_dims",t[0].dataType,v.length),T=Y("a",t[0].dataType,s.length,f),F=Y("b",t[1].dataType,i.length,c),B=me("output",t[0].dataType,S.length,c),G=ot(B.type.tensor),H=Fr(e,B.type.value,G),Z=[T,F],pe="";if(p){let ye=a?c:1;Z.push(Y("bias",t[2].dataType,t[2].dims.length,ye)),pe=`${a?`value += bias[col / ${ye}];`:`value += ${B.type.value}(bias[row + i]);`}`}let oe=s.slice(0,-2),ne=i.slice(0,-2),de=Bn(oe,v),D=Bn(ne,v),z=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ur(e,z);let q=(ye,he)=>{let R=ye.rank,ie=ye.name;if(R===2)return`var ${ie}_indices = ${ye.type.indices}(0u, 0u);`;let le=I.rank,Ae=`var ${ie}_indices: ${ye.type.indices};`;for(let Me=R-2-1,rt=le-1;Me>=0;Me--,rt--)Ae+=`
${ie}_indices[${Me}] = ${le>1?`batch_indices[${rt}]`:"batch_indices"};`;return he.forEach(Me=>{Ae+=`
${ie}_indices[${Me}] = 0;`}),Ae+=`${ie}_indices[${R-2}] = 0u;
                     ${ie}_indices[${R-1}] = 0u;`,Ae},te=()=>{let ye=`var a_data: ${T.type.value};`;for(let he=0;he<f;he++)ye+=`
              let b_data${he} = b[(b_offset + (k + ${he}) * uniforms.N + col) / ${c}];`;for(let he=0;he<g;he++){ye+=`a_data = a[(a_offset + (row + ${he}) * uniforms.K + k) / ${f}];`;for(let R=0;R<f;R++)ye+=`
            values[${he}] = fma(${F.type.value}(a_data${f===1?"":`[${R}]`}), b_data${R}, values[${he}]);
`}return ye};return`
  ${O.registerUniforms(z).registerInternalVariables(I).declareVariables(...Z,B)}
  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${c})) * ${c};
    var index1 = global_idx / (uniforms.N / ${c});
    let stride1 = uniforms.M / ${g};
    let row = (index1 % stride1) * ${g};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${I.offsetToIndices("batch")};`}
    ${q(T,de)}
    let a_offset = ${T.indicesToOffset("a_indices")};
    ${q(F,D)}
    let b_offset = ${F.indicesToOffset("b_indices")};
    var values: array<${B.type.value}, ${g}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${f}) {
      ${te()}
    }
    for (var i = 0u; i < ${g}u; i++) {
      var value = values[i];
      ${pe}
      ${H}
      let cur_indices = ${B.type.indices}(batch, row + i, col);
      let offset = ${B.indicesToOffset("cur_indices")};
      ${B.setByOffset(`offset / ${c}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${e.activation};${c};${f};${g};${a}`,inputDependencies:p?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:E}),getShaderSource:k}},kc=t=>{if(!t||t.length!==2)throw new Error("MatMul requires 2 inputs.");if(t[0].dims[t[0].dims.length-1]!==t[1].dims[t[1].dims.length-2])throw new Error("shared dimension does not match.")},Ec=t=>{kc(t.inputs);let e=an.calcShape(t.inputs[0].dims,t.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");let r=e[e.length-1],n=t.inputs[0].dims[t.inputs[0].dims.length-1];r<8&&n<8?t.compute(Us(t.inputs,{activation:""},e)):t.compute(Fs(t.inputs,{activation:""},e))}}),Za,ei,Tc,Ws,Vs,Ic,Ac,Gs,Oc=X(()=>{Ie(),Q0(),Ja(),X0(),Wr(),Cc(),Dn(),Za=(t,e,r,n,a,s)=>{let i=t[0],o=t.slice(s?1:2,s?3:4),l=o.length,d=e[0],c=e.slice(2).map((g,y)=>g+(g-1)*(r[y]-1)),f=o.map((g,y)=>g+n[y]+n[y+l]).map((g,y)=>Math.floor((g-c[y]+a[y])/a[y]));return f.splice(0,0,i),f.splice(s?3:1,0,d),f},ei=[2,3,1,0],Tc=(t,e)=>{if(!t||t.length!==2&&t.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(t[0].dims.length!==4&&t[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(t[0].dims.length!==t[1].dims.length)throw new Error("filter does not have same dimension as input");let r=t[0].dims[e.format==="NHWC"?t[0].dims.length-1:1],n=t[1].dims[1]*e.group;if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(t.length===3&&(t[2].dims.length!==1||t[1].dims[0]!==t[2].dims[0]))throw new Error("invalid bias");let a=t[0].dims.length-2;if(e.dilations.length!==a)throw new Error(`dilations should be ${a}D`);if(e.strides.length!==a)throw new Error(`strides should be ${a}D`);if(e.pads.length!==a*2)throw new Error(`pads should be ${a*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==t[1].dims.length-2)throw new Error("invalid kernel shape")},Ws=(t,e)=>{let r=t.kernelShape.slice();for(let s=2;s<e[1].dims.length;++s)r[s-2]===0&&(r[s-2]=e[1].dims[s]);let n=t.pads.slice();Wa.adjustPadsBasedOnAutoPad(e[0].dims,t.strides,t.dilations,r,n,t.format==="NHWC",t.autoPad);let a=Object.assign({},t);return Object.assign(a,{kernelShape:r,pads:n}),a},Vs=t=>{let e=Rs(t),r=t.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],a=t.dilations,s=t.group,i=t.kernel_shape,o=t.pads,l=t.strides,d=t.w_is_const();return{autoPad:n,format:r,dilations:a,group:s,kernelShape:i,pads:o,strides:l,wIsConst:d,...e,cacheKey:`${t.format};${e.activation};`}},Ic=(t,e,r)=>{let n=Ws(r,e),a=r.format==="NHWC";if(r.group!==1){if(!t.adapterInfo.isArchitecture("ampere")&&a&&e[1].dims[0]===r.group&&e[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let F=Za(e[0].dims,e[1].dims,r.dilations,n.pads,r.strides,a),B=t.kernelCustomData.wT??t.compute(hr(e[1],ei),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=B);let G=[e[0],B];e.length===3&&G.push(e[2]),t.compute(Sc(G,n,F),{inputs:G})}else t.compute(Ls(e,n));return}let s=e.length===3,i=e[0].dims[a?1:2],o=e[0].dims[a?2:3],l=e[0].dims[a?3:1],d=e[1].dims[2],c=e[1].dims[3],f=Za(e[0].dims,e[1].dims,r.dilations,n.pads,r.strides,a),g=f[a?1:2],y=f[a?2:3],p=f[a?3:1],v=a&&d===i&&c===o&&r.pads[0]===0&&r.pads[1]===0;if(v||d===1&&c===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let F=f[0],B,G,H,Z=[];if(a){let ne=t.kernelCustomData.wT??t.compute(hr(e[1],ei),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=ne),v){let de=i*o*l;B=e[0].reshape([1,F,de]),G=ne.reshape([1,de,p]),H=[1,F,p]}else B=e[0].reshape([F,i*o,l]),G=ne.reshape([1,l,p]),H=[F,g*y,p];Z.push(B),Z.push(G)}else B=e[0].reshape([F,l,i*o]),G=e[1].reshape([1,p,l]),H=[F,p,g*y],Z.push(G),Z.push(B);s&&Z.push(e[2]);let pe=H[2],oe=Z[0].dims[Z[0].dims.length-1];pe<8&&oe<8?t.compute(Us(Z,n,f,H,a),{inputs:Z}):t.compute(Fs(Z,n,f,H,a),{inputs:Z});return}let S=!0,E=t.kernelCustomData.wT??t.compute(hr(e[1],ei),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=E);let k=[e[0],E];s&&k.push(e[2]);let O=a?g*y:p,I=a?p:g*y,T=d*c*l;t.compute(xc(k,n,f,O,I,T,s,S),{inputs:k})},Ac=(t,e)=>{let r=e.format==="NHWC",n=[t.inputs[0].reshape(r?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];t.inputs.length===3&&n.push(t.inputs[2]);let a=[0,e.pads[0],0,e.pads[1]],s=[1].concat(e.strides),i=[1].concat(e.dilations),o=[1].concat(e.kernelShape),l=Ws({...e,pads:a,strides:s,dilations:i,kernelShape:o},n);t.compute(Ls(n,l,d=>r?[d[0],d[2],d[3]]:[]))},Gs=(t,e)=>{Tc(t.inputs,e),t.inputs[0].dims.length===3?Ac(t,e):Ic(t,t.inputs,e)}}),Mc,zc,J0=X(()=>{$e(),Dr(),Te(),Wr(),Bs(),_c(),Ja(),Mc=(t,e=!1,r,n,a=4)=>{let s=S=>{switch(S){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${n}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${S} is not supported.`)}},i=t?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,o=t?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,l=t?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",d=t?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",c=t?"row":"col",f=t?"col":"row",g=`
      let inChannels = ${t?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${c} / outWidth;
      let outCol = ${c} % outWidth;

      let WRow = ${f} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${f} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${l}) || fract(xR) > 0.0) {
        return ${n}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${d}) || fract(xC) > 0.0) {
        return ${n}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${f} % inChannels;
      ${i}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${a}];`,y=t?`
      let col = colIn * ${a};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${g}
      }
      return ${n}(0.0);`:`
      let col = colIn * ${a};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${g}
      }
      return ${n}(0.0);`,p=`
      let col = colIn * ${a};
      let inChannels = ${t?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${t?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${s(a)}
      }
      return ${n}(0.0);
      `,v=Fr(r,n);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${t?y:p}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${t?p:y}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${n}) {
    let col = colIn * ${a};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${o}
      ${Ps(e)}
      ${v}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${a}] = value;
    }
  }`},zc=(t,e,r,n,a,s,i,o)=>{let l=e.format==="NHWC",d=l?t[0].dims[3]:t[0].dims[1],c=r[0],f=l?r[2]:r[3],g=l?r[1]:r[2],y=l?r[3]:r[1],p=l&&d%4===0&&d%3&&y%4===0,v=l?y:f*g,S=l?f*g:y,E=[8,8,1],k=n<=8?[4,1,1]:[4,4,1],O=[Math.ceil(v/E[0]/k[0]),Math.ceil(S/E[1]/k[1]),Math.ceil(c/E[2]/k[2])];Xe("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${O}`);let I=p?4:1,T=Math.max(E[0]*I,E[1]),F=p?4:1,B=[e.kernelShape[l?1:2],e.kernelShape[l?2:3]],G=[B[0]+(e.dilations[0]<=1?0:(B[0]-1)*(e.dilations[0]-1)),B[1]+(e.dilations[1]<=1?0:(B[1]-1)*(e.dilations[1]-1))],H=[G[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),G[1]-1-Math.floor((e.pads[1]+e.pads[3])/2)],Z=[{type:6,data:n},{type:6,data:a},{type:6,data:s},{type:6,data:e.strides},{type:6,data:e.dilations},{type:6,data:B},{type:6,data:H}];Lr(e,Z),Z.push(..._e(t[0].dims,t[1].dims));let pe=["rank","rank"];i&&(Z.push(..._e(t[2].dims)),pe.push("rank")),Z.push(..._e(r));let oe=ne=>{let de=Y("x",t[0].dataType,t[0].dims.length,F),D=Y("w",t[1].dataType,t[1].dims.length,1),z=me("result",t[0].dataType,r.length,F),q=[de,D],te="";if(i){let R=Y("bias",t[2].dataType,t[2].dims.length,F);q.push(R),te+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${R.type.value} {
            return bias[coords.${l?"w":"y"}${p?"/ 4":""}];
          }`}let ye=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:B.length},{name:"pads",type:"i32",length:H.length}];Ur(e,ye);let he=ot(t[0].dataType,1);if(he!=="f16"&&he!=="f32")throw new Error(`elemType ${he} is not supported.`);return`
        ${Ds("uniforms.result_strides")}
        ${ne.registerUniforms(ye).declareVariables(...q,z)};
        ${te}
        ${Mc(l,i,e,de.type.value,I)}
        ${p?Qa(k,E,he,void 0,!l,T):Xa(k,E,he,void 0,!l,T,!1,void 0,o)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${e.cacheKey};${k};${E};${p}`,inputDependencies:pe},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:Z}),getShaderSource:oe}}}),Rc,Hs,Z0=X(()=>{$e(),Dr(),Ie(),Te(),Rc=(t,e,r,n,a,s=!1,i,o,l=!1)=>{let d=l?1:2,c=l?2:3,f=l?3:1,g=s?2:1,y=`
  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${i}>`:i}) {
    result[flatIndex] = ${s?`vec4<${i}>`:i}(value);
  }`;n&&(y+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${i}>`:i} {
      return bias[coords.${l?"w":"y"}${s?"/ 4":""}];
    }`);let p=s?4:1,v=Y("W",e[1].dataType,e[1].dims.length,p),S=Y("Dy",e[0].dataType,e[0].dims.length,p),E=[S,v];n&&E.push(Y("bias",e[2].dataType,[r[f]].length,p));let k=me("result",e[0].dataType,r.length,p),O=`{
        let batch: u32 = ${a?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${a?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${a?"global_id.y":"workgroup_id.y"} * ${g};
        let d1: u32 = ${a?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${i}>, ${g}>;
        for (var i = 0; i < ${g}; i++) {
          dotProd[i] = vec4<${i}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${i}(dyCorner.x) + ${i}(wR)) / ${i}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${i}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${i}(dyCorner.y) + ${i}(wC)) / ${i}(uniforms.strides.y);
            let dyC2 = (${i}(dyCorner.y) + 1.0 + ${i}(wC)) / ${i}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${i}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${i}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${S.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${i}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${S.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${i}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${f}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${S.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${i}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${S.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${i}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${g}; i = i + 1) {
          let value = dotProd[i] + ${n?"bias[c+i]":`vec4<${i}>(0.0)`};
          ${k.set("batch","r","c + i","d1","value")};
        }
      }`,I=`
          let outputIndices = ${k.offsetToIndices("global_idx")};
          let batch = ${k.indicesGet("outputIndices",0)};
          let d1 = ${k.indicesGet("outputIndices",f)};
          let r = ${k.indicesGet("outputIndices",d)};
          let c = ${k.indicesGet("outputIndices",c)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${i}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${i}(dyRCorner) + ${i}(wR)) / ${i}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${i}(uniforms.Dy_shape[${d}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${i}(dyCCorner) + ${i}(wC)) / ${i}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${i}(uniforms.Dy_shape[${c}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${l?S.get("batch","idyR","idyC","inputChannel"):S.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${v.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${n?"bias[d1]":`${i}(0.0)`};
          ${k.setByOffset("global_idx","value")};
        `;return`
  ${t.registerUniforms(o).declareVariables(...E,k)}
  ${y}

    ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${s?O:I}}`},Hs=(t,e,r)=>{let n=t.length>2,a=e.outputShape,s=K.size(a),i=[Math.ceil(s/64),1,1];Xe("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${i}`);let o=e.format==="NHWC",l=["rank","rank"],d=[e.strides[0],e.strides[1]],c=[e.kernelShape[o?1:2],e.kernelShape[o?2:3]],f=[e.dilations[0],e.dilations[1]],g=[c[0]+(e.dilations[0]<=1?0:(e.kernelShape[o?1:2]-1)*(e.dilations[0]-1)),c[1]+(e.dilations[1]<=1?0:(e.kernelShape[o?2:3]-1)*(e.dilations[1]-1))],y=[g[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),g[1]-1-Math.floor(e.pads[1]+e.pads[3])/2],p=!1,v=e.group,S=t[1].dims,E=S[0]/v,k=S[1],O=[{type:12,data:s},{type:12,data:d},{type:12,data:c},{type:12,data:f},{type:12,data:g},{type:6,data:y},{type:12,data:E},{type:12,data:k},..._e(t[0].dims,t[1].dims)];n&&(O.push(..._e(t[2].dims)),l.push("rank")),O.push(..._e(a));let I=i[1]===1&&i[2]===1,T=F=>{let B=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:d.length},{name:"filter_dims",type:"u32",length:c.length},{name:"dilations",type:"u32",length:c.length},{name:"effective_filter_dims",type:"u32",length:g.length},{name:"pads",type:"i32",length:y.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],G=ot(t[0].dataType);return`${Rc(F,t,a,n,I,p,G,B,o)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${e.cacheKey};`,inputDependencies:l},getRunData:()=>({dispatchGroup:{x:i[0],y:i[1],z:i[2]},outputs:[{dims:r?r(a):a,dataType:t[0].dataType}],programUniforms:O}),getShaderSource:T}}}),Pc,Bc,Dc,qs,Nc,Fc,Lc,Uc,Wc,Vc,e_=X(()=>{J0(),Z0(),Wr(),Dn(),Pc=(t,e,r,n,a,s)=>(t-1)*e+r+(n-1)*a+1-s,Bc=(t,e,r,n,a)=>{let s=Math.floor(t/2);e==="SAME_UPPER"?(r[n]=s,r[a]=t-s):e==="SAME_LOWER"&&(r[n]=t-s,r[a]=s)},Dc=(t,e,r,n,a,s,i,o,l,d)=>{let c=t.length-2,f=d.length===0;if(l.length===0)for(let p=0;p<c;++p)l.push(0);let g=t[0],y=e[o?3:1]*a;for(let p=0,v=t.length-c-(o?1:0);p<c;++p,++v){let S=t[v],E=f?S*i[p]:d[p],k=Pc(S,i[p],s[p],e[v],r[p],E);Bc(k,n,s,p,p+c),f&&d.push(i[p]*(S-1)+l[p]+(e[v]-1)*r[p]+1-s[p]-s[p+c])}d.splice(0,0,g),d.splice(o?3:1,0,y)},qs=(t,e)=>{let r=t.kernelShape.slice();if(t.kernelShape.length===0||t.kernelShape.reduce((f,g)=>f*g,1)===0){r.length=0;for(let f=2;f<e[1].dims.length;++f)r.push(e[1].dims[f])}let n=t.format==="NHWC";r.splice(0,0,e[1].dims[0]),r.splice(n?3:1,0,e[1].dims[1]);let a=t.pads.slice(),s=t.outputShape.slice(),i=t.outputPadding.slice(),o=e[0].dims,l=t.dilations.slice();if(l.reduce((f,g)=>f+g,0)===0){let f=e[0].dims.length-2;l=new Array(f).fill(1)}let d=t.strides.slice();if(d.reduce((f,g)=>f+g,0)===0){let f=e[0].dims.length-2;d=new Array(f).fill(1)}Dc(o,r,l,t.autoPad,t.group,a,d,n,i,s);let c=Object.assign({},t);return Object.assign(c,{kernelShape:r,pads:a,outputPadding:i,outputShape:s,dilations:l,strides:d}),c},Nc=t=>{let e=Rs(t),r=t.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof t.autoPad>"u"?0:t.autoPad],a=t.dilations,s=t.group,i=t.kernelShape,o=t.pads,l=t.strides,d=t.wIsConst(),c=t.outputPadding,f=t.outputShape;return{autoPad:n,format:r,dilations:a,group:s,kernelShape:i,outputPadding:c,outputShape:f,pads:o,strides:l,wIsConst:d,...e,cacheKey:`${t.format};${e.activation};`}},Fc=(t,e)=>{if(!t||t.length!==2&&t.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(t[0].dims.length!==4&&t[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(t[0].dims.length!==t[1].dims.length)throw new Error("filter does not have same dimension as input");let r=t[0].dims[e.format==="NHWC"?t[0].dims.length-1:1],n=t[1].dims[0];if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let a=t[1].dims[1]*e.group;if(t.length===3&&(t[2].dims.length!==1||t[2].dims[0]!==a))throw new Error("invalid bias");let s=t[0].dims.length-2;if(e.dilations.reduce((i,o)=>i+o,0)>0&&e.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(e.strides.reduce((i,o)=>i+o,0)>0&&e.strides.length!==s)throw new Error(`strides should be ${s}D`);if(e.pads.reduce((i,o)=>i+o,0)>0&&e.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(e.outputPadding.length!==s&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(e.kernelShape.reduce((i,o)=>i+o,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==t[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==t[0].dims.length-2)throw new Error("invalid output shape")},Lc=[2,3,1,0],Uc=(t,e,r)=>{let n=qs(r,e),a=r.format==="NHWC",s=n.outputShape,i=s[a?3:1],o=e[0].dims[a?3:1];if(n.group!==1||i===1&&o===1){t.compute(Hs(e,n));return}let l=s[a?1:2],d=s[a?2:3],c=e[1].dims[2],f=e[1].dims[3],g=a?l*d:i,y=a?i:l*d,p=c*f*o,v=!0,S=t.kernelCustomData.wT??t.compute(hr(e[1],Lc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=S);let E=[e[0],S],k=e.length===3;k&&(!a&&e[2].dims.length===1?E.push(e[2].reshape([e[2].dims[0],1,1])):E.push(e[2])),t.compute(zc(E,n,s,g,y,p,k,v),{inputs:E})},Wc=(t,e)=>{let r=e.format==="NHWC",n=[t.inputs[0].reshape(r?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];t.inputs.length===3&&n.push(t.inputs[2]);let a=e.kernelShape;(a.length===0||a[0]===0)&&(a=[t.inputs[1].dims[2]]);let s=e.dilations;(s.length===0||s[0]===0)&&(s=[1]);let i=e.strides;(i.length===0||i[0]===0)&&(i=[1]);let o=e.pads;o.length===0&&(o=[0,0]),o=[0,o[0],0,o[1]],i=[1].concat(i),s=[1].concat(s),a=[1].concat(a);let l=qs({...e,pads:o,strides:i,dilations:s,kernelShape:a},n);t.compute(Hs(n,l,d=>r?[d[0],d[2],d[3]]:[d[0],d[1],d[3]]))},Vc=(t,e)=>{Fc(t.inputs,e),t.inputs[0].dims.length===3?Wc(t,e):Uc(t,t.inputs,e)}}),Gc,Hc,qc,t_=X(()=>{$e(),Ie(),st(),Te(),Gc=(t,e,r,n)=>{let a=K.size(e),s=e.length,i=Y("input",t,s),o=me("output",t,s),l=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),d=K.normalizeAxis(l,s),c=f=>{let g=` i32(${i.indicesGet("inputIndices","uniforms.axis")}) `,y=xe("uniforms.input_shape","uniforms.axis",s),p=n.reverse?g+(n.exclusive?" + 1":""):"0",v=n.reverse?y:g+(n.exclusive?"":" + 1");return`
                ${f.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(i,o)}
                ${f.mainStart()}
                  ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${o.offsetToIndices("global_idx")};
                  var sum = ${o.type.value}(0);
                  let first : i32 = ${p};
                  let last : i32 = ${v};
                  for (var i : i32 = first; i < last; i++) {
                    ${i.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${i.getByIndices("inputIndices")};
                  }
                  ${o.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},{type:12,data:d},..._e(e,e)]}),getShaderSource:c}},Hc=(t,e)=>{let r=t.inputs[0].dims,n=t.inputs[0].dataType,a=t.inputs[1];t.compute(Gc(n,r,a,e),{inputs:[0]})},qc=t=>{let e=t.exclusive===1,r=t.reverse===1;return He({exclusive:e,reverse:r})}}),jc,Kc,Yc,Qc,Xc,r_=X(()=>{$e(),Ie(),st(),Te(),jc=t=>{if(!t||t.length!==1)throw new Error("DepthToSpace requires 1 input.");if(t[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Kc=(t,e,r,n)=>{let a=[];a.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let s=0;s<e;++s)a.push(r.indicesSet("a",t[s],`i[${s}]`));return a.push("return a;}"),a.join(`
`)},Yc=(t,e)=>{let r,n,a,s,i,o,l=e.format==="NHWC",d=e.blocksize,c=e.mode==="DCR";l?([r,n,a,s]=t.dims,i=c?[r,n,a,d,d,s/d**2]:[r,n,a,s/d**2,d,d],o=c?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,n,a,s]=[t.dims[0],t.dims[2],t.dims[3],t.dims[1]],i=c?[r,d,d,s/d**2,n,a]:[r,s/d**2,d,d,n,a],o=c?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let f=t.reshape(i),g=f.dims.length,y=t.dataType,p=Y("a",y,g),v=me("output",y,g),S=E=>`
  ${E.registerUniform("output_size","u32").declareVariables(p,v)}

  ${Kc(o,g,p,v)}

  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${v.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${v.setByOffset("global_idx",p.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${t.dims};${e.blocksize};${e.mode}`,inputDependencies:["rank"]},getRunData:E=>{let k=l?[r,n*d,a*d,s/d**2]:[r,s/d**2,n*d,a*d],O=K.size(k),I=f.dims,T=K.sortBasedOnPerm(I,o);return{outputs:[{dims:k,dataType:E[0].dataType}],dispatchGroup:{x:Math.ceil(O/64)},programUniforms:[{type:12,data:O},..._e(I,T)]}},getShaderSource:S}},Qc=(t,e)=>{jc(t.inputs),t.compute(Yc(t.inputs[0],e))},Xc=t=>He({blocksize:t.blocksize,mode:t.mode,format:t.format})}),ti,Nn,js,Jc,Zc,ep,tp,Ks,rp,np,ap,n_=X(()=>{$e(),Ie(),st(),Te(),ti="[a-zA-Z]|\\.\\.\\.",Nn="("+ti+")+",js="^"+Nn+"$",Jc="("+Nn+",)*"+Nn,Zc="^"+Jc+"$",ep=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,e){let r=this.symbolToIndices.get(t);r===void 0?r=[e]:r.push(e),this.symbolToIndices.set(t,r)}},tp=class{constructor(t,e){var a;this.equation=e,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,n]=e.includes("->")?e.split("->",2):[e,""];if(!r.match(RegExp(Zc)))throw new Error("Invalid LHS term");if(r.split(",").forEach((s,i)=>{let o=t[i].dims.slice();if(!s.match(RegExp(js)))throw new Error("Invalid LHS term");let l=this.processTerm(s,!0,o,i);this.lhs.push(l)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([s,i])=>i.count===1||s==="...").map(([s])=>s).join("");else if(!n.match(RegExp(Nn)))throw new Error("Invalid RHS");(a=n.match(RegExp(ti,"g")))==null||a.forEach(s=>{if(s==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let i=this.symbolToInfo.get(s);if(i===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(i.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(t,e,r){let n=this.symbolToInfo.get(t);if(n!==void 0){if(n.dimValue!==e&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(r)}else n={count:1,dimValue:e,inputIndices:[r]};this.symbolToInfo.set(t,n)}processTerm(t,e,r,n=-1){let a=r.length,s=!1,i=[],o=0;if(!t.match(RegExp(js))&&!e&&t!=="")throw new Error("Invalid LHS term");let l=t.match(RegExp(ti,"g")),d=new ep(n);return l==null||l.forEach((c,f)=>{if(c==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let g=a-l.length+1;if(g<0)throw new Error("Ellipsis out of bounds");if(i=r.slice(o,o+g),this.hasEllipsis){if(this.ellipsisDims.length!==i.length||this.ellipsisDims.toString()!==i.toString())throw new Error("Ellipsis dimensions mismatch")}else if(e)this.hasEllipsis=!0,this.ellipsisDims=i;else throw new Error("Ellipsis must be specified in the LHS");for(let y=0;y<i.length;y++){let p=String.fromCharCode(48+y);d.addSymbol(p,f+y),this.addSymbol(p,r[o++],n)}}else d.addSymbol(c,f+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(c,r[o++],n)}),d}},Ks=t=>t+"_max",rp=(t,e,r,n)=>{let a=t.map(d=>d.length).map((d,c)=>Y(`input${c}`,e,d)),s=K.size(n),i=me("output",e,n.length),o=[...r.symbolToInfo.keys()].filter(d=>!r.rhs.symbolToIndices.has(d)),l=d=>{let c=[],f="var prod = 1.0;",g="var sum = 0.0;",y="sum += prod;",p=[],v=[],S=[],E=[],k=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((I,T)=>{var F;if(r.rhs.symbolToIndices.has(T)){let B=(F=r.rhs.symbolToIndices.get(T))==null?void 0:F[0];B!==void 0&&r.lhs.forEach((G,H)=>{if(I.inputIndices.includes(H)){let Z=G.symbolToIndices.get(T);if(Z===void 0)throw new Error("Invalid symbol error");Z.forEach(pe=>{c.push(`${a[H].indicesSet(`input${H}Indices`,pe,i.indicesGet("outputIndices",B))}`)})}})}else r.lhs.forEach((B,G)=>{if(I.inputIndices.includes(G)){let H=B.symbolToIndices.get(T);if(H===void 0)throw new Error("Invalid symbol error");H.forEach(Z=>{p.push(`${a[G].indicesSet(`input${G}Indices`,Z,`${T}`)}`)}),E.push(`prod *= ${a[G].getByIndices(`input${G}Indices`)};`)}}),v.push(`for(var ${T}: u32 = 0; ${T} < uniforms.${Ks(T)}; ${T}++) {`),S.push("}")});let O=k?[...c,`let sum = ${a.map((I,T)=>I.getByIndices(`input${T}Indices`)).join(" * ")};`]:[...c,g,...v,...p,f,...E,y,...S];return`
            ${d.registerUniforms(o.map(I=>({name:`${Ks(I)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...a,i)}

            ${d.mainStart()}
            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${i.offsetToIndices("global_idx")};
            ${a.map((I,T)=>`var input${T}Indices: ${a[T].type.indices};`).join(`
`)}
            ${O.join(`
`)};
            ${i.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:t.map(()=>"rank")},getRunData:()=>{let d=o.filter(f=>r.symbolToInfo.has(f)).map(f=>{var g;return{type:12,data:((g=r.symbolToInfo.get(f))==null?void 0:g.dimValue)||0}});d.push({type:12,data:s});let c=t.map((f,g)=>[..._e(f)]).reduce((f,g)=>f.concat(g),d);return c.push(..._e(n)),{outputs:[{dims:n,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:c}},getShaderSource:l}},np=(t,e)=>{let r=new tp(t.inputs,e.equation),n=r.outputDims,a=t.inputs.map((s,i)=>s.dims);t.compute(rp(a,t.inputs[0].dataType,r,n))},ap=t=>{let e=t.equation.replace(/\s+/g,"");return He({equation:e})}}),ip,Ys,sp,op,up,a_=X(()=>{$e(),Ie(),Te(),ip=t=>{if(!t||t.length!==2)throw new Error("Expand requires 2 input.");let e=t[0].dims,r=Array.from(t[1].getBigInt64Array(),Number),n=r.length<e.length?0:r.length-e.length,a=e.length<r.length?0:e.length-r.length;for(;n<r.length&&a<e.length;++n,++a)if(r[n]!==e[a]&&r[n]!==1&&e[a]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ys=(t,e)=>{let r=t.length-e.length,n=[];for(let a=0;a<r;++a)n.push(t[a]);for(let a=0;a<e.length;++a)n.push(e[a]===1?t[a+r]:e[a]);return n},sp=(t,e)=>t.length>e.length?Ys(t,e):Ys(e,t),op=t=>{let e=t[0].dims,r=Array.from(t[1].getBigInt64Array(),Number),n=sp(e,r),a=t[0].dataType,s=a===9?4:1,i=Math.ceil(K.size(n)/s),o=d=>{let c=Y("input",a,e.length,s),f=me("output",a,n.length,s),g;if(a===9){let y=(p,v,S="")=>`
          let outputIndices${v} = ${f.offsetToIndices(`outputOffset + ${v}u`)};
          let offset${v} = ${c.broadcastedIndicesToOffset(`outputIndices${v}`,f)};
          let index${v} = offset${v} / 4u;
          let component${v} = offset${v} % 4u;
          ${p}[${v}] = ${S}(${c.getByOffset(`index${v}`)}[component${v}]);
        `;g=`
        let outputOffset = global_idx * ${s};
        var data = vec4<u32>(0);
        ${y("data",0,"u32")}
        ${y("data",1,"u32")}
        ${y("data",2,"u32")}
        ${y("data",3,"u32")}
        ${f.setByOffset("global_idx","data")}
      }`}else g=`
        let outputIndices = ${f.offsetToIndices("global_idx")};
        let inputOffset = ${c.broadcastedIndicesToOffset("outputIndices",f)};
        ${f.setByOffset("global_idx",c.getByOffset("inputOffset"))}
      }`;return`
    ${d.registerUniform("vec_size","u32").declareVariables(c,f)}
    ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${g}`},l=[{type:12,data:i},..._e(e,n)];return{name:"Expand",shaderCache:{hint:`${n.length}`,inputDependencies:["rank"]},getShaderSource:o,getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:l})}},up=t=>{ip(t.inputs),t.compute(op(t.inputs),{inputs:[0]})}}),lp,dp,i_=X(()=>{$e(),Ie(),Te(),zs(),lp=t=>{let e=t[0].dataType,r=K.size(t[0].dims),n=K.size(t[1].dims),a=n%4===0,s=i=>{let o=Y("x",e,[1],4),l=Y("bias",e,[1],4),d=me("y",e,[1],4),c=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],f=y=>`
      let bias${y}_offset: u32 = (global_idx * 4 + ${y}) % uniforms.bias_size;
      let bias${y} = ${l.getByOffset(`bias${y}_offset / 4`)}[bias${y}_offset % 4];`,g=a?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${f(0)}${f(1)}${f(2)}${f(3)}
      let bias = ${o.type.value}(bias0, bias1, bias2, bias3);`;return`${i.registerUniforms(c).declareVariables(o,l,d)}

    ${Os(wt(e))}

    ${i.mainStart(sn)}
      ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${o.getByOffset("global_idx")};
      ${g}
      let x_in = x + bias;
      ${d.setByOffset("global_idx",Ms("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${a}`,inputDependencies:["type","type"]},getShaderSource:s,getRunData:i=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:n}],dispatchGroup:{x:Math.ceil(r/sn/4)}})}},dp=t=>{t.inputs.length<2||K.size(t.inputs[1].dims)===0?Zd(t):t.compute(lp(t.inputs))}}),cp,pp,hp,fp,s_=X(()=>{$e(),Ie(),st(),Te(),cp=t=>{if(!t||t.length!==2)throw new Error("Gather requires 2 inputs.")},pp=(t,e)=>{let r=t[0].dims,n=t[1].dims,a=r.length,s=K.normalizeAxis(e.axis,a),i=r.slice(0);i.splice(s,1,...n);let o=r[s],l=t[0].dataType===9?4:1,d=Math.ceil(K.size(i)/l),c=[{type:12,data:d},{type:6,data:o},{type:12,data:s},..._e(t[0].dims,t[1].dims,i)],f=g=>{let y=Y("data",t[0].dataType,t[0].dims.length,l),p=Y("inputIndices",t[1].dataType,t[1].dims.length),v=me("output",t[0].dataType,i.length,l),S=k=>{let O=n.length,I=`var indicesIndices${k}  = ${p.type.indices}(0);`;for(let T=0;T<O;T++)I+=`${O>1?`indicesIndices${k}[${T}]`:`indicesIndices${k}`} = ${i.length>1?`outputIndices${k}[uniforms.axis + ${T}]`:`outputIndices${k}`};`;I+=`
          var idx${k} = ${p.getByIndices(`indicesIndices${k}`)};
          if (idx${k} < 0) {
            idx${k} = idx${k} + uniforms.axisDimLimit;
          }
          var dataIndices${k} : ${y.type.indices};
        `;for(let T=0,F=0;T<a;T++)T===s?(I+=`${a>1?`dataIndices${k}[${T}]`:`dataIndices${k}`} = u32(idx${k});`,F+=O):(I+=`${a>1?`dataIndices${k}[${T}]`:`dataIndices${k}`} = ${i.length>1?`outputIndices${k}[${F}]`:`outputIndices${k}`};`,F++);return I},E;if(t[0].dataType===9){let k=(O,I,T="")=>`
          let outputIndices${I} = ${v.offsetToIndices(`outputOffset + ${I}u`)};
          ${S(I)};
          let offset${I} = ${y.indicesToOffset(`dataIndices${I}`)};
          let index${I} = offset${I} / 4u;
          let component${I} = offset${I} % 4u;
          ${O}[${I}] = ${T}(${y.getByOffset(`index${I}`)}[component${I}]);
        `;E=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${k("value",0,"u32")}
        ${k("value",1,"u32")}
        ${k("value",2,"u32")}
        ${k("value",3,"u32")}
        ${v.setByOffset("global_idx","value")}
      `}else E=`
      let outputIndices = ${v.offsetToIndices("global_idx")};
      ${S("")};
      let value = ${y.getByIndices("dataIndices")};
      ${v.setByOffset("global_idx","value")};
      `;return`
      ${g.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,p,v)}
      ${g.mainStart()}
        ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${E}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:f}},hp=t=>He({axis:t.axis}),fp=(t,e)=>{let r=t.inputs;cp(r),t.compute(pp(t.inputs,e))}}),mp,gp,_p,yp,o_=X(()=>{$e(),Ie(),st(),Te(),mp=t=>{if(!t||t.length!==2)throw new Error("GatherElements requires 2 inputs.");if(t[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(t[0].dims.length!==t[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},gp=(t,e)=>{let r=t[0].dims,n=t[0].dataType,a=r.length,s=t[1].dims,i=t[1].dataType,o=K.normalizeAxis(e.axis,a),l=r[o],d=s.slice(0),c=K.size(d),f=Y("input",n,a),g=Y("indicesInput",i,s.length),y=me("output",n,d.length),p=[{type:12,data:c},{type:6,data:l},{type:12,data:o}];return p.push(..._e(r,s,d)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:d,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:v=>`
      ${v.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(f,g,y)}
      ${v.mainStart()}
      ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${y.offsetToIndices("global_idx")};

      var idx = ${g.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${f.type.indices}(outputIndices);
      ${f.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${f.getByIndices("inputIndices")};

      ${y.setByOffset("global_idx","value")};
  }`}},_p=t=>He({axis:t.axis}),yp=(t,e)=>{let r=t.inputs;mp(r),t.compute(gp(t.inputs,e))}}),wp,bp,vp,$p,u_=X(()=>{$e(),Ie(),Te(),wp=t=>{if(!t)throw new Error("Input is missing");if(t.length<2||t.length>3)throw new Error("Invaid input number.");if(t.length===3&&t[2].dims.length>2)throw new Error("Invalid input shape of C");if(t[0].dataType!==t[1].dataType||t.length===3&&t[0].dataType!==t[2].dataType)throw new Error("Input types are mismatched")},bp=(t,e)=>{let r=t[0].dims.slice(),n=t[1].dims.slice(),[a,s,i]=nl.getShapeOfGemmResult(r,e.transA,n,e.transB,t.length===3?t[2].dims:void 0),o=[a,s];if(!o)throw new Error("Can't use gemm on the given tensors");let l=K.size(o),d=[{type:12,data:l},{type:12,data:a},{type:12,data:s},{type:12,data:i},{type:1,data:e.alpha},{type:1,data:e.beta}],c=["type","type"];t.length===3&&(d.push(..._e(t[2].dims)),c.push("rank")),d.push(..._e(o));let f=g=>{let y="";e.transA&&e.transB?y="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":e.transA&&!e.transB?y="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!e.transA&&e.transB?y="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!e.transA&&!e.transB&&(y="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let p=e.alpha===1?"":"value *= uniforms.alpha;",v=Y("a",t[0].dataType,t[0].dims),S=Y("b",t[1].dataType,t[1].dims),E=v.type.value,k=null,O=[v,S];t.length===3&&(k=Y("c",t[2].dataType,t[2].dims.length),O.push(k));let I=me("output",t[0].dataType,o.length);O.push(I);let T=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${g.registerUniforms(T).declareVariables(...O)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${E}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${y}
    }

    ${p}
    ${k!=null?`let cOffset = ${k.broadcastedIndicesToOffset("vec2(m, n)",I)}; value += ${E}(uniforms.beta) * ${k.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:o,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:f}},vp=t=>{let e=t.transA,r=t.transB,n=t.alpha,a=t.beta;return{transA:e,transB:r,alpha:n,beta:a,cacheKey:`${t.transA};${t.transB};${t.alpha===1}`}},$p=(t,e)=>{wp(t.inputs),t.compute(bp(t.inputs,e))}}),xp,Sp,kp,Ep,l_=X(()=>{$e(),Ie(),Te(),xp=(t,e)=>{let r=t[0].dims,n=r,a=2,s=K.sizeToDimension(r,a),i=K.sizeFromDimension(r,a),o=et(i),l=i/o,d=[r[0],r[1],l],c=["rank","type","type"],f=[{type:12,data:i},{type:12,data:l}];f.push(..._e(d,d));let g=y=>{let p=Y("x",t[0].dataType,d.length,o),v=Y("scale",t[1].dataType,t[1].dims),S=Y("bias",t[2].dataType,t[2].dims),E=me("output",t[0].dataType,d.length,o),k=[p,v,S,E],O=p.type.value,I=o===1?"f32":`vec${o}<f32>`,T=64,F=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${I}, ${T}>;
  const workgroupSize = ${T}u;
  ${y.registerUniforms(F).declareVariables(...k)}
  ${y.mainStart(T)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${I}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${I}(${p.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${$r("workgroupShared[0]",o)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${I}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${I}(${p.get("batch","channel","h")}) - ${I}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${$r("workgroupShared[0]",o)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${e.epsilon}));
    let channelScale = invStdDev * f32(${v.getByOffset("channel")});
    let channelShift = f32(${S.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${p.get("batch","channel","h")} * ${O}(${I}(channelScale)) + ${O}(${I}(channelShift));
      ${E.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${e.epsilon};${o}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:s},programUniforms:f}),getShaderSource:g}},Sp=(t,e,r,n,a,s,i,o)=>{let l=et(i),d=64,c=l===1?"vec2f":`mat2x${l}f`,f=l===1?"f32":`vec${l}f`,g=(F,B)=>`${c}(${F}, ${B})`,y=a*i/l,p=Math.ceil(s/d),v=["type"],S=[{type:12,data:p},{type:12,data:s},{type:12,data:Math.floor(i/l)},{type:12,data:Math.floor(s*i/l)}],E=F=>{let B=Y("input",e.dataType,e.dims,l);return`
  ${F.declareVariables(B)}
  @group(0) @binding(1) var<storage, read_write> output : array<${c}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${F.mainStart(d)}
    let currentImageNumber = global_idx / ${d} / uniforms.C;
    let currentChannelNumber = (global_idx / ${d}) % uniforms.C;
    let wgOffset = local_id.x * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${Nr("f32",l)};
    var squaredSum = ${Nr("f32",l)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${f}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${g("sum","squaredSum")};
  }`},k=t.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${l}`,inputDependencies:v},getRunData:()=>({outputs:[{dims:[a,i,d,2],dataType:1}],dispatchGroup:{x:a*i/l},programUniforms:S}),getShaderSource:E},{inputs:[e],outputs:[-1]})[0],O=[{type:12,data:y},{type:12,data:s},{type:12,data:Math.floor(i/l)},{type:12,data:Math.floor(d*i/l)}],I=["type","type","type"],T=F=>{let B=Y("scale",r.dataType,r.dims,l),G=Y("bias",n.dataType,n.dims,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${c}>;
  @group(0) @binding(1) var<storage, read> scale : array<${B.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${G.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${c}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${F.mainStart()}
    ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${Nr("f32",l)};
    var squaredSum = ${Nr("f32",l)};
    for (var i: u32 = 0; i < min(${d}, uniforms.H); i++) {
        let value = input[offset + i + currentChannelNumber * ${d}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${o}));
    let channelScale = invStdDev * ${f}(scale[currentChannelNumber]);
    let channelShift = ${f}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${g("channelScale","channelShift")};
  }`};return t.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${o}`,inputDependencies:I},getRunData:()=>({outputs:[{dims:[a,i,2],dataType:1}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:O}),getShaderSource:T},{inputs:[k,r,n],outputs:[-1]})[0]},kp=(t,e,r)=>{let n=e[0].dims,a=n,s=n[0],i=n[n.length-1],o=K.sizeFromDimension(n,1)/i,l=et(i),d=K.size(a)/l,c=[{type:12,data:o},{type:12,data:Math.floor(i/l)}],f=["type","type"],g=Sp(t,e[0],e[1],e[2],s,o,i,r.epsilon),y=p=>{let v=ot(e[0].dataType),S=l===1?"vec2f":`mat2x${l}f`,E=l===1?v:`vec${l}<${v}>`,k=Y("input",e[0].dataType,e[0].dims,l),O=me("output",e[0].dataType,a,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${k.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${S}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${O.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${p.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${E}(scale[0]), ${E}(scale[1]));
  }`};t.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:y},{inputs:[e[0],g]})},Ep=(t,e)=>{e.format==="NHWC"?kp(t,t.inputs,e):t.compute(xp(t.inputs,e))}}),Cp,Tp,Ip,d_=X(()=>{$e(),Ie(),Te(),Cp=t=>{if(!t||t.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Tp=(t,e,r)=>{let n=e.simplified,a=t[0].dims,s=t[1],i=!n&&t[2],o=a,l=K.normalizeAxis(e.axis,a.length),d=K.sizeToDimension(a,l),c=K.sizeFromDimension(a,l),f=K.size(s.dims),g=i?K.size(i.dims):0;if(f!==c||i&&g!==c)throw new Error(`Size of X.shape()[axis:] == ${c}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${f} and bias size of ${g}`);let y=[];for(let T=0;T<a.length;++T)T<l?y.push(a[T]):y.push(1);let p=et(c),v=["type","type"],S=[{type:12,data:d},{type:1,data:c},{type:12,data:Math.floor(c/p)},{type:1,data:e.epsilon}];i&&v.push("type");let E=r>1,k=r>2,O=T=>{let F=ot(t[0].dataType),B=[Y("x",t[0].dataType,t[0].dims,p),Y("scale",s.dataType,s.dims,p)];i&&B.push(Y("bias",i.dataType,i.dims,p)),B.push(me("output",t[0].dataType,o,p)),E&&B.push(me("mean_data_output",1,y)),k&&B.push(me("inv_std_output",1,y));let G=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${T.registerUniforms(G).declareVariables(...B)}
  ${T.mainStart()}
    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Nr("f32",p)};
    var mean_square_vector = ${Nr("f32",p)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${on(F,p,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${$r("mean_vector",p)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${$r("mean_square_vector",p)} / uniforms.norm_size ${n?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${on(F,p,"x[j + offset]")};
      let f32scale = ${on(F,p,"scale[j]")};
      output[j + offset] = ${B[0].type.value}((f32input ${n?"":"- mean"}) * inv_std_dev * f32scale
        ${i?`+ ${on(F,p,"bias[j]")}`:""}
      );
    }

    ${E?"mean_data_output[global_idx] = mean":""};
    ${k?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},I=[{dims:o,dataType:t[0].dataType}];return E&&I.push({dims:y,dataType:1}),k&&I.push({dims:y,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${p};${r};${n}`,inputDependencies:v},getRunData:()=>({outputs:I,dispatchGroup:{x:Math.ceil(d/64)},programUniforms:S}),getShaderSource:O}},Ip=(t,e)=>{Cp(t.inputs),t.compute(Tp(t.inputs,e,t.outputCount))}}),Ap,Op,Mp,zp,c_=X(()=>{$e(),Ie(),st(),Te(),Ap=(t,e)=>{if(t.length<3||t.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=t[0],n=r.dims.length;if(r.dims[n-1]!==e.k)throw new Error("The last dim of input shape does not match the k value");let a=Math.floor((e.k+e.blockSize-1)/e.blockSize),s=e.blockSize/8*e.bits,i=t[1];if(!K.areEqual(i.dims,[e.n,a,s]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let o=t[2].dims;if(K.size(o)!==e.n*a)throw new Error("scales input size error.");if(t.length===4){let l=t[3].dims,d=e.bits>4?e.n*a:e.n*Math.floor((a+1)/2);if(K.size(l)!==d)throw new Error("zeroPoints input size error.")}},Op=(t,e,r,n)=>{let a=t[0].dims,s=a.length,i=Math.floor((e.k+e.blockSize-1)/e.blockSize),o=a[s-2],l=e.k,d=e.n,c=a.slice(0,s-2),f=K.size(c),g=e.blockSize/8*e.bits/4,y=t[0].dataType,p=et(o),v=et(e.k),S=et(g),E=Pn(y),k=o*i*E,O=Math.floor(n/k),I=i<=r[0]&&O>0,T=!I||O>=4?et(d):O>=2&&et(d)>=2?2:1,F=c.concat([o,d]),B=K.size(F)/T/p,G=I?[]:[{type:12,data:B},{type:12,data:e.blockSize}],H=[f,o,l/v],Z=K.convertShape(t[1].dims).slice();Z.splice(-1,1,g/S),G.push(..._e(H)),G.push(..._e(Z)),G.push(..._e(t[2].dims)),t.length===4&&G.push(..._e(K.convertShape(t[3].dims)));let pe=[f,o,d/T];G.push(..._e(pe));let oe=ne=>{let de=H.length,D=Y("a",t[0].dataType,de,v),z=Y("b",12,Z.length,S),q=Y("scales",t[2].dataType,t[2].dims.length),te=[D,z,q],ye=t.length===4?Y("zero_points",12,t[3].dims.length):void 0;ye&&te.push(ye);let he=pe.length,R=me("output",t[0].dataType,he,T),ie=[{name:"output_size",type:"u32"},{name:"block_size",type:"u32"}],le=ot(t[0].dataType),Ae=(()=>{switch(v){case 1:return`array<${le}, 8>`;case 2:return`mat4x2<${le}>`;case 4:return`mat2x4<${le}>`;default:throw new Error(`${v}-component is not supported.`)}})(),Me=`
        for (var word: u32 = 0; word < ${g}; word += ${S}) {
          ${z.indicesSet("b_indices","2","word")};
          let b_data = ${z.getByIndices("b_indices")};
          for (var i: u32 = 0; i < ${S}; i++) {
            let b_value: u32 = ${S===1?"b_data":"b_data[word + i]"};
            let b_mask: u32 = 0x0F0F0F0Fu;
            let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);
            let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);
            let b_quantized_values = ${Ae}(${Array.from({length:4},($t,nt)=>`${le}(b_value_lower[${nt}]), ${le}(b_value_upper[${nt}])`).join(", ")});
            let b_dequantized_values = ${v===1?`${Ae}(${Array.from({length:8},($t,nt)=>`(b_quantized_values[${nt}] - zero_point) * scale`).join(", ")});`:`(b_quantized_values - ${Ae}(${Array(8).fill("zero_point").join(",")})) * scale;`};
            // Number of B elements per 32-bit word is 32/bits = 32/4 = 8
            for (var m: u32 = 0; m < ${I?o:p}u; m++) {
              ${D.indicesSet("a_indices",de-2,I?"m":`row * ${p} + m`)};
              ${D.indicesSet("a_indices",de-1,"word_offset")};
              var input_offset = ${D.indicesToOffset("a_indices")};
              var a_data: ${Ae};
              for (var j: u32 = 0; j < ${8/v}; j++) {
                a_data[j] = ${D.getByOffset("input_offset")};
                input_offset++;
              }
              ${I?"workgroup_shared[workgroup_shared_offset + m]":"output_values[m]"}${T>1?"[c]":""} += ${Array.from({length:8/v},($t,nt)=>`${v===1?`a_data[${nt}] * b_dequantized_values[${nt}]`:`dot(a_data[${nt}], b_dequantized_values[${nt}])`}`).join(" + ")};
            }
            word_offset += ${8/v};
          }
        }`,rt=ye?`
          zero_point_offset += 4;
          if (zero_point_offset == 32) {
            zero_point_offset = 0;
            zero_point_index++;
            zero_point_word = ${ye.getByOffset("zero_point_index")};
          }`:"";return I?`
        var<workgroup> workgroup_shared: array<${R.type.value}, ${o*i}>;
        ${ne.declareVariables(...te,R)}
        ${ne.mainStart([i,1,1])}
          var a_indices: ${D.type.indices};
          var block = local_id.x;
          var col = workgroup_id.y;
          var batch = workgroup_id.z;
          ${D.indicesSet("a_indices","0","batch")};
          // Two zero points are packed into one byte when uniforms.bits is 4.
          for (var c: u32 = 0; c < ${T}; c++) {
            let col_times_components_plus_c = col * ${T} + c;
              ${ye?`
            var zero_point_bytes_per_col: u32 = (${i} + 1) / 2;
            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);
            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;
            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;
            var zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            var zero_point_word: u32 = ${ye.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}
            var b_indices: ${z.type.indices};
            ${z.indicesSet("b_indices","0","col_times_components_plus_c")};
            // The scale and zero points are computed per block.
            var scales_index = col_times_components_plus_c * ${i} + block;
            let scale = ${q.getByOffset("scales_index")};
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${le}(${ye?"(zero_point_word) & 0xFu":8});
            ${z.indicesSet("b_indices","1","block")};
            var word_offset: u32 = block * ${e.blockSize/v};
            var workgroup_shared_offset: u32 = block * ${o};
            ${Me}
          }
          workgroupBarrier();
          var output_indices: ${R.type.indices};
          var elements_per_thread: u32 = ${Math.ceil(o/i)};
          ${R.indicesSet("output_indices","0","batch")};
          ${R.indicesSet("output_indices",he-1,"col")};
          ${R.indicesSet("output_indices",he-2,"local_id.x * elements_per_thread")};
          var output_offset = ${R.indicesToOffset("output_indices")};
          for (var m: u32 = 0u; m < elements_per_thread; m++) {
            var row = m + local_id.x * elements_per_thread;
            if (row < ${o}) {
              var output_value: ${R.type.value} = ${R.type.value}(0);
              var workgroup_shared_offset: u32 = row;
              for (var b: u32 = 0u; b < ${i}u; b++) {
                output_value += workgroup_shared[workgroup_shared_offset];
                workgroup_shared_offset += ${o};
              }
              ${R.setByOffset("output_offset","output_value")};
              output_offset += ${d/T};
            }
          }
        }`:`
        ${ne.registerUniforms(ie).declareVariables(...te,R)}
        ${ne.mainStart()}
          ${ne.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var output_values: array<${R.type.value}, ${p}>;
          var output_indices = ${R.offsetToIndices("global_idx")};
          var col = ${R.indicesGet("output_indices",he-1)};
          var row = ${R.indicesGet("output_indices",he-2)};
          var a_indices: ${D.type.indices} = output_indices;
          // Two zero points are packed into one byte because uniforms.bits <= 4.
          // zero_point_offset is either 0 or 4. It is bit offset within one byte.
          // TODO support zero_point_offset for bits > 4
          ${ye?`
          var zero_point_abs_offset = col * ${T} * ((${i} + 1) / 2);
          var zero_point_index: u32 = zero_point_abs_offset / 4;
          var zero_point_word: u32 = ${ye.getByOffset("zero_point_index")};
          var zero_point_offset: u32 = (zero_point_abs_offset % 4) * 8;`:""}
          var scale_index = col * ${i*T};
          var b_indices: ${z.type.indices};
          for (var c: u32 = 0; c < ${T}; c++) {
            ${z.indicesSet("b_indices","0",`col * ${T} + c`)};
            var block_offset: u32 = 0;
            for (var block: u32 = 0; block < ${i}; block++) {
              // The scale and zero points are computed per block.
              let scale = ${q.getByOffset("scale_index")};
              // The default zero point is 8 for unsigned 4-bit quantization.
              let zero_point = ${le}(${ye?"extractBits(zero_point_word, zero_point_offset, 4)":8});
              ${z.indicesSet("b_indices","1","block")};
              var word_offset: u32 = block_offset;
              ${Me}
              scale_index++;
              ${rt}
              block_offset += uniforms.block_size / ${v};
            }
            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.
            ${ye?`if (zero_point_offset % 8 > 0) {
                ${rt}
              }`:""}
            }
            for (var k: u32 = 0u; k < ${p}u; k++) {
              ${R.indicesSet("output_indices",he-2,`${p} * row + k`)};
              ${R.setByIndices("output_indices","output_values[k]")}
            }
        }`};return{name:I?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:`${e.cacheKey};${o};${y};${t.length}`,inputDependencies:Array(t.length).fill("rank")},getRunData:()=>({outputs:[{dims:F,dataType:y}],name:I?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:I?{x:1,y:Math.ceil(d/T),z:f}:{x:Math.ceil(B/64)},programUniforms:G}),getShaderSource:oe}},Mp=(t,e)=>{Ap(t.inputs,e);let r=t.getMaxComputeWorkgroupSizes(),n=t.getMaxComputeWorkgroupStoragesize();t.compute(Op(t.inputs,e,r,n))},zp=t=>He(t)}),gt,Rp,Pp,Qs,Bp,ri,Dp,p_=X(()=>{$e(),Ie(),st(),ys(),pd(),Te(),Dn(),gt=(t,e)=>t.length>e&&t[e].dims.length>0&&K.size(t[e].dims)>0?t[e]:void 0,Rp=(t,e)=>{let r=t[0],n=gt(t,1),a=gt(t,2),s=gt(t,3),i=gt(t,4),o=gt(t,5),l=gt(t,6),d=gt(t,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let c=!1,f=r.dims[0],g=r.dims[1],y=r.dims.length===3?c?r.dims[2]/3:r.dims[2]:e.numHeads*r.dims[4],p=g,v=0,S=0,E=Math.floor(y/e.numHeads);if(l&&d){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==f||l.dims[1]!==e.numHeads||l.dims[3]!==E)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(d.dims[0]!==f||d.dims[1]!==e.numHeads||d.dims[3]!==E)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==d.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(d.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');v=l.dims[2],S=l.dims[2]}else if(l||d)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let k;if(n){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(n.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');k=2,p=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==e.numHeads||n.dims[3]!==2||n.dims[4]!==E)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(a)throw new Error('Expect "value" be none when "key" has packed kv format.');k=5,p=n.dims[1]}else{if(n.dims[1]!==e.numHeads||n.dims[3]!==E)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');k=0,p=n.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==e.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');k=3}if(s){if(s.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(a&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let O=0;if(i){O=8;let G=i.dims;throw G.length===1?G[0]===f?O=1:G[0]===3*f+2&&(O=3):G.length===2&&G[0]===f&&G[1]===p&&(O=5),O===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let I=!1,T=y;if(a){if(a.dims.length!==3&&a.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==a.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(a.dims.length===3){if(p!==a.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');T=a.dims[2]}else{if(p!==a.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');T=a.dims[1]*a.dims[3],I=!0}}let F=v+p,B=!1;if(i)throw new Error("Key padding mask is not supported");if(o){if(o.dims.length!==4)throw new Error('Input "relative_position_bias" is expected to have 4 dimensions');if(o.dims[0]!==f&&o.dims[0]!==1||o.dims[1]!==e.numHeads||o.dims[2]!==g||o.dims[3]!==F)throw new Error('Input "relative_position_bias" shape (batch_size, 1, sequence_length, kv_sequence_length)')}return{batchSize:f,sequenceLength:g,pastSequenceLength:v,kvSequenceLength:p,totalSequenceLength:F,maxSequenceLength:S,inputHiddenSize:0,hiddenSize:y,vHiddenSize:T,headSize:E,vHeadSize:Math.floor(T/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:O,scale:e.scale,broadcastResPosBias:B,passPastInKv:I,qkvFormat:k}},Pp=t=>He({...t}),Qs=He({perm:[0,2,1,3]}),Bp=(t,e,r,n,a,s,i)=>{let o=[n,a,s],l=K.size(o),d=[{type:12,data:l},{type:12,data:i},{type:12,data:s}],c=f=>{let g=me("qkv_with_bias",e.dataType,o),y=Y("qkv",e.dataType,o),p=Y("bias",r.dataType,o),v=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${f.registerUniforms(v).declareVariables(y,p,g)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return t.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:c},{inputs:[e,r],outputs:[-1]})[0]},ri=(t,e,r,n,a,s,i,o)=>{let l=s;if(i){if(n===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=Bp(t,s,i,e,n,r*a,o),l=l.reshape([e,n,r,a]),t.compute(hr(l,Qs.perm),{inputs:[l],outputs:[-1]})[0]}else return s.dims.length===3&&(l=s.reshape([e,n,r,a])),t.compute(hr(l,Qs.perm),{inputs:[l],outputs:[-1]})[0]},Dp=(t,e)=>{let r=Rp(t.inputs,e),n=t.inputs[0],a=gt(t.inputs,1),s=gt(t.inputs,2),i=gt(t.inputs,3),o=gt(t.inputs,4),l=gt(t.inputs,5),d=gt(t.inputs,6),c=gt(t.inputs,7);if(n.dims.length===5)throw new Error("Packed QKV is not implemented");if((a==null?void 0:a.dims.length)===5)throw new Error("Packed KV is not implemented");let f=a&&s&&a.dims.length===4&&s.dims.length===4,g=ri(t,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,n,i,0);if(f)return ja(t,g,a,s,o,void 0,d,c,l,r,e);if(!a||!s)throw new Error("key and value must be provided");let y=ri(t,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,a,i,r.hiddenSize),p=ri(t,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,s,i,2*r.hiddenSize);ja(t,g,y,p,o,void 0,d,c,l,r,e)}}),Np,Fp,Lp,Up,Wp,Vp,Gp,Hp,qp,h_=X(()=>{$e(),Ie(),Te(),Np=t=>{if(!t||t.length<1)throw new Error("Too few inputs");if(t[0].dataType!==1&&t[0].dataType!==10)throw new Error("Input type must be float or float16.");if(t.length>=2){let e=t[0].dims.length*2===t[1].dims[0];if(t.length===4&&(e=t[3].dims[0]*2===t[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Fp=(t,e,r)=>{let n="";for(let a=e-1;a>=0;--a)n+=`
            k = i32(${t.indicesGet("indices",a)}) - ${xe("uniforms.pads",a,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${xe("uniforms.x_shape",a,e)})) {
              break;
            }
            offset += k * i32(${xe("uniforms.x_strides",a,e)});
        `;return`
          value = ${t.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${n}
            value = x[offset];
          }
      `},Lp=(t,e,r)=>{let n="";for(let a=e-1;a>=0;--a)n+=`
                k = i32(${t.indicesGet("indices",a)}) - ${xe("uniforms.pads",a,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${xe("uniforms.x_shape",a,e)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${xe("uniforms.x_shape",a,e)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${xe("uniforms.x_strides",a,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Up=(t,e,r)=>{let n="";for(let a=e-1;a>=0;--a)n+=`
                k = i32(${t.indicesGet("indices",a)}) - ${xe("uniforms.pads",a,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${xe("uniforms.x_shape",a,e)})) {
                  k = i32(${xe("uniforms.x_shape",a,e)}) - 1;
                }
                offset += k * i32(${xe("uniforms.x_strides",a,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Wp=(t,e,r)=>{let n="";for(let a=e-1;a>=0;--a)n+=`
                k = i32(${t.indicesGet("indices",a)}) - ${xe("uniforms.pads",a,r)};
                if (k < 0)  {
                  k += i32(${xe("uniforms.x_shape",a,e)}]);
                }
                if (k >= i32(${xe("uniforms.x_shape",a,e)})) {
                  k -= i32(${xe("uniforms.x_shape",a,e)});
                }
                offset += k * i32(${xe("uniforms.x_strides",a,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Vp=(t,e,r)=>{switch(r.mode){case 0:return Fp(t,e,r.pads.length);case 1:return Lp(t,e,r.pads.length);case 2:return Up(t,e,r.pads.length);case 3:return Wp(t,e,r.pads.length);default:throw new Error("Invalid mode")}},Gp=(t,e)=>{let r=K.padShape(t[0].dims.slice(),e.pads),n=t[0].dims,a=K.size(r),s=[{type:12,data:a},{type:6,data:e.pads}];e.mode===0&&s.push({type:t[0].dataType,data:e.value}),s.push(..._e(t[0].dims,r));let i=["rank"],o=l=>{let d=me("output",t[0].dataType,r.length),c=Y("x",t[0].dataType,n.length),f=c.type.value,g=Vp(d,n.length,e),y=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:e.pads.length}];return e.mode===0&&y.push({name:"constant_value",type:f}),`
            ${l.registerUniforms(y).declareVariables(c,d)}
            ${l.mainStart()}
            ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${d.offsetToIndices("global_idx")};

            var value = ${f}(0);
            ${g}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${e.mode}`,inputDependencies:i},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(K.size(r)/64)},programUniforms:s}),getShaderSource:o}},Hp=(t,e)=>{if(t.length>1){let r=t[1].getBigInt64Array(),n=t.length>=3&&t[2].data?t[2].getFloat32Array()[0]:0,a=t[0].dims.length,s=new Int32Array(2*a).fill(0);if(t.length>=4){let o=t[3].getBigInt64Array();for(let l=0;l<o.length;l++)s[Number(o[l])]=Number(r[l]),s[Number(o[l])+a]=Number(r[l+o.length])}else r.forEach((o,l)=>s[Number(l)]=Number(o));let i=[];return s.forEach(o=>i.push(o)),{mode:e.mode,value:n,pads:i}}else return e},qp=(t,e)=>{Np(t.inputs);let r=Hp(t.inputs,e);t.compute(Gp(t.inputs,r),{inputs:[0]})}}),Fn,Xs,Js,Zs,eo,jp,Kp,to,ro,Yp,Qp,no,Xp,Jp,ao,Zp,eh,th,rh,f_=X(()=>{Vt(),$e(),Ie(),Te(),Fn=t=>{if(Ue.webgpu.validateInputContent&&(!t||t.length!==1))throw new Error("Pool ops requires 1 input.")},Xs=(t,e,r)=>{let n=e.format==="NHWC",a=t.dims.slice();n&&a.splice(1,0,a.pop());let s=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),o=e.strides.slice(),l=s?e.dilations.slice():[],d=e.pads.slice();Wa.adjustPoolAttributes(r,a,i,o,l,d);let c=Wa.computePoolOutputShape(r,a,o,l,i,d,e.autoPad),f=Object.assign({},e);s?Object.assign(f,{kernelShape:i,strides:o,pads:d,dilations:l,cacheKey:e.cacheKey}):Object.assign(f,{kernelShape:i,strides:o,pads:d,cacheKey:e.cacheKey});let g=c.slice();return g.push(g.splice(1,1)[0]),[f,n?g:c]},Js=(t,e)=>{let r=e.format==="NHWC",n=K.size(t),a=K.size(e.kernelShape),s=[{type:12,data:n},{type:12,data:a}],i=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let o=e.kernelShape[e.kernelShape.length-1],l=e.strides[e.strides.length-1],d=e.pads[e.pads.length/2-1],c=e.pads[e.pads.length-1],f=!!(d+c);s.push({type:12,data:o},{type:12,data:l},{type:12,data:d},{type:12,data:c}),i.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let g=!1;if(e.kernelShape.length===2){let y=e.kernelShape[e.kernelShape.length-2],p=e.strides[e.strides.length-2],v=e.pads[e.pads.length/2-2],S=e.pads[e.pads.length-2];g=!!(v+S),s.push({type:12,data:y},{type:12,data:p},{type:12,data:v},{type:12,data:S}),i.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,i,!0,f,g]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let o=K.computeStrides(e.kernelShape);s.push({type:12,data:o},{type:12,data:e.pads},{type:12,data:e.strides}),i.push({name:"kernelStrides",type:"u32",length:o.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let l=e.pads.reduce((d,c)=>d+c);return[s,i,!!l,!1,!1]}},Zs=(t,e,r,n,a,s,i,o,l,d,c,f)=>{let g=a.format==="NHWC",y=e.type.value,p=me("output",e.type.tensor,n);if(a.kernelShape.length<=2){let v="",S="",E="",k=r-(g?2:1);if(c?v=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${k}] = indices[${k}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${k}] < 0 || xIndices[${k}]
                      >= uniforms.x_shape[${k}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${s}
                }`:v=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${k}] = indices[${k}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${s}
                }`,a.kernelShape.length===2){let O=r-(g?3:2);f?S=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${O}] < 0 || xIndices[${O}] >= uniforms.x_shape[${O}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:S=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;
                `,E=`
              }
            `}return`
            ${t.registerUniforms(l).declareVariables(e,p)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${p.offsetToIndices("global_idx")};
              var xIndices = ${p.offsetToIndices("global_idx")};

              var value = ${y}(${o});
              var pad = 0;
              ${S}
              ${v}
              ${E}
              ${i}

              output[global_idx] = value;
            }`}else{if(g)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let v=a.kernelShape.length,S=a.pads.length,E="";return d?E=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${s}
              }`:E=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${s}
            `,`
            ${t.registerUniforms(l).declareVariables(e,p)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${p.offsetToIndices("global_idx")};
              var xIndices = ${p.offsetToIndices("global_idx")};

              var offsets: array<u32, ${v}>;

              var value = ${y}(${o});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${v-1}u; j++) {
                  offsets[j] = offset / ${xe("uniforms.kernelStrides","j",v)};
                  offset -= offsets[j] * ${xe("uniforms.kernelStrides","j",v)};
                }
                offsets[${v-1}] = offset;

                isPad = false;
                for (var j = ${r-v}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${xe("uniforms.strides",`j - ${r-v}u`,v)}
                    + offsets[j - ${r-v}u] - ${xe("uniforms.pads","j - 2u",S)};
                  ${E}
              }
              ${i}

              output[global_idx] = value;
            }`}},eo=t=>`${t.format};${t.ceilMode};${t.autoPad};${t.kernelShape.length}`,jp=t=>`${eo(t)};${t.countIncludePad}`,Kp=t=>`${eo(t)};${t.storageOrder};${t.dilations}`,to=t=>({format:t.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],ceilMode:t.ceil_mode,kernelShape:t.kernel_shape,strides:t.strides,pads:t.pads}),ro=(t,e,r,n)=>{let[a,s]=Xs(e,n,r),i=Y("x",e.dataType,e.dims.length),o=i.type.value,l="value += x_val;",d="";a.countIncludePad?d+=`value /= ${o}(uniforms.kernelSize);`:d+=`value /= ${o}(i32(uniforms.kernelSize) - pad);`;let[c,f,g,y,p]=Js(s,a);c.push(..._e(e.dims,s));let v=["rank"];return{name:t,shaderCache:{hint:`${n.cacheKey};${g};${y};${p}`,inputDependencies:v},getRunData:()=>({outputs:[{dims:s,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(K.size(s)/64)},programUniforms:c}),getShaderSource:S=>Zs(S,i,e.dims.length,s.length,a,l,d,0,f,g,y,p)}},Yp=t=>{let e=t.count_include_pad!==0,r=to(t);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let n={countIncludePad:e,...r,cacheKey:""};return{...n,cacheKey:jp(n)}},Qp=(t,e)=>{Fn(t.inputs),t.compute(ro("AveragePool",t.inputs[0],!1,e))},no={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Xp=t=>{let e=t.format;return{format:e,...no,cacheKey:e}},Jp=(t,e)=>{Fn(t.inputs),t.compute(ro("GlobalAveragePool",t.inputs[0],!0,e))},ao=(t,e,r,n)=>{let[a,s]=Xs(e,n,r),i=`
      value = max(x_val, value);
    `,o="",l=Y("x",e.dataType,e.dims.length),d=["rank"],[c,f,g,y,p]=Js(s,a);return c.push(..._e(e.dims,s)),{name:t,shaderCache:{hint:`${n.cacheKey};${g};${y};${p}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:s,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(K.size(s)/64)},programUniforms:c}),getShaderSource:v=>Zs(v,l,e.dims.length,s.length,a,i,o,e.dataType===10?-65504:-1e5,f,g,y,p)}},Zp=(t,e)=>{Fn(t.inputs),t.compute(ao("MaxPool",t.inputs[0],!1,e))},eh=t=>{let e=t.storage_order,r=t.dilations,n=to(t);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let a={storageOrder:e,dilations:r,...n,cacheKey:""};return{...a,cacheKey:Kp(a)}},th=t=>{let e=t.format;return{format:e,...no,cacheKey:e}},rh=(t,e)=>{Fn(t.inputs),t.compute(ao("GlobalMaxPool",t.inputs[0],!0,e))}}),nh,ah,ih,m_=X(()=>{Vt(),$e(),Te(),nh=(t,e,r)=>{let n=t===e,a=t<e&&r<0,s=t>e&&r>0;if(n||a||s)throw new Error("Range these inputs' contents are invalid.")},ah=(t,e,r,n)=>{let a=Math.abs(Math.ceil((e-t)/r)),s=[a],i=a,o=[{type:12,data:i},{type:n,data:t},{type:n,data:r},..._e(s)],l=d=>{let c=me("output",n,s.length),f=c.type.value,g=[{name:"outputSize",type:"u32"},{name:"start",type:f},{name:"delta",type:f}];return`
        ${d.registerUniforms(g).declareVariables(c)}
        ${d.mainStart()}
        ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${f}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${n}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:o})}},ih=t=>{let e=0,r=0,n=0;t.inputs[0].dataType===6?(e=t.inputs[0].getInt32Array()[0],r=t.inputs[1].getInt32Array()[0],n=t.inputs[2].getInt32Array()[0]):t.inputs[0].dataType===1&&(e=t.inputs[0].getFloat32Array()[0],r=t.inputs[1].getFloat32Array()[0],n=t.inputs[2].getFloat32Array()[0]),Ue.webgpu.validateInputContent&&nh(e,r,n),t.compute(ah(e,r,n,t.inputs[0].dataType),{inputs:[]})}}),sh,oh,uh,lh,dh,ch,ph,hh,fh,mh,gh,io,_h,yh,wh,bh,vh,$h,xh,g_=X(()=>{$e(),Ie(),st(),Te(),sh=(t,e)=>{if(t.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),t.length>0){if(e.mode==="linear"){if(!(t.length===2||t.length===3||t.length===4&&t[0]===1&&t[1]===1||t.length===4&&t[0]===1&&t[3]===1||t.length===5&&t[0]===1&&t[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(e.mode==="cubic"&&!(t.length===2||t.length===4&&t[0]===1&&t[1]===1||t.length===4&&t[0]===1&&t[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},oh=(t,e,r)=>{e.every(a=>a>=0&&a<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let n=new Array(r).fill(1);return e.forEach((a,s)=>n[a]=t[s]),n},uh=(t,e,r,n,a,s)=>{let[i,o,l]=r>10?[1,2,3]:[-1,t.length>1?1:-1,-1],d=t[0].dims.length;if(i>0&&t.length>i&&t[i].dims.length>0)t[i].getFloat32Array().forEach(c=>s.push(c));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(o>0&&t.length>o&&t[o].dims.length>0){if(t[o].getFloat32Array().forEach(c=>n.push(c)),n.length!==0&&n.length!==d&&r>=18&&n.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");sh(n,e),e.axes.length>0&&oh(n,e.axes,d).forEach((c,f)=>n[f]=c)}if(l>0&&t.length>l&&(t[l].getBigInt64Array().forEach(c=>a.push(Number(c))),a.length!==d||r>=18&&a.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(n.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(a.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof n<"u"&&typeof a<"u"&&n.length>0&&a.length>d)throw new Error("Resize requires only of scales or sizes to be specified")},lh=(t,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${e} { `+(()=>{switch(t){case"asymmetric":return`return ${e}(xResized) / ${e}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${e}(xResized) + 0.5) / ${e}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${e}(xResized) + 0.5) / ${e}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${e}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${e}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${e}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${e}(roiStart) * ${e}(lengthOriginal - 1) +
                        (${e}(xResized) * ${e}(roiEnd - roiStart) * ${e}(lengthOriginal - 1)) /
                        ${e}(lengthResized - 1);
                  } else {
                    return 0.5 * ${e}(roiStart + roiEnd) * ${e}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${e}xScale * ${e}(lengthResized);
                  const adjustment = ${e}(lengthResized) / outputWidth;
                  const center = ${e}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;case"half_pixel":return`return ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${t} is not supported`)}})()+"}",dh=(t,e,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(t){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${t} is not supported`)}})()+"}",ch=(t,e,r)=>{let n=new Array(r).fill(0).concat(new Array(r).fill(1)),a=t.length===0?n:t.slice();return e.length>0?(e.forEach((s,i)=>{n[s]=a[i],n[i+r]=a[e.length+i]}),n):a},ph=(t,e,r,n)=>{let a=[];if(r.length>0)if(n.length>0){if(t.forEach(s=>a.push(s)),Math.max(...n)>t.length)throw new Error("axes is out of bound");n.forEach((s,i)=>a[s]=r[i])}else r.forEach(s=>a.push(s));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");a=t.map((s,i)=>Math.round(s*e[i]))}return a},hh=(t,e,r)=>{let n=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(s=>e[s]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(s=>e[s]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let a=t.slice();return r.axes.length>0?(r.axes.forEach(s=>e[s]=n),r.axes.forEach(s=>a[s]=Math.round(t[s]*e[s]))):(e.fill(n,0,e.length),a.forEach((s,i)=>a[i]=Math.round(s*e[i]))),a},fh=(t,e,r,n,a)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> array<${t.type.value}, ${r.length}> {
      var original_indices: array<${t.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var scale = ${xe("uniforms.scales","i",n)};
        var roi_low = ${xe("uniforms.roi","i",a)};
        var roi_hi = ${xe("uniforms.roi",`i + ${e.length}`,a)};
        if (scale == 1.0) {
          original_indices[i] = ${t.type.value}(output_index);
        } else {
          var input_shape_i = ${xe("uniforms.input_shape","i",e.length)};
          var output_shape_i = ${xe("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,mh=(t,e,r,n,a,s,i)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> ${t.type.indices} {
      var input_indices: ${t.type.indices};
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${xe("uniforms.scales","i",a)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${xe("uniforms.roi","i",s)};
          var roi_hi = ${xe("uniforms.roi",`i + ${r.length}`,s)};
          var input_shape_i = ${xe("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${xe("uniforms.output_shape","i",n.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${i} || (original_idx >= 0 && original_idx < ${e.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${e.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${t.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,gh=(t,e)=>`
    fn checkInputIndices(input_indices: ${t.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var input_index = ${t.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${xe("uniforms.input_shape","i",e.length)}) {
          return false;
        }
      }
      return true;
    }`,io=(t,e,r,n)=>t.rank>n?`
    ${t.indicesSet("input_indices",e,"channel")};
    ${t.indicesSet("input_indices",r,"batch")};
`:"",_h=(t,e,r,n,a)=>{let[s,i,o,l]=r.length===2?[-1,0,1,-1]:[0,2,3,1],d=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",i,`max(0, min(row, ${r[i]} - 1))`)};
      ${t.indicesSet("input_indices",o,`max(0, min(col, ${r[o]} - 1))`)};
      ${io(t,l,s,2)}
      return ${t.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${e.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${i}];
      var col:${d} = originalIndices[${o}];
      ${n?`if (row < 0 || row > (${r[i]} - 1) || col < 0 || col > (${r[o]} - 1)) {
        return ${a};
      }`:""};
      row = max(0, min(row, ${r[i]} - 1));
      col = max(0, min(col, ${r[o]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},yh=(t,e,r,n,a,s,i,o,l,d)=>{let c=r.length===2,[f,g]=c?[0,1]:[2,3],y=t.type.value,p=v=>{let S=v===f?"row":"col";return`
      fn ${S}CubicInterpolation(input_indices: ${t.type.indices}, output_indices: ${e.type.indices}) -> ${y} {
        var output_index = ${e.indicesGet("output_indices",v)};
        var originalIdx: ${y} = getOriginalCoordinateFromResizedCoordinate(output_index, ${a[v]},
        ${n[v]}, ${r[v]}, ${s[v]}, ${s[v]} + ${r.length});
        var fractOriginalIdx: ${y} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${o} && (originalIdx < 0 || originalIdx > (${r[v]} - 1))) {
          return ${l};
        }
        var data: array<${y}, 4> = array<${y}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${S}: ${y} = originalIdx + ${y}(i);
          if (${S} < 0 || ${S} >= ${r[v]}) {
            ${d?`coefs[i + 1] = 0.0;
                        continue;`:o?`return ${l};`:`${S} = max(0, min(${S}, ${r[v]} - 1));`};
          }
        var input_indices_copy: ${t.type.indices} = input_indices;
          ${t.indicesSet("input_indices_copy",v,`u32(${S})`)};
          data[i + 1] = ${v===f?t.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${p(f)};
    ${p(g)};
  fn getCubicInterpolationCoefs(s: ${y}) -> array<${y}, 4> {
    var absS = abs(s);
    var coeffs: array<${y}, 4> = array<${y}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${y} = 1.0 - absS;
    var twoMinusAbsS: ${y} = 2.0 - absS;
    var onePlusAbsS: ${y} = 1.0 + absS;
    coeffs[0] = ((${i} * onePlusAbsS - 5 * ${i}) * onePlusAbsS + 8 * ${i}) * onePlusAbsS - 4 * ${i};
    coeffs[1] = ((${i} + 2) * absS - (${i} + 3)) * absS * absS + 1;
    coeffs[2] = ((${i} + 2) * oneMinusAbsS - (${i} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${i} * twoMinusAbsS - 5 * ${i}) * twoMinusAbsS + 8 * ${i}) * twoMinusAbsS - 4 * ${i};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${y}, 4>, coefs: array<${y}, 4>) -> ${y} {
    var coefsSum: ${y} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${e.type.indices}) -> ${y} {
    var input_indices: ${t.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},wh=(t,e,r,n,a)=>{let[s,i,o,l,d]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],c=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${c} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",i,`max(0, min(depth, ${r[i]} - 1))`)};
      ${t.indicesSet("input_indices",o,`max(0, min(height, ${r[o]} - 1))`)};
      ${t.indicesSet("input_indices",l,`max(0, min(width, ${r[l]} - 1))`)};
      ${io(t,d,s,3)}
      return ${t.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${e.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${c} = originalIndices[${i}];
      var height:${c} = originalIndices[${o}];
      var width:${c} = originalIndices[${l}];
      ${n?`if (depth < 0 || depth > (${r[i]} - 1) || height < 0 || height > (${r[o]} - 1) || width < 0 || (width > ${r[l]} - 1)) {
      return ${a};
        }`:""};

    depth = max(0, min(depth, ${r[i]} - 1));
      height = max(0, min(height, ${r[o]} - 1));
      width = max(0, min(width, ${r[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${c} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${c} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${c} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${c} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${c} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${c} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${c} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${c} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${c} = abs(depth - ${c}(depth1));
      var dx2: ${c} = abs(${c}(depth2) - depth);
      var dy1: ${c} = abs(height - ${c}(height1));
      var dy2: ${c} = abs(${c}(height2) - height);
      var dz1: ${c} = abs(width - ${c}(width1));
      var dz2: ${c} = abs(${c}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},bh=(t,e,r,n,a,s)=>{let i=t.dims,o=ch(s,e.axes,i.length),l=ph(i,n,a,e.axes),d=n.slice();n.length===0&&(d=i.map((k,O)=>k===0?1:l[O]/k),e.keepAspectRatioPolicy!=="stretch"&&(l=hh(i,d,e)));let c=me("output",t.dataType,l.length),f=Y("input",t.dataType,i.length),g=K.size(l),y=i.length===l.length&&i.every((k,O)=>k===l[O]),p=e.coordinateTransformMode==="tf_crop_and_resize",v=e.extrapolationValue,S=f.type.value,E=k=>`
      ${y?"":`
      ${lh(e.coordinateTransformMode,S)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${gh(f,i)};
              ${dh(e.nearestMode,r,S)};
              ${mh(f,c,i,l,d.length,o.length,p)};
              `;case"linear":return`
              ${fh(c,i,l,d.length,o.length)};
              ${(()=>{if(i.length===2||i.length===4)return`${_h(f,c,i,p,v)}`;if(i.length===3||i.length===5)return`${wh(f,c,i,p,v)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(i.length===2||i.length===4)return`${yh(f,c,i,l,d,o,e.cubicCoeffA,p,e.extrapolationValue,e.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${k.registerUniform("output_size","u32").registerUniform("scales","f32",d.length).registerUniform("roi","f32",o.length).declareVariables(f,c)}
      ${k.mainStart()}
        ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${y?"output[global_idx] = input[global_idx];":`
        let output_indices = ${c.offsetToIndices("global_idx")};
        var input_indices: ${f.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${f.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${i.length===2||i.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${r}|${d.length>0?d:""}|${a.length>0?a:""}|${o.length>0?o:""}|${y}|${i}`,inputDependencies:["rank"]},getShaderSource:E,getRunData:()=>({outputs:[{dims:l,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:[{type:12,data:g},{type:1,data:d},{type:1,data:o},..._e(i,l)]})}},vh=t=>{let e=t.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},$h=(t,e)=>{let r=[],n=[],a=[],s=vh(t);if(e.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");uh(t.inputs,e,s,r,n,a),t.compute(bh(t.inputs[0],e,s,r,n,a),{inputs:[0]})},xh=t=>{let e=t.antialias,r=t.axes,n=t.coordinateTransformMode,a=t.cubicCoeffA,s=t.excludeOutside!==0,i=t.extrapolationValue,o=t.keepAspectRatioPolicy,l=t.mode,d=t.nearestMode===""?"simple":t.nearestMode;return He({antialias:e,axes:r,coordinateTransformMode:n,cubicCoeffA:a,excludeOutside:s,extrapolationValue:i,keepAspectRatioPolicy:o,mode:l,nearestMode:d})}}),Sh,kh,Eh,__=X(()=>{$e(),Ie(),st(),Te(),Sh=(t,e)=>{let[r,n,a,s]=t,{numHeads:i,rotaryEmbeddingDim:o}=e;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!K.areEqual(n.dims,[])&&!K.areEqual(n.dims,[1])&&n.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${n.dims.length}`);if(a.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(s.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(!K.areEqual(a.dims,s.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(o>0&&i===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=r.dims[0],d=r.dims[r.dims.length-2],c=a.dims[0],f=K.sizeFromDimension(r.dims,1)/d,g=o===0?a.dims[1]*2:f/i;if(o>g)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(n.dims.length===2){if(l!==n.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${n.dims[0]}`);if(d!==n.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${n.dims[1]}`)}if(g/2!==a.dims[1]&&o/2!==a.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${a.dims[1]}`);if(d>c)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},kh=(t,e)=>{let{interleaved:r,numHeads:n,rotaryEmbeddingDim:a,scale:s}=e,i=t[0].dims[0],o=K.sizeFromDimension(t[0].dims,1),l=t[0].dims[t[0].dims.length-2],d=o/l,c=t[2].dims[1],f=a===0?c*2:d/n,g=new Array(i,l,d/f,f-c),y=K.computeStrides(g),p=[{type:1,data:s},{type:12,data:g},{type:12,data:y},...t[0].dims.length===3?new Array({type:12,data:[o,d,f,1]}):[],...t[0].dims.length===4?new Array({type:12,data:[o,f,l*f,1]}):[],..._e(t[0].dims,t[1].dims,t[2].dims,t[3].dims,t[0].dims)],v=S=>{let E=Y("input",t[0].dataType,t[0].dims.length),k=Y("position_ids",t[1].dataType,t[1].dims.length),O=Y("cos_cache",t[2].dataType,t[2].dims.length),I=Y("sin_cache",t[3].dataType,t[3].dims.length),T=me("output",t[0].dataType,t[0].dims.length);return S.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:g.length},{name:"global_strides",type:"u32",length:y.length},{name:"input_output_strides",type:"u32",length:y.length}]),`
        ${S.declareVariables(E,k,O,I,T)}

        ${S.mainStart(sn)}
          let half_rotary_emb_dim = uniforms.${O.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${S.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${k.broadcastedIndicesToOffset("bsnh.xy",me("",k.type.tensor,2))};
            let position_id =
                u32(${k.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});
            let j = i + select(half_rotary_emb_dim, 1, ${r});
            let re = ${E.getByOffset("i")} * ${O.get("position_id","bsnh[3]")} -
                ${E.getByOffset("j")} * ${I.get("position_id","bsnh[3]")};
            ${T.setByOffset("i","re")}
            let im = ${E.getByOffset("i")} * ${I.get("position_id","bsnh[3]")} +
                ${E.getByOffset("j")} * ${O.get("position_id","bsnh[3]")};
            ${T.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${T.setByOffset("k",E.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:He({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:v,getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(K.size(g)/sn)},programUniforms:p})}},Eh=(t,e)=>{Sh(t.inputs,e),t.compute(kh(t.inputs,e))}}),Ch,Th,Ih,y_=X(()=>{$e(),Ie(),Te(),Ch=t=>{if(!t||t.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=t[0],r=t[1],n=t[2];if(e.dataType!==r.dataType||e.dataType!==n.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let a=e.dims[e.dims.length-1],s=e.dims[e.dims.length-2];if(r.dims[r.dims.length-1]!==a)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(n.dims.length!==1)throw new Error("Gamma must be 1D");if(n.dims[n.dims.length-1]!==a)throw new Error("Gamma must have the same hidden size as input");if(t.length>3){let i=t[3];if(i.dims.length!==1)throw new Error("Beta must be 1D");if(i.dims[i.dims.length-1]!==a)throw new Error("Beta must have the same hidden size as input")}if(t.length>4){let i=t[4];if(i.dims.length!==1)throw new Error("Bias must be 1D");if(i.dims[i.dims.length-1]!==a)throw new Error("Bias must have the same hidden size as input")}},Th=(t,e,r,n)=>{let a=e.simplified,s=t[0].dims,i=K.size(s),o=s,l=i,d=s.slice(-1)[0],c=n?s.slice(0,-1).concat(1):[],f=!a&&t.length>3,g=t.length>4,y=n&&r>1,p=n&&r>2,v=r>3,S=64,E=et(d),k=[{type:12,data:l},{type:12,data:E},{type:12,data:d},{type:1,data:e.epsilon}],O=T=>{let F=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],B=[Y("x",t[0].dataType,t[0].dims,E),Y("skip",t[1].dataType,t[1].dims,E),Y("gamma",t[2].dataType,t[2].dims,E)];f&&B.push(Y("beta",t[3].dataType,t[3].dims,E)),g&&B.push(Y("bias",t[4].dataType,t[4].dims,E)),B.push(me("output",t[0].dataType,o,E)),y&&B.push(me("mean_output",1,c)),p&&B.push(me("inv_std_output",1,c)),v&&B.push(me("input_skip_bias_sum",t[0].dataType,o,E));let G=ot(t[0].dataType),H=ot(1,E);return`

      ${T.registerUniforms(F).declareVariables(...B)}
      var<workgroup> sum_shared : array<${H}, ${S}>;
      var<workgroup> sum_squared_shared : array<${H}, ${S}>;

      ${T.mainStart([S,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${S};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${S};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${S-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${g?"bias[offset1d + i]":G+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${v?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${on(G,E,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${S};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${$r("sum",E)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${$r("square_sum",E)} / f32(uniforms.hidden_size) ${a?"":"- mean * mean"} + uniforms.epsilon);
        ${y?"mean_output[global_idx] = mean;":""}
        ${p?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${a?"":`- ${G}(mean)`}) *
            ${G}(inv_std_dev) * gamma[offset1d + i]
            ${f?"+ beta[offset1d + i]":""};
        }
      }`},I=[{dims:o,dataType:t[0].dataType}];return r>1&&I.push({dims:c,dataType:1}),r>2&&I.push({dims:c,dataType:1}),r>3&&I.push({dims:s,dataType:t[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${E};${y};${p};${v}`,inputDependencies:t.map((T,F)=>"type")},getShaderSource:O,getRunData:()=>({outputs:I,dispatchGroup:{x:Math.ceil(l/d)},programUniforms:k})}},Ih=(t,e)=>{Ch(t.inputs);let r=[0];t.outputCount>1&&r.push(-3),t.outputCount>2&&r.push(-3),t.outputCount>3&&r.push(3),t.compute(Th(t.inputs,e,t.outputCount,!1),{outputs:r})}}),Ah,Ln,Oh,so,Mh,zh,Rh,Ph,w_=X(()=>{$e(),Ie(),st(),Te(),Ah=(t,e)=>{if(!t||t.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");t.slice(1).forEach((r,n)=>{if(t[n+1].dataType!==6&&t[n+1].dataType!==7)throw new Error(`Input ${n} must be an array of int32 or int64`)})},Ln=(t,e)=>{let r=[];if(t.length>e)if(t[e].dataType===7)t[e].getBigInt64Array().forEach(n=>r.push(Number(n)));else if(t[e].dataType===6)t[e].getInt32Array().forEach(n=>r.push(Number(n)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return r},Oh=(t,e)=>{if(t.length>1){let r=Ln(t,1),n=Ln(t,2),a=Ln(t,3);return a.length===0&&(a=[...Array(t[0].dims.length).keys()]),He({starts:r,ends:n,axes:a})}else return e},so=(t,e,r,n,a)=>{let s=t;return t<0&&(s+=r[n[e]]),a[e]<0?Math.max(0,Math.min(s,r[n[e]]-1)):Math.max(0,Math.min(s,r[n[e]]))},Mh=(t,e,r)=>`fn calculateInputIndices(output_indices: ${e.type.indices}) -> ${t.type.indices} {
          var input_indices: ${t.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${xe("uniforms.input_shape","i",r.length)};
            let steps_i = ${xe("uniforms.steps","i",r.length)};
            let signs_i = ${xe("uniforms.signs","i",r.length)};
            let starts_i = ${xe("uniforms.starts","i",r.length)};
            var output_index = ${e.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${t.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,zh=(t,e)=>{let r=t[0].dims,n=K.size(r),a=e.axes.length>0?K.normalizeAxes(e.axes,r.length):[...Array(r.length).keys()],s=Ln(t,4);s.forEach(E=>E!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(a.length).fill(1));let i=e.starts.map((E,k)=>so(E,k,r,a,s)),o=e.ends.map((E,k)=>so(E,k,r,a,s));if(a.length!==i.length||a.length!==o.length)throw new Error("start, ends and axes should have the same number of elements");if(a.length!==r.length)for(let E=0;E<r.length;++E)a.includes(E)||(i.splice(E,0,0),o.splice(E,0,r[E]),s.splice(E,0,1));let l=s.map(E=>Math.sign(E));s.forEach((E,k,O)=>{if(E<0){let I=(o[k]-i[k])/E,T=i[k],F=T+I*s[k];i[k]=F,o[k]=T,O[k]=-E}});let d=r.slice(0);a.forEach((E,k)=>{d[E]=Math.ceil((o[E]-i[E])/s[E])});let c={dims:d,dataType:t[0].dataType},f=me("output",t[0].dataType,d.length),g=Y("input",t[0].dataType,t[0].dims.length),y=K.size(d),p=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:i.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:s.length}],v=[{type:12,data:y},{type:12,data:i},{type:6,data:l},{type:12,data:s},..._e(t[0].dims,d)],S=E=>`
      ${E.registerUniforms(p).declareVariables(g,f)}
        ${Mh(g,f,r)}
        ${E.mainStart()}
          ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${f.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${f.setByOffset("global_idx",g.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${i.length}_${s.length}`,inputDependencies:["rank"]},getShaderSource:S,getRunData:()=>({outputs:[c],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:v})}},Rh=(t,e)=>{Ah(t.inputs,e);let r=Oh(t.inputs,e);t.compute(zh(t.inputs,r),{inputs:[0]})},Ph=t=>{let e=t.starts,r=t.ends,n=t.axes;return He({starts:e,ends:r,axes:n})}}),Bh,Dh,Nh,Fh,b_=X(()=>{$e(),Ie(),st(),Te(),Bh=t=>{if(!t||t.length!==1)throw new Error("Softmax op requires 1 input.")},Dh=(t,e)=>{let r=t.dims,n=K.size(r),a=64,s=e.axis;if(s<0&&(s=r.length+s),s<r.length-1)throw new Error("softmax only supports last axis for now.");let i=r[s],o=n/i,l=et(i),d=i/l,c=(S,E)=>E===4?`max(max(${S}.x, ${S}.y), max(${S}.z, ${S}.w))`:E===2?`max(${S}.x, ${S}.y)`:E===3?`max(max(${S}.x, ${S}.y), ${S}.z)`:S,f=Y("x",t.dataType,t.dims,l),g=me("result",t.dataType,t.dims,l),y=f.type.value,p=ot(t.dataType)==="f32"?`var threadMax = ${y}(-3.402823e+38f);`:`var threadMax = ${y}(-65504.0h);`,v=S=>`
      var<workgroup> rowMaxShared : ${y};
      var<workgroup> rowSumShared : ${y};
      var<workgroup> threadShared : array<${y}, ${a}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${y} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${y}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${S.registerUniform("packedCols","i32").declareVariables(f,g)}
      ${S.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${a};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${p}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${y}(${c("threadShared[0]",l)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${y}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${y}(${$r("threadShared[0]",l)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${l}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:t.dataType}],dispatchGroup:{x:o},programUniforms:[{type:6,data:d}]}),getShaderSource:v}},Nh=(t,e)=>{Bh(t.inputs),t.compute(Dh(t.inputs[0],e))},Fh=t=>He({axis:t.axis})}),Lh,Uh,Wh,Vh,Gh,Hh,qh,v_=X(()=>{$e(),Ie(),st(),Te(),Lh=t=>{if(!t||t.length<1)throw new Error("too few inputs")},Uh=(t,e)=>{let r=[],n=e.numOutputs;return t[1].dims[0]>0&&(t[1].getBigInt64Array().forEach(a=>r.push(Number(a))),n=r.length),He({numOutputs:n,axis:e.axis,splitSizes:r})},Wh=t=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {
    if (index < ${xe("uniforms.size_in_split_axis","i",t)}) {
        return i;
    }
    }
    return ${t}u;
}`,Vh=t=>{let e=t.length,r=[];for(let n=0;n<e;++n){let a=t[n].setByIndices("indices","input[global_idx]");e===1?r.push(a):n===0?r.push(`if (output_number == ${n}u) { ${a} }`):n===e-1?r.push(`else { ${a} }`):r.push(`else if (output_number == ${n}) { ${a} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${t[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},Gh=(t,e)=>{let r=t[0].dims,n=K.size(r),a=t[0].dataType,s=K.normalizeAxis(e.axis,r.length),i=new Array(e.numOutputs),o=Y("input",a,r.length),l=new Array(e.numOutputs),d=[],c=[],f=0,g=[{type:12,data:n}];for(let p=0;p<e.numOutputs;p++){f+=e.splitSizes[p],l[p]=f;let v=r.slice();v[e.axis]=e.splitSizes[p],c.push(v),i[p]=me(`output${p}`,a,v.length),d.push({dims:c[p],dataType:t[0].dataType})}g.push({type:12,data:l},..._e(r,...c));let y=p=>`
  ${p.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(o,...i)}
  ${Wh(l.length)}
  ${Vh(i)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${o.offsetToIndices("global_idx")};
    var index = ${o.indicesGet("indices",s)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${xe("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${o.indicesSet("indices",s,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey,inputDependencies:["rank"]},getShaderSource:y,getRunData:()=>({outputs:d,dispatchGroup:{x:Math.ceil(n/64)},programUniforms:g})}},Hh=(t,e)=>{Lh(t.inputs);let r=t.inputs.length===1?e:Uh(t.inputs,e);t.compute(Gh(t.inputs,r),{inputs:[0]})},qh=t=>{let e=t.axis,r=t.splitSizes,n=t.numOutputs<0?r.length:t.numOutputs;if(n!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return He({axis:e,numOutputs:n,splitSizes:r})}}),oo,jh,Kh,Yh,Qh,$_=X(()=>{$e(),Ie(),Te(),oo=t=>Array.from(t.getBigInt64Array(),Number),jh=t=>{if(!t||t.length!==2)throw new Error("Tile requires 2 inputs.");if(t[0].dataType!==1&&t[0].dataType!==6&&t[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(t[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(t[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(oo(t[1]).length!==t[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Kh=(t,e)=>{let r=[];for(let n=0;n<t.length;++n)r.push(t[n]*e[n]);return r},Yh=t=>{let e=t[0].dims,r=oo(t[1]),n=Kh(e,r),a=K.size(n),s=t[0].dataType,i=Y("input",s,e.length),o=me("output",s,n.length),l=d=>`
      const inputShape = ${i.indices(...e)};
      ${d.registerUniform("output_size","u32").declareVariables(i,o)}
      ${d.mainStart()}
      ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${o.offsetToIndices("global_idx")};
      var input_indices: ${i.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let input_dim_i = ${i.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${o.indicesGet("output_indices","i")}  % input_dim_i;

        ${i.indicesSet("input_indices","i","input_dim_value")}
      }
      ${o.setByOffset("global_idx",i.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},..._e(t[0].dims,n)]}),getShaderSource:l}},Qh=t=>{jh(t.inputs),t.compute(Yh(t.inputs),{inputs:[0]})}}),Xh,Jh,Zh,x_=X(()=>{$e(),Ie(),Te(),Xh=(t,e,r,n,a)=>{let s=me("output_data",a,r.length,4),i=Y("a_data",e[1].dataType,e[1].dims.length,4),o=Y("b_data",e[2].dataType,e[2].dims.length,4),l=Y("c_data",e[0].dataType,e[0].dims.length,4),d,c=(f,g,y)=>`select(${g}, ${f}, ${y})`;if(!n)d=s.setByOffset("global_idx",c(i.getByOffset("global_idx"),o.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let f=(g,y,p="")=>{let v=`a_data[index_a${y}][component_a${y}]`,S=`b_data[index_b${y}][component_b${y}]`,E=`bool(c_data[index_c${y}] & (0xffu << (component_c${y} * 8)))`;return`
            let output_indices${y} = ${s.offsetToIndices(`global_idx * 4u + ${y}u`)};
            let offset_a${y} = ${i.broadcastedIndicesToOffset(`output_indices${y}`,s)};
            let offset_b${y} = ${o.broadcastedIndicesToOffset(`output_indices${y}`,s)};
            let offset_c${y} = ${l.broadcastedIndicesToOffset(`output_indices${y}`,s)};
            let index_a${y} = offset_a${y} / 4u;
            let index_b${y} = offset_b${y} / 4u;
            let index_c${y} = offset_c${y} / 4u;
            let component_a${y} = offset_a${y} % 4u;
            let component_b${y} = offset_b${y} % 4u;
            let component_c${y} = offset_c${y} % 4u;
            ${g}[${y}] = ${p}(${c(v,S,E)});
          `};a===9?d=`
            var data = vec4<u32>(0);
            ${f("data",0,"u32")}
            ${f("data",1,"u32")}
            ${f("data",2,"u32")}
            ${f("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:d=`
            ${f("output_data[global_idx]",0)}
            ${f("output_data[global_idx]",1)}
            ${f("output_data[global_idx]",2)}
            ${f("output_data[global_idx]",3)}
          `}return`
        ${t.registerUniform("vec_size","u32").declareVariables(l,i,o,s)}
        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${d}
      }`},Jh=t=>{let e=t[1].dims,r=t[2].dims,n=t[0].dims,a=t[1].dataType,s=!(K.areEqual(e,r)&&K.areEqual(r,n)),i=e,o=K.size(e);if(s){let d=an.calcShape(an.calcShape(e,r,!1),n,!1);if(!d)throw new Error("Can't perform where op on the given tensors");i=d,o=K.size(i)}let l=Math.ceil(o/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:d=>Xh(d,t,i,s,a),getRunData:()=>({outputs:[{dims:i,dataType:a}],dispatchGroup:{x:Math.ceil(o/64/4)},programUniforms:[{type:12,data:l},..._e(n,e,r,i)]})}},Zh=t=>{t.compute(Jh(t.inputs))}}),ef,S_=X(()=>{H0(),pd(),q0(),j0(),K0(),Y0(),id(),Oc(),e_(),t_(),r_(),n_(),a_(),i_(),s_(),o_(),u_(),l_(),d_(),Cc(),c_(),p_(),h_(),f_(),m_(),Cs(),g_(),__(),y_(),w_(),b_(),v_(),$_(),Dn(),zs(),x_(),ef=new Map([["Abs",[vd]],["Acos",[$d]],["Acosh",[xd]],["Add",[oc]],["ArgMax",[Zl,Is]],["ArgMin",[Jl,Is]],["Asin",[Sd]],["Asinh",[kd]],["Atan",[Ed]],["Atanh",[Cd]],["Attention",[cd]],["AveragePool",[Qp,Yp]],["BatchNormalization",[gd]],["BiasAdd",[wd]],["BiasSplitGelu",[ac]],["Cast",[Id,Td]],["Ceil",[Md]],["Clip",[Od]],["Concat",[nd,ad]],["Conv",[Gs,Vs]],["ConvTranspose",[Vc,Nc]],["Cos",[zd]],["Cosh",[Rd]],["CumSum",[Hc,qc]],["DepthToSpace",[Qc,Xc]],["Div",[uc]],["Einsum",[np,ap]],["Elu",[Pd,Ka]],["Equal",[lc]],["Erf",[Bd]],["Exp",[Dd]],["Expand",[up]],["FastGelu",[dp]],["Floor",[Nd]],["FusedConv",[Gs,Vs]],["Gather",[fp,hp]],["GatherElements",[yp,_p]],["Gelu",[Fd]],["Gemm",[$p,vp]],["GlobalAveragePool",[Jp,Xp]],["GlobalMaxPool",[rh,th]],["Greater",[hc]],["GreaterOrEqual",[mc]],["HardSigmoid",[jd,qd]],["InstanceNormalization",[Ep]],["LayerNormalization",[Ip]],["LeakyRelu",[Ld,Ka]],["Less",[fc]],["LessOrEqual",[gc]],["Log",[tc]],["MatMul",[Ec]],["MatMulNBits",[Mp,zp]],["MaxPool",[Zp,eh]],["Mul",[dc]],["MultiHeadAttention",[Dp,Pp]],["Neg",[Wd]],["Not",[Ud]],["Pad",[qp]],["Pow",[cc]],["Range",[ih]],["Reciprocal",[Vd]],["ReduceMin",[jl]],["ReduceMean",[Wl]],["ReduceMax",[ql]],["ReduceSum",[Yl]],["ReduceProd",[Kl]],["ReduceL1",[Vl]],["ReduceL2",[Gl]],["ReduceLogSum",[Xl]],["ReduceLogSumExp",[Hl]],["ReduceSumSquare",[Ql]],["Relu",[Gd]],["Resize",[$h,xh]],["RotaryEmbedding",[Eh]],["Sigmoid",[Hd]],["Sin",[Kd]],["Sinh",[Yd]],["Slice",[Rh,Ph]],["SkipLayerNormalization",[Ih]],["Split",[Hh,qh]],["Sqrt",[Qd]],["Softmax",[Nh,Fh]],["Sub",[pc]],["Tan",[Xd]],["Tanh",[Jd]],["ThresholdedRelu",[ec,Ka]],["Tile",[Qh]],["Transpose",[ll,dl]],["Where",[Zh]]])}),tf,k_=X(()=>{Vt(),Dr(),Te(),tf=class{constructor(t){this.backend=t,this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,e){this.repo.set(t,e)}run(t,e,r,n,a){Wt(t.programInfo.name);let s=this.backend.device,i=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let o=[];for(let d of e)o.push({binding:o.length,resource:{buffer:d.buffer}});for(let d of r)o.push({binding:o.length,resource:{buffer:d.buffer}});a&&o.push({binding:o.length,resource:a});let l=s.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:o,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:l,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}i.setPipeline(t.computePipeline),i.setBindGroup(0,l),i.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Dt(t.programInfo.name)}dispose(){}build(t,e){Wt(t.name);let r=this.backend.device,n=[];r.features.has("shader-f16")&&n.push("enable f16;");let a=il(e,this.backend.device.limits),s=t.getShaderSource(a),i=`${n.join(`
`)}
${a.additionalImplementations}
${s}`,o=r.createShaderModule({code:i,label:t.name});Xe("verbose",()=>`[WebGPU] ${t.name} shader code: ${i}`);let l=r.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto",label:t.name});return Dt(t.name),{programInfo:t,computePipeline:l,uniformVariablesInfo:a.variablesInfo}}normalizeDispatchGroupSize(t){let e=typeof t=="number"?t:t.x,r=typeof t=="number"?1:t.y||1,n=typeof t=="number"?1:t.z||1,a=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(e<=a&&r<=a&&n<=a)return[e,r,n];let s=e*r*n,i=Math.ceil(Math.sqrt(s));if(i>a){if(i=Math.ceil(Math.cbrt(s)),i>a)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[i,i,i]}else return[i,i,1]}}}),rf,nf,af,sf,E_=X(()=>{Vt(),$e(),Dr(),W0(),V0(),S_(),k_(),rf=(t,e)=>{if(e.length!==t.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${t.length}.`);let r=[];for(let n=0;n<t.length;++n){let a=t[n].dataType;switch(e[n]){case"none":{r.push("");break}case"type":{r.push(`${a}`);break}case"rank":{let s=t[n].dims.length;r.push(`${a};${s}`);break}case"dims":{let s=t[n].dims.join(",");r.push(`${a};${s}`);break}default:throw new Error(`unsupported input dependency: ${e[n]}`)}}return r.join("|")},nf=(t,e,r)=>{var a,s;let n=t.name;return(a=t.shaderCache)!=null&&a.hint&&(n+="["+t.shaderCache.hint+"]"),n+=":"+r+`:${rf(e,((s=t.shaderCache)==null?void 0:s.inputDependencies)??new Array(e.length).fill("dims"))}`,n},af=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},sf=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,e){this.env=t;let r=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:e.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:e.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:e.limits.maxStorageBufferBindingSize,maxBufferSize:e.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:e.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:e.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:e.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:e.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r};e.features.has("chromium-experimental-timestamp-query-inside-passes")?r.push("chromium-experimental-timestamp-query-inside-passes"):e.features.has("timestamp-query")&&r.push("timestamp-query"),e.features.has("shader-f16")&&r.push("shader-f16"),this.device=await e.requestDevice(n),this.adapterInfo=new af(await e.requestAdapterInfo()),this.gpuDataManager=el(this),this.programManager=new tf(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Ku(t.logLevel,!!t.debug),this.device.onuncapturederror=a=>{a.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${a.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:e,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),e={};this.queryType==="at-passes"&&(e.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(e)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Wt(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{var n;let e=new BigUint64Array(t.getMappedRange()),r=this.pendingQueries.get(t);for(let a=0;a<e.length/2;a++){let s=r[a],i=s.kernelId,o=this.kernels.get(i),l=o.kernelType,d=o.kernelName,c=s.programName,f=s.inputTensorViews,g=s.outputTensorViews,y=e[a*2],p=e[a*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=y);let v=Number(y-this.queryTimeBase),S=Number(p-this.queryTimeBase);if(!Number.isSafeInteger(v)||!Number.isSafeInteger(S))throw new RangeError("incorrect timestamp range");if((n=this.env.webgpu.profiling)!=null&&n.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:f.map(E=>({dims:E.dims,dataType:Br(E.dataType)})),outputsMetadata:g.map(E=>({dims:E.dims,dataType:Br(E.dataType)})),kernelId:i,kernelType:l,kernelName:d,programName:c,startTime:v,endTime:S});else{let E="";f.forEach((O,I)=>{E+=`input[${I}]: [${O.dims}] | ${Br(O.dataType)}, `});let k="";g.forEach((O,I)=>{k+=`output[${I}]: [${O.dims}] | ${Br(O.dataType)}, `}),console.log(`[profiling] kernel "${i}|${l}|${d}|${c}" ${E}${k}execution time: ${S-v} ns`)}Mn("GPU",`${c}::${y}::${p}`)}t.unmap(),this.pendingQueries.delete(t)}),Dt()}run(t,e,r,n,a,s){Wt(t.name);let i=[];for(let k=0;k<e.length;++k){let O=e[k].data;if(O===0)continue;let I=this.gpuDataManager.get(O);if(!I)throw new Error(`no GPU data for input: ${O}`);i.push(I)}let{outputs:o,dispatchGroup:l,programUniforms:d}=t.getRunData(e),c=r.length===0?o.map((k,O)=>O):r;if(c.length!==o.length)throw new Error(`Output size ${c.length} must be equal to ${o.length}.`);let f=[],g=[];for(let k=0;k<o.length;++k){if(!Number.isInteger(c[k])||c[k]<-3||c[k]>=s)throw new Error(`Invalid output index: ${c[k]}`);if(c[k]===-3)continue;let O=c[k]===-1,I=c[k]===-2,T=O||I?a(o[k].dataType,o[k].dims):n(c[k],o[k].dataType,o[k].dims);if(f.push(T),T.data===0)continue;let F=this.gpuDataManager.get(T.data);if(!F)throw new Error(`no GPU data for output: ${T.data}`);if(O&&this.temporaryData.push(F),I){let B=this.kernelPersistentData.get(this.currentKernelId);B||(B=[],this.kernelPersistentData.set(this.currentKernelId,B)),B.push(F)}g.push(F)}if(i.length!==e.length||g.length!==f.length){if(g.length===0)return Dt(t.name),f;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let y;if(d){let k=0,O=[];d.forEach(B=>{let G=typeof B.data=="number"?[B.data]:B.data;if(G.length===0)return;let H=B.type===10?2:4,Z,pe;B.type===10?(pe=G.length>4?16:G.length>2?8:G.length*H,Z=G.length>4?16:H*G.length):(pe=G.length<=2?G.length*H:16,Z=16),k=Math.ceil(k/pe)*pe,O.push(k);let oe=B.type===10?8:4;k+=G.length>4?Math.ceil(G.length/oe)*Z:G.length*H});let I=16;k=Math.ceil(k/I)*I;let T=new ArrayBuffer(k);d.forEach((B,G)=>{let H=O[G],Z=typeof B.data=="number"?[B.data]:B.data;if(B.type===6)new Int32Array(T,H,Z.length).set(Z);else if(B.type===12)new Uint32Array(T,H,Z.length).set(Z);else if(B.type===10)new Uint16Array(T,H,Z.length).set(Z);else if(B.type===1)new Float32Array(T,H,Z.length).set(Z);else throw new Error(`Unsupported uniform type: ${Br(B.type)}`)});let F=this.gpuDataManager.create(k,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(F.buffer,0,T,0,k),this.gpuDataManager.release(F.id),y={offset:0,size:k,buffer:F.buffer}}let p=this.programManager.normalizeDispatchGroupSize(l),v=p[1]===1&&p[2]===1,S=nf(t,e,v),E=this.programManager.getArtifact(S);if(E||(E=this.programManager.build(t,p),this.programManager.setArtifact(S,E),Xe("info",()=>`[artifact] key: ${S}, programName: ${t.name}`)),d&&E.uniformVariablesInfo){if(d.length!==E.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${E.uniformVariablesInfo.length}, got ${d.length} in program "${E.programInfo.name}".`);for(let k=0;k<d.length;k++){let O=d[k],I=O.type,T=typeof O.data=="number"?1:O.data.length,[F,B]=E.uniformVariablesInfo[k];if(I!==F||T!==B)throw new Error(`Uniform variable ${k} mismatch: expect type ${F} with size ${B}, got type ${I} with size ${T} in program "${E.programInfo.name}".`)}}if(Xe("info",()=>`[ProgramManager] run "${t.name}" (key=${S}) with ${p[0]}x${p[1]}x${p[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let k={kernelId:this.currentKernelId,programName:E.programInfo.name,inputTensorViews:e,outputTensorViews:f};this.pendingKernels.push(k),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(k)}return this.programManager.run(E,i,g,p,y),Dt(t.name),f}upload(t,e){this.gpuDataManager.upload(t,e)}memcpy(t,e){this.gpuDataManager.memcpy(t,e)}async download(t,e){await this.gpuDataManager.download(t,e)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,e,r,n){let a=ef.get(t);if(!a)throw new Error(`kernel not implemented: ${t}`);let s={kernelType:t,kernelName:n,kernelEntry:a[0],attributes:[a[1],r]};this.kernels.set(e,s)}releaseKernel(t){let e=this.kernelPersistentData.get(t);if(e){for(let r of e)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,e,r){let n=this.kernels.get(t);if(!n)throw new Error(`kernel not created: ${t}`);let a=n.kernelType,s=n.kernelName,i=n.kernelEntry,o=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${a}] ${s}" is not allowed to be called recursively`);this.currentKernelId=t,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),Xe("info",()=>`[WebGPU] Start to run kernel "[${a}] ${s}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),i(e,o[1]),0}catch(d){return r.push(Promise.resolve(`[WebGPU] Kernel "[${a}] ${s}" failed. ${d}`)),1}finally{l&&r.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${a}] ${s}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,e,r,n){let a=this.sessionExternalDataMapping.get(t);a||(a=new Map,this.sessionExternalDataMapping.set(t,a));let s=a.get(e),i=this.gpuDataManager.registerExternalBuffer(r,n,s==null?void 0:s[1]);return a.set(e,[i,r]),i}unregisterBuffers(t){let e=this.sessionExternalDataMapping.get(t);e&&(e.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let e=this.gpuDataManager.get(t);if(!e)throw new Error(`no GPU data for buffer: ${t}`);return e.buffer}createDownloader(t,e,r){return async()=>{let n=await vs(this,t,e);return Qu(n.buffer,r)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){var t;this.queryType="none",(((t=this.env.webgpu.profiling)==null?void 0:t.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Xe("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Xe("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Xe("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),e=this.capturedPendingKernels.get(this.currentSessionId),r=t.length;this.pendingKernels=[];for(let n=0;n<r;n++){let a=this.getComputePassEncoder(),s=t[n];this.writeTimestamp(this.pendingDispatchNumber*2),a.setPipeline(s.computePipeline),a.setBindGroup(0,s.bindGroup),a.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(e[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}}),of={};nn(of,{init:()=>lf});var ni,uf,lf,C_=X(()=>{$e(),E_(),Dr(),Ie(),ni=class e0{constructor(e,r,n,a){this.module=e,this.dataType=r,this.data=n,this.dims=a}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=K.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=K.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=K.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(K.size(e)!==K.size(this.dims))throw new Error("Invalid new shape");return new e0(this.module,this.dataType,this.data,e)}},uf=class{constructor(t,e,r){this.module=t,this.backend=e,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=e.adapterInfo;let n=t.HEAPU32,a=r>>>2;this.opKernelContext=n[a++];let s=n[a++];this.outputCount=n[a++],this.customDataOffset=n[a++],this.customDataSize=n[a++];let i=[];for(let o=0;o<s;o++){let l=n[a++],d=n[a++],c=n[a++],f=[];for(let g=0;g<c;g++)f.push(n[a++]);i.push(new ni(t,l,d,f))}this.inputs=i}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(t,e){var i;let r=((i=e==null?void 0:e.inputs)==null?void 0:i.map(o=>typeof o=="number"?this.inputs[o]:o))??this.inputs,n=(e==null?void 0:e.outputs)??[],a=(o,l,d)=>new ni(this.module,l,this.output(o,d),d),s=(o,l)=>{let d=Pn(o);if(!d)throw new Error(`Unsupported data type: ${o}`);let c=d*K.size(l),f=c>0?this.backend.gpuDataManager.create(c).id:0;return new ni(this.module,o,f,l)};return this.backend.run(t,r,n,a,s,this.outputCount)}output(t,e){let r=this.module.stackSave();try{let n=this.module.stackAlloc((1+e.length)*4),a=n>>2;this.module.HEAPU32[a++]=e.length;for(let s=0;s<e.length;s++)this.module.HEAPU32[a++]=e[s];return this.module._JsepOutput(this.opKernelContext,t,n)}catch(n){throw new Error(`Failed to generate kernel's output[${t}] with dims [${e}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(r)}}},lf=async(t,e,r,n)=>{let a=e.jsepInit;if(!a)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(t==="webgpu"){let s=new sf;await s.initialize(r,n),a("webgpu",[s,i=>s.alloc(i),i=>s.free(i),(i,o,l,d=!1)=>{if(d)Xe("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${i}, dst=${o}, size=${l}`),s.memcpy(i,o);else{Xe("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${i}, gpuDataId=${o}, size=${l}`);let c=e.HEAPU8.subarray(i>>>0,(i>>>0)+l);s.upload(o,c)}},async(i,o,l)=>{Xe("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${i}, dataOffset=${o}, size=${l}`),await s.download(i,()=>e.HEAPU8.subarray(o>>>0,(o>>>0)+l))},(i,o,l)=>s.createKernel(i,o,l,e.UTF8ToString(e._JsepGetNodeName(o))),i=>s.releaseKernel(i),(i,o,l,d)=>{Xe("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${l}, kernel=${i}, contextDataOffset=${o}`);let c=new uf(e,s,o);return s.computeKernel(i,c,d)},()=>s.captureBegin(),()=>s.captureEnd(),()=>s.replay()])}else a("webnn")}}),df,cf,pf,xr,hf,uo,ff,mf,lo,gf,_f,yf,T_=X(()=>{L0(),U0(),$e(),Rn(),hs(),Vu(),df=(t,e)=>{Ze()._OrtInit(t,e)!==0&&Ge("Can't initialize onnxruntime.")},cf=async t=>{df(t.wasm.numThreads,Na(t.logLevel))},pf=async(t,e)=>{{let r=(C_(),zr(of)).init;if(e==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=t.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let a=t.webgpu.powerPreference;if(a!==void 0&&a!=="low-power"&&a!=="high-performance")throw new Error(`Invalid powerPreference setting: "${a}"`);let s=t.webgpu.forceFallbackAdapter;if(s!==void 0&&typeof s!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${s}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:a,forceFallbackAdapter:s}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}if(!t.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",Ze(),t,n)}if(e==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Ze(),t)}}},xr=new Map,hf=t=>{let e=Ze(),r=e.stackSave();try{let n=e.stackAlloc(8);return e._OrtGetInputOutputCount(t,n,n+4)!==0&&Ge("Can't get session input/output count."),[e.HEAP32[n/4],e.HEAP32[n/4+1]]}finally{e.stackRestore(r)}},uo=t=>{let e=Ze(),r=e._malloc(t.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${t.byteLength}.`);return e.HEAPU8.set(t,r),[r,t.byteLength]},ff=async(t,e)=>{var f,g;let r,n,a=Ze();Array.isArray(t)?[r,n]=t:t.buffer===a.HEAPU8.buffer?[r,n]=[t.byteOffset,t.byteLength]:[r,n]=uo(t);let s=0,i=0,o=0,l=[],d=[],c=[];try{if([i,l]=Wu(e),(e==null?void 0:e.externalData)&&a.mountExternalData){let I=[];for(let T of e.externalData){let F=typeof T=="string"?T:T.path;I.push(Fa(typeof T=="string"?T:T.data).then(B=>{a.mountExternalData(F,B)}))}await Promise.all(I)}s=await a._OrtCreateSession(r,n,i),s===0&&Ge("Can't create a session.");let[y,p]=hf(s),v=!!(e!=null&&e.enableGraphCapture),S=[],E=[],k=[];for(let I=0;I<y;I++){let T=a._OrtGetInputName(s,I);T===0&&Ge("Can't get an input name."),d.push(T),S.push(a.UTF8ToString(T))}for(let I=0;I<p;I++){let T=a._OrtGetOutputName(s,I);T===0&&Ge("Can't get an output name."),c.push(T);let F=a.UTF8ToString(T);E.push(F);{if(v&&(e==null?void 0:e.preferredOutputLocation)===void 0){k.push("gpu-buffer");continue}let B=typeof(e==null?void 0:e.preferredOutputLocation)=="string"?e.preferredOutputLocation:((f=e==null?void 0:e.preferredOutputLocation)==null?void 0:f[F])??"cpu";if(B!=="cpu"&&B!=="cpu-pinned"&&B!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${B}.`);if(v&&B!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${B}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);k.push(B)}}let O=null;return k.some(I=>I==="gpu-buffer")&&(o=a._OrtCreateBinding(s),o===0&&Ge("Can't create IO binding."),O={handle:o,outputPreferredLocations:k,outputPreferredLocationsEncoded:k.map(I=>_s(I))}),xr.set(s,[s,d,c,O,v,!1]),[s,S,E]}catch(y){throw d.forEach(p=>a._OrtFree(p)),c.forEach(p=>a._OrtFree(p)),o!==0&&a._OrtReleaseBinding(o),s!==0&&a._OrtReleaseSession(s),y}finally{a._free(r),i!==0&&a._OrtReleaseSessionOptions(i),l.forEach(y=>a._free(y)),(g=a.unmountExternalData)==null||g.call(a)}},mf=t=>{var l;let e=Ze(),r=xr.get(t);if(!r)throw new Error(`cannot release session. invalid session id: ${t}`);let[n,a,s,i,o]=r;i&&(o&&e._OrtClearBoundOutputs(i.handle),e._OrtReleaseBinding(i.handle)),(l=e.jsepOnReleaseSession)==null||l.call(e,t),a.forEach(d=>e._OrtFree(d)),s.forEach(d=>e._OrtFree(d)),e._OrtReleaseSession(n),xr.delete(t)},lo=(t,e,r,n,a,s=!1)=>{if(!t){e.push(0);return}let i=Ze(),o=t[0],l=t[1],d=t[3],c,f;if(o==="string"&&d==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(s&&d!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${a} when enableGraphCapture is true.`);if(d==="gpu-buffer"){let p=t[2].gpuBuffer,v=Pn(fs(o));f=l.reduce((E,k)=>E*k,1)*v;let S=i.jsepRegisterBuffer;if(!S)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');c=S(n,a,p,f)}else{let p=t[2];if(Array.isArray(p)){f=4*p.length,c=i._malloc(f),r.push(c);let v=c/4;for(let S=0;S<p.length;S++){if(typeof p[S]!="string")throw new TypeError(`tensor data at index ${S} is not a string`);i.HEAPU32[v++]=Qe(p[S],r)}}else f=p.byteLength,c=i._malloc(f),r.push(c),i.HEAPU8.set(new Uint8Array(p.buffer,p.byteOffset,f),c)}let g=i.stackSave(),y=i.stackAlloc(4*l.length);try{let p=y/4;l.forEach(S=>i.HEAP32[p++]=S);let v=i._OrtCreateTensor(fs(o),c,f,y,l.length,_s(d));v===0&&Ge(`Can't create tensor for input/output. session=${n}, index=${a}.`),e.push(v)}finally{i.stackRestore(g)}},gf=async(t,e,r,n,a,s)=>{var Z,pe;let i=Ze(),o=xr.get(t);if(!o)throw new Error(`cannot run inference. invalid session id: ${t}`);let l=o[0],d=o[1],c=o[2],f=o[3],g=o[4],y=o[5],p=e.length,v=n.length,S=0,E=[],k=[],O=[],I=[],T=i.stackSave(),F=i.stackAlloc(p*4),B=i.stackAlloc(p*4),G=i.stackAlloc(v*4),H=i.stackAlloc(v*4);try{[S,E]=Du(s);for(let te=0;te<p;te++)lo(r[te],k,I,t,e[te],g);for(let te=0;te<v;te++)lo(a[te],O,I,t,p+n[te],g);let oe=F/4,ne=B/4,de=G/4,D=H/4;for(let te=0;te<p;te++)i.HEAPU32[oe++]=k[te],i.HEAPU32[ne++]=d[e[te]];for(let te=0;te<v;te++)i.HEAPU32[de++]=O[te],i.HEAPU32[D++]=c[n[te]];if(f&&!y){let{handle:te,outputPreferredLocations:ye,outputPreferredLocationsEncoded:he}=f;if(d.length!==p)throw new Error(`input count from feeds (${p}) is expected to be always equal to model's input count (${d.length}).`);for(let R=0;R<p;R++){let ie=e[R];await i._OrtBindInput(te,d[ie],k[R])!==0&&Ge(`Can't bind input[${R}] for session=${t}.`)}for(let R=0;R<v;R++){let ie=n[R];(Z=a[R])!=null&&Z[3]?i._OrtBindOutput(te,c[ie],O[R],0)!==0&&Ge(`Can't bind pre-allocated output[${R}] for session=${t}.`):i._OrtBindOutput(te,c[ie],0,he[ie])!==0&&Ge(`Can't bind output[${R}] to ${ye[R]} for session=${t}.`)}xr.set(t,[l,d,c,f,g,!0])}(pe=i.jsepOnRunStart)==null||pe.call(i,l);let z;f?z=await i._OrtRunWithBinding(l,f.handle,v,G,S):z=await i._OrtRun(l,B,F,p,H,v,G,S),z!==0&&Ge("failed to call OrtRun().");let q=[];for(let te=0;te<v;te++){let ye=i.HEAPU32[G/4+te];if(ye===O[te]){q.push(a[te]);continue}let he=i.stackSave(),R=i.stackAlloc(4*4),ie=!1,le,Ae=0;try{i._OrtGetTensorData(ye,R,R+4,R+8,R+12)!==0&&Ge(`Can't access output tensor data on index ${te}.`);let Me=R/4,rt=i.HEAPU32[Me++];Ae=i.HEAPU32[Me++];let $t=i.HEAPU32[Me++],nt=i.HEAPU32[Me++],Zt=[];for(let je=0;je<nt;je++)Zt.push(i.HEAPU32[$t/4+je]);i._OrtFree($t);let Ot=Zt.reduce((je,at)=>je*at,1);le=Br(rt);let er=f==null?void 0:f.outputPreferredLocations[n[te]];if(le==="string"){if(er==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let je=[],at=Ae/4;for(let tr=0;tr<Ot;tr++){let pt=i.HEAPU32[at++],fn=tr===Ot-1?void 0:i.HEAPU32[at]-pt;je.push(i.UTF8ToString(pt,fn))}q.push([le,Zt,je,"cpu"])}else if(er==="gpu-buffer"&&Ot>0){let je=i.jsepGetBuffer;if(!je)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let at=je(Ae),tr=Pn(rt);if(tr===void 0||!gs(le))throw new Error(`Unsupported data type: ${le}`);ie=!0,q.push([le,Zt,{gpuBuffer:at,download:i.jsepCreateDownloader(at,Ot*tr,le),dispose:()=>{i._OrtReleaseTensor(ye)}},"gpu-buffer"])}else{let je=ms(le),at=new je(Ot);new Uint8Array(at.buffer,at.byteOffset,at.byteLength).set(i.HEAPU8.subarray(Ae,Ae+at.byteLength)),q.push([le,Zt,at,"cpu"])}}finally{i.stackRestore(he),le==="string"&&Ae&&i._free(Ae),ie||i._OrtReleaseTensor(ye)}}return f&&!g&&(i._OrtClearBoundOutputs(f.handle),xr.set(t,[l,d,c,f,g,!1])),q}finally{i.stackRestore(T),k.forEach(oe=>i._OrtReleaseTensor(oe)),O.forEach(oe=>i._OrtReleaseTensor(oe)),I.forEach(oe=>i._free(oe)),S!==0&&i._OrtReleaseRunOptions(S),E.forEach(oe=>i._free(oe))}},_f=t=>{let e=Ze(),r=xr.get(t);if(!r)throw new Error("invalid session id");let n=r[0],a=e._OrtEndProfiling(n);a===0&&Ge("Can't get an profile file name."),e._OrtFree(a)},yf=t=>{let e=[];for(let r of t){let n=r[2];!Array.isArray(n)&&"buffer"in n&&e.push(n.buffer)}return e}}),I_=rn((t,e)=>{e.exports='/*!\n * ONNX Runtime Web v1.19.0-dev.20240509-69cfcba38a\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var ao=Object.defineProperty;var nl=Object.getOwnPropertyDescriptor;var ol=Object.getOwnPropertyNames;var il=Object.prototype.hasOwnProperty;var Y=(e,t)=>()=>(e&&(t=e(e=0)),t);var Wr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),gn=(e,t)=>{for(var r in t)ao(e,r,{get:t[r],enumerable:!0})},al=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of ol(t))!il.call(e,i)&&i!==r&&ao(e,i,{get:()=>t[i],enumerable:!(o=nl(t,i))||o.enumerable});return e};var wr=e=>al(ao({},"__esModule",{value:!0}),e);var so={};gn(so,{createReadStream:()=>Ai,readFile:()=>sl,readFileSync:()=>ul});var sl,ul,Ai,uo=Y(()=>{sl=void 0,ul=void 0,Ai=void 0});var lo={};gn(lo,{join:()=>dl});var dl,co=Y(()=>{dl=void 0});var Ei=Wr((Ti,po)=>{"use strict";var Ii=(()=>{var e=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(e||=__filename),function(t={}){var r=t,o,i,u=new Promise((s,m)=>{o=s,i=m});r.mountExternalData=(s,m)=>{(r.eb||(r.eb=new Map)).set(s,m)},r.unmountExternalData=()=>{delete r.eb};let a=()=>{let s=(g,$,T)=>(...B)=>{let L=dt,q=$?.();B=g(...B);let te=$?.();return q!==te&&(g=te,T(q),$=T=null),dt!=L?tn():B},m=g=>async(...$)=>{try{if(r.cb)throw Error("Session already started");let T=r.cb={xb:$[0],errors:[]},B=await g(...$);if(r.cb!==T)throw Error("Session mismatch");r.kb?.flush();let L=T.errors;if(0<L.length){let q=await Promise.all(L);if(q=q.filter(te=>te),0<q.length)throw Error(q.join(`\n`))}return B}finally{r.cb=null}};r._OrtCreateSession=s(r._OrtCreateSession,()=>r._OrtCreateSession,g=>r._OrtCreateSession=g),r._OrtRun=m(s(r._OrtRun,()=>r._OrtRun,g=>r._OrtRun=g)),r._OrtRunWithBinding=m(s(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,g=>r._OrtRunWithBinding=g)),r._OrtBindInput=s(r._OrtBindInput,()=>r._OrtBindInput,g=>r._OrtBindInput=g),a=void 0};r.jsepInit=(s,m)=>{if(a?.(),s==="webgpu"){[r.kb,r.pb,r.tb,r.lb,r.sb,r.Ra,r.ub,r.wb,r.qb,r.rb,r.vb]=m;let g=r.kb;r.jsepRegisterBuffer=($,T,B,L)=>g.registerBuffer($,T,B,L),r.jsepGetBuffer=$=>g.getBuffer($),r.jsepCreateDownloader=($,T,B)=>g.createDownloader($,T,B),r.jsepOnReleaseSession=$=>{g.onReleaseSession($)},r.jsepOnRunStart=$=>g.onRunStart($)}};var c=Object.assign({},r),p="./this.program",h=(s,m)=>{throw m},d=typeof window=="object",y=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",_="",v,S,I;if(w){var A=(uo(),wr(so)),x=(co(),wr(lo));_=y?x.dirname(_)+"/":__dirname+"/",v=(s,m)=>(s=Ke(s)?new URL(s):x.normalize(s),A.readFileSync(s,m?void 0:"utf8")),I=s=>(s=v(s,!0),s.buffer||(s=new Uint8Array(s)),s),S=(s,m,g,$=!0)=>{s=Ke(s)?new URL(s):x.normalize(s),A.readFile(s,$?void 0:"utf8",(T,B)=>{T?g(T):m($?B.buffer:B)})},!r.thisProgram&&1<process.argv.length&&(p=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),h=(s,m)=>{throw process.exitCode=s,m}}else(d||y)&&(y?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),e&&(_=e),_.startsWith("blob:")?_="":_=_.substr(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1),v=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.send(null),m.responseText},y&&(I=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),S=(s,m,g)=>{var $=new XMLHttpRequest;$.open("GET",s,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?m($.response):g()},$.onerror=g,$.send(null)});var E=console.log.bind(console),P=console.error.bind(console);Object.assign(r,c),c=null;var O,R=!1,H,N,K,Q,he,W,se,Ce,We,ee,ae;function Ae(){var s=O.buffer;r.HEAP8=N=new Int8Array(s),r.HEAP16=Q=new Int16Array(s),r.HEAPU8=K=new Uint8Array(s),r.HEAPU16=he=new Uint16Array(s),r.HEAP32=W=new Int32Array(s),r.HEAPU32=se=new Uint32Array(s),r.HEAPF32=Ce=new Float32Array(s),r.HEAPF64=ae=new Float64Array(s),r.HEAP64=We=new BigInt64Array(s),r.HEAPU64=ee=new BigUint64Array(s)}var me=[],ie=[],ue=[],le=0,qe=null,G=null;function ne(s){throw s="Aborted("+s+")",P(s),R=!0,H=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),i(s),s}var xe=s=>s.startsWith("data:application/octet-stream;base64,"),Ke=s=>s.startsWith("file://"),De;if(De="ort-wasm-simd.wasm",!xe(De)){var Ge=De;De=r.locateFile?r.locateFile(Ge,_):_+Ge}function Mt(s){if(I)return I(s);throw"both async and sync fetching of the wasm failed"}function Ne(s){if(d||y){if(typeof fetch=="function"&&!Ke(s))return fetch(s,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw`failed to load wasm binary file at \'${s}\'`;return m.arrayBuffer()}).catch(()=>Mt(s));if(S)return new Promise((m,g)=>{S(s,$=>m(new Uint8Array($)),g)})}return Promise.resolve().then(()=>Mt(s))}function Ye(s,m,g){return Ne(s).then($=>WebAssembly.instantiate($,m)).then(g,$=>{P(`failed to asynchronously prepare wasm: ${$}`),ne($)})}function mt(s,m){var g=De;return typeof WebAssembly.instantiateStreaming!="function"||xe(g)||Ke(g)||w||typeof fetch!="function"?Ye(g,s,m):fetch(g,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,s).then(m,function(T){return P(`wasm streaming compile failed: ${T}`),P("falling back to ArrayBuffer instantiation"),Ye(g,s,m)}))}var Ot={824936:(s,m,g,$)=>{if(typeof r>"u"||!r.eb)return 1;if(s=je(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=r.eb.get(s),!s)return 2;if(m>>>=0,g>>>=0,m+g>s.byteLength)return 3;try{return K.set(s.subarray(m,m+g),$>>>0>>>0),0}catch{return 4}},825437:()=>{r.qb()},825468:()=>{r.rb()},825497:()=>{r.vb()},825522:s=>r.pb(s),825555:s=>r.tb(s),825587:(s,m,g)=>{r.lb(s,m,g,!0)},825626:(s,m,g)=>{r.lb(s,m,g)},825659:s=>{r.Ra("Abs",s,void 0)},825710:s=>{r.Ra("Neg",s,void 0)},825761:s=>{r.Ra("Floor",s,void 0)},825814:s=>{r.Ra("Ceil",s,void 0)},825866:s=>{r.Ra("Reciprocal",s,void 0)},825924:s=>{r.Ra("Sqrt",s,void 0)},825976:s=>{r.Ra("Exp",s,void 0)},826027:s=>{r.Ra("Erf",s,void 0)},826078:s=>{r.Ra("Sigmoid",s,void 0)},826133:(s,m,g)=>{r.Ra("HardSigmoid",s,{alpha:m,beta:g})},826212:s=>{r.Ra("Log",s,void 0)},826263:s=>{r.Ra("Sin",s,void 0)},826314:s=>{r.Ra("Cos",s,void 0)},826365:s=>{r.Ra("Tan",s,void 0)},826416:s=>{r.Ra("Asin",s,void 0)},826468:s=>{r.Ra("Acos",s,void 0)},826520:s=>{r.Ra("Atan",s,void 0)},826572:s=>{r.Ra("Sinh",s,void 0)},826624:s=>{r.Ra("Cosh",s,void 0)},826676:s=>{r.Ra("Asinh",s,void 0)},826729:s=>{r.Ra("Acosh",s,void 0)},826782:s=>{r.Ra("Atanh",s,void 0)},826835:s=>{r.Ra("Tanh",s,void 0)},826887:s=>{r.Ra("Not",s,void 0)},826938:(s,m,g)=>{r.Ra("Clip",s,{min:m,max:g})},827007:s=>{r.Ra("Clip",s,void 0)},827059:(s,m)=>{r.Ra("Elu",s,{alpha:m})},827117:s=>{r.Ra("Relu",s,void 0)},827169:(s,m)=>{r.Ra("LeakyRelu",s,{alpha:m})},827233:(s,m)=>{r.Ra("ThresholdedRelu",s,{alpha:m})},827303:(s,m)=>{r.Ra("Cast",s,{to:m})},827361:s=>{r.Ra("Add",s,void 0)},827412:s=>{r.Ra("Sub",s,void 0)},827463:s=>{r.Ra("Mul",s,void 0)},827514:s=>{r.Ra("Div",s,void 0)},827565:s=>{r.Ra("Pow",s,void 0)},827616:s=>{r.Ra("Equal",s,void 0)},827669:s=>{r.Ra("Greater",s,void 0)},827724:s=>{r.Ra("GreaterOrEqual",s,void 0)},827786:s=>{r.Ra("Less",s,void 0)},827838:s=>{r.Ra("LessOrEqual",s,void 0)},827897:(s,m,g,$,T)=>{r.Ra("ReduceMean",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828056:(s,m,g,$,T)=>{r.Ra("ReduceMax",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828214:(s,m,g,$,T)=>{r.Ra("ReduceMin",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828372:(s,m,g,$,T)=>{r.Ra("ReduceProd",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828531:(s,m,g,$,T)=>{r.Ra("ReduceSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828689:(s,m,g,$,T)=>{r.Ra("ReduceL1",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828846:(s,m,g,$,T)=>{r.Ra("ReduceL2",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829003:(s,m,g,$,T)=>{r.Ra("ReduceLogSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829164:(s,m,g,$,T)=>{r.Ra("ReduceSumSquare",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829328:(s,m,g,$,T)=>{r.Ra("ReduceLogSumExp",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829492:s=>{r.Ra("Where",s,void 0)},829545:(s,m,g)=>{r.Ra("Transpose",s,{perm:m?Array.from(W.subarray(m>>>0,g>>>0)):[]})},829653:(s,m,g,$)=>{r.Ra("DepthToSpace",s,{blocksize:m,mode:je(g),format:$?"NHWC":"NCHW"})},829786:(s,m,g,$)=>{r.Ra("DepthToSpace",s,{blocksize:m,mode:je(g),format:$?"NHWC":"NCHW"})},829919:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be)=>{r.Ra("ConvTranspose",s,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[T],pads:[B,L],strides:[q],wIsConst:()=>!!N[X>>>0],outputPadding:de?Array.from(W.subarray(de>>>0,Ee>>>0)):[],outputShape:Oe?Array.from(W.subarray(Oe>>>0,D>>>0)):[],activation:je(be)})},830320:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D)=>{r.Ra("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(W.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(W.subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(W.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(W.subarray(L>>>0,(L>>>0)+2>>>0)),wIsConst:()=>!!N[te>>>0],outputPadding:X?Array.from(W.subarray(X>>>0,de>>>0)):[],outputShape:Ee?Array.from(W.subarray(Ee>>>0,Oe>>>0)):[],activation:je(D)})},830885:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be)=>{r.Ra("ConvTranspose",s,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[T],pads:[B,L],strides:[q],wIsConst:()=>!!N[X>>>0],outputPadding:de?Array.from(W.subarray(de>>>0,Ee>>>0)):[],outputShape:Oe?Array.from(W.subarray(Oe>>>0,D>>>0)):[],activation:je(be)})},831286:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D)=>{r.Ra("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(W.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(W.subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(W.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(W.subarray(L>>>0,(L>>>0)+2>>>0)),wIsConst:()=>!!N[te>>>0],outputPadding:X?Array.from(W.subarray(X>>>0,de>>>0)):[],outputShape:Ee?Array.from(W.subarray(Ee>>>0,Oe>>>0)):[],activation:je(D)})},831851:(s,m)=>{r.Ra("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},831942:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,L],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832226:(s,m)=>{r.Ra("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},832317:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,L],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832601:(s,m)=>{r.Ra("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},832688:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,L],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832968:(s,m)=>{r.Ra("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},833055:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,L],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},833335:(s,m,g,$,T)=>{r.Ra("Gemm",s,{alpha:m,beta:g,transA:$,transB:T})},833439:s=>{r.Ra("MatMul",s,void 0)},833493:(s,m,g,$)=>{r.Ra("ArgMax",s,{keepDims:!!m,selectLastIndex:!!g,axis:$})},833601:(s,m,g,$)=>{r.Ra("ArgMin",s,{keepDims:!!m,selectLastIndex:!!g,axis:$})},833709:(s,m)=>{r.Ra("Softmax",s,{axis:m})},833772:(s,m)=>{r.Ra("Concat",s,{axis:m})},833832:(s,m,g,$,T)=>{r.Ra("Split",s,{axis:m,numOutputs:g,splitSizes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},833972:s=>{r.Ra("Expand",s,void 0)},834026:(s,m)=>{r.Ra("Gather",s,{axis:Number(m)})},834097:(s,m)=>{r.Ra("GatherElements",s,{axis:Number(m)})},834176:(s,m,g,$,T,B,L,q,te,X,de)=>{r.Ra("Resize",s,{antialias:m,axes:g?Array.from(W.subarray(g>>>0,$>>>0)):[],coordinateTransformMode:je(T),cubicCoeffA:B,excludeOutside:L,extrapolationValue:q,keepAspectRatioPolicy:je(te),mode:je(X),nearestMode:je(de)})},834522:(s,m,g,$,T,B,L)=>{r.Ra("Slice",s,{starts:m?Array.from(W.subarray(m>>>0,g>>>0)):[],ends:$?Array.from(W.subarray($>>>0,T>>>0)):[],axes:B?Array.from(W.subarray(B>>>0,L>>>0)):[]})},834738:s=>{r.Ra("Tile",s,void 0)},834790:(s,m,g,$)=>{r.Ra("LayerNormalization",s,{axis:m,epsilon:g,simplified:!!$})},834901:(s,m,g)=>{r.Ra("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},835015:(s,m,g)=>{r.Ra("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},835129:s=>{r.Ra("Range",s,void 0)},835182:(s,m)=>{r.Ra("Einsum",s,{equation:je(m)})},835263:(s,m,g,$,T)=>{r.Ra("Pad",s,{mode:m,value:g,pads:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},835390:(s,m,g,$,T,B)=>{r.Ra("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!T,trainingMode:!!$,format:B?"NHWC":"NCHW"})},835559:(s,m,g,$,T,B)=>{r.Ra("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!T,trainingMode:!!$,format:B?"NHWC":"NCHW"})},835728:(s,m,g)=>{r.Ra("CumSum",s,{exclusive:Number(m),reverse:Number(g)})},835825:(s,m,g,$,T,B,L,q,te)=>{r.Ra("Attention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:T,doRotary:B,qkvHiddenSizes:L?Array.from(W.subarray(Number(q)>>>0,Number(q)+L>>>0)):[],pastPresentShareBuffer:!!te})},836097:s=>{r.Ra("BiasAdd",s,void 0)},836152:s=>{r.Ra("BiasSplitGelu",s,void 0)},836213:s=>{r.Ra("FastGelu",s,void 0)},836269:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe)=>{r.Ra("Conv",s,{format:te?"NHWC":"NCHW",auto_pad:m,dilations:[g],group:$,kernel_shape:[T],pads:B?Array.from(W.subarray(B>>>0,L>>>0)):[],strides:[q],w_is_const:()=>!!N[X>>>0],activation:je(de),activation_params:Ee?Array.from(Ce.subarray(Ee>>>0,Oe>>>0)):[]})},836639:(s,m,g,$,T,B,L,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("Conv",s,{format:Ee?"NHWC":"NCHW",auto_pad:m,dilations:[g,$],group:T,kernel_shape:[B,L],pads:q?Array.from(W.subarray(q>>>0,te>>>0)):[],strides:[X,de],w_is_const:()=>!!N[Oe>>>0],activation:je(D),activation_params:be?Array.from(Ce.subarray(be>>>0,Ie>>>0)):[]})},837030:s=>{r.Ra("Gelu",s,void 0)},837082:(s,m,g,$,T,B)=>{r.Ra("MatMulNBits",s,{k:m,n:g,accuracyLevel:$,bits:T,blockSize:B})},837209:(s,m,g,$,T,B)=>{r.Ra("MultiHeadAttention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:T,doRotary:B})},837368:(s,m,g,$,T)=>{r.Ra("RotaryEmbedding",s,{interleaved:!!m,numHeads:g,rotaryEmbeddingDim:$,scale:T})},837507:(s,m,g)=>{r.Ra("SkipLayerNormalization",s,{epsilon:m,simplified:!!g})},837609:(s,m,g)=>{r.Ra("SkipLayerNormalization",s,{epsilon:m,simplified:!!g})},837711:(s,m,g,$)=>{r.Ra("LayerNormalization",s,{axis:m,epsilon:g,simplified:!!$})},837822:s=>{r.ub(s)},837856:(s,m)=>r.wb(s,m,r.cb.xb,r.cb.errors)};function qt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}class Ut{constructor(m){this.hb=m-24}}var sr=0,jt=0,xr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Kt=(s,m,g)=>{m>>>=0;var $=m+g;for(g=m;s[g]&&!(g>=$);)++g;if(16<g-m&&s.buffer&&xr)return xr.decode(s.subarray(m,g));for($="";m<g;){var T=s[m++];if(T&128){var B=s[m++]&63;if((T&224)==192)$+=String.fromCharCode((T&31)<<6|B);else{var L=s[m++]&63;T=(T&240)==224?(T&15)<<12|B<<6|L:(T&7)<<18|B<<12|L<<6|s[m++]&63,65536>T?$+=String.fromCharCode(T):(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023))}}else $+=String.fromCharCode(T)}return $},je=(s,m)=>(s>>>=0)?Kt(K,s,m):"",Vt=s=>{for(var m=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);127>=$?m++:2047>=$?m+=2:55296<=$&&57343>=$?(m+=4,++g):m+=3}return m},at=(s,m,g,$)=>{if(g>>>=0,!(0<$))return 0;var T=g;$=g+$-1;for(var B=0;B<s.length;++B){var L=s.charCodeAt(B);if(55296<=L&&57343>=L){var q=s.charCodeAt(++B);L=65536+((L&1023)<<10)|q&1023}if(127>=L){if(g>=$)break;m[g++>>>0]=L}else{if(2047>=L){if(g+1>=$)break;m[g++>>>0]=192|L>>6}else{if(65535>=L){if(g+2>=$)break;m[g++>>>0]=224|L>>12}else{if(g+3>=$)break;m[g++>>>0]=240|L>>18,m[g++>>>0]=128|L>>12&63}m[g++>>>0]=128|L>>6&63}m[g++>>>0]=128|L&63}}return m[g>>>0]=0,g-T},Cr,ft=s=>{for(var m="";K[s>>>0];)m+=Cr[K[s++>>>0]];return m},ur={},Ar={},Ir={},st;function Tr(s,m,g={}){var $=m.name;if(!s)throw new st(`type "${$}" must have a positive integer typeid pointer`);if(Ar.hasOwnProperty(s)){if(g.nb)return;throw new st(`Cannot register type \'${$}\' twice`)}Ar[s]=m,delete Ir[s],ur.hasOwnProperty(s)&&(m=ur[s],delete ur[s],m.forEach(T=>T()))}function ht(s,m,g={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Tr(s,m,g)}var bt=(s,m,g)=>{switch(m){case 1:return g?$=>N[$>>>0]:$=>K[$>>>0];case 2:return g?$=>Q[$>>>1>>>0]:$=>he[$>>>1>>>0];case 4:return g?$=>W[$>>>2>>>0]:$=>se[$>>>2>>>0];case 8:return g?$=>We[$>>>3]:$=>ee[$>>>3];default:throw new TypeError(`invalid integer width (${m}): ${s}`)}},Er=[],Te=[];function dr(s){s>>>=0,9<s&&--Te[s+1]===0&&(Te[s]=void 0,Er.push(s))}var Xe=s=>{if(!s)throw new st("Cannot use deleted val. handle = "+s);return Te[s]},ut=s=>{switch(s){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=Er.pop()||Te.length;return Te[m]=s,Te[m+1]=1,m}};function lr(s){return this.fromWireType(se[s>>>2>>>0])}var Fn={name:"emscripten::val",fromWireType:s=>{var m=Xe(s);return dr(s),m},toWireType:(s,m)=>ut(m),argPackAdvance:8,readValueFromPointer:lr,bb:null},ge=(s,m)=>{switch(m){case 4:return function(g){return this.fromWireType(Ce[g>>>2>>>0])};case 8:return function(g){return this.fromWireType(ae[g>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${s}`)}},Yt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,jr=(s,m)=>{for(var g=s>>1,$=g+m/2;!(g>=$)&&he[g>>>0];)++g;if(g<<=1,32<g-s&&Yt)return Yt.decode(K.subarray(s>>>0,g>>>0));for(g="",$=0;!($>=m/2);++$){var T=Q[s+2*$>>>1>>>0];if(T==0)break;g+=String.fromCharCode(T)}return g},qn=(s,m,g)=>{if(g??=2147483647,2>g)return 0;g-=2;var $=m;g=g<2*s.length?g/2:s.length;for(var T=0;T<g;++T)Q[m>>>1>>>0]=s.charCodeAt(T),m+=2;return Q[m>>>1>>>0]=0,m-$},Kr=s=>2*s.length,jn=(s,m)=>{for(var g=0,$="";!(g>=m/4);){var T=W[s+4*g>>>2>>>0];if(T==0)break;++g,65536<=T?(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023)):$+=String.fromCharCode(T)}return $},Yr=(s,m,g)=>{if(m>>>=0,g??=2147483647,4>g)return 0;var $=m;g=$+g-4;for(var T=0;T<s.length;++T){var B=s.charCodeAt(T);if(55296<=B&&57343>=B){var L=s.charCodeAt(++T);B=65536+((B&1023)<<10)|L&1023}if(W[m>>>2>>>0]=B,m+=4,m+4>g)break}return W[m>>>2>>>0]=0,m-$},Zr=s=>{for(var m=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);55296<=$&&57343>=$&&++g,m+=4}return m},cr=(s,m)=>{var g=Ar[s];if(g===void 0)throw s=Mr(s),g=ft(s),rt(s),new st(`${m} has unknown type ${g}`);return g},Pr=(s,m,g)=>{var $=[];return s=s.toWireType($,g),$.length&&(se[m>>>2>>>0]=ut($)),s},He=s=>{try{s()}catch(m){ne(m)}},Xr=s=>{if(!R)try{s();try{H=H=s=H,r.onExit?.(s),R=!0,h(s,new qt(s))}catch(m){m instanceof qt||m=="unwind"||h(1,m)}}catch(m){m instanceof qt||m=="unwind"||h(1,m)}};function Qr(){var s=pe,m={};for(let[g,$]of Object.entries(s))m[g]=typeof $=="function"?(...T)=>{Zt.push(g);try{return $(...T)}finally{R||(Zt.pop(),dt&&gt===1&&Zt.length===0&&(gt=0,He(dn),typeof Fibers<"u"&&Fibers.Db()))}}:$;return m}var gt=0,dt=null,Rt=0,Zt=[],kr={},Or={},Jr=0,pr=null,en=[];function tn(){return new Promise((s,m)=>{pr={resolve:s,reject:m}})}function rn(){var s=Wt(65548),m=s+12;se[s>>>2>>>0]=m,se[s+4>>>2>>>0]=m+65536,m=Zt[0];var g=kr[m];return g===void 0&&(g=Jr++,kr[m]=g,Or[g]=m),W[s+8>>>2>>>0]=g,s}function nn(s){if(!R){if(gt===0){var m=!1,g=!1;s(($=0)=>{if(!R&&(Rt=$,m=!0,g)){gt=2,He(()=>vt(dt)),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.resume(),$=!1;try{var T=(0,pe[Or[W[dt+8>>>2>>>0]]])()}catch(q){T=q,$=!0}var B=!1;if(!dt){var L=pr;L&&(pr=null,($?L.reject:L.resolve)(T),B=!0)}if($&&!B)throw T}}),g=!0,m||(gt=1,dt=rn(),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.pause(),He(()=>Jt(dt)))}else gt===2?(gt=0,He(ct),rt(dt),dt=null,en.forEach(Xr)):ne(`invalid state: ${gt}`);return Rt}}function Rr(s){return nn(m=>{s().then(m)})}var Xt=[],on={},nt=s=>{var m=on[s];return m===void 0?ft(s):m},mr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Br=s=>{var m=Xt.length;return Xt.push(s),m},Kn=(s,m)=>{for(var g=Array(s),$=0;$<s;++$)g[$]=cr(se[m+4*$>>>2>>>0],"parameter "+$);return g},wt=(s,m)=>Object.defineProperty(m,"name",{value:s});function Yn(s){var m=Function;if(!(m instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof m} which is not a function`);var g=wt(m.name||"unknownFunctionName",function(){});return g.prototype=m.prototype,g=new g,s=m.apply(g,s),s instanceof Object?s:g}var Je=s=>s%4===0&&(s%100!==0||s%400===0),Dr=[0,31,60,91,121,152,182,213,244,274,305,335],fr=[0,31,59,90,120,151,181,212,243,273,304,334],lt=[],hr=(s,m)=>{lt.length=0;for(var g;g=K[s++>>>0];){var $=g!=105;$&=g!=112,m+=$&&m%8?4:0,lt.push(g==112?se[m>>>2>>>0]:g==106?We[m>>>3]:g==105?W[m>>>2>>>0]:ae[m>>>3>>>0]),m+=$?8:4}return lt},Qe={},ot=()=>{if(!Qt){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:p||"./this.program"},m;for(m in Qe)Qe[m]===void 0?delete s[m]:s[m]=Qe[m];var g=[];for(m in s)g.push(`${m}=${s[m]}`);Qt=g}return Qt},Qt,Zn=[null,[],[]],an=[31,29,31,30,31,30,31,31,30,31,30,31],zr=[31,28,31,30,31,30,31,31,30,31,30,31];function Xn(s){var m=Array(Vt(s)+1);return at(s,m,0,m.length),m}function sn(s,m,g,$){function T(D,be,Ie){for(D=typeof D=="number"?D.toString():D||"";D.length<be;)D=Ie[0]+D;return D}function B(D,be){return T(D,be,"0")}function L(D,be){function Ie(zt){return 0>zt?-1:0<zt?1:0}var Dt;return(Dt=Ie(D.getFullYear()-be.getFullYear()))===0&&(Dt=Ie(D.getMonth()-be.getMonth()))===0&&(Dt=Ie(D.getDate()-be.getDate())),Dt}function q(D){switch(D.getDay()){case 0:return new Date(D.getFullYear()-1,11,29);case 1:return D;case 2:return new Date(D.getFullYear(),0,3);case 3:return new Date(D.getFullYear(),0,2);case 4:return new Date(D.getFullYear(),0,1);case 5:return new Date(D.getFullYear()-1,11,31);case 6:return new Date(D.getFullYear()-1,11,30)}}function te(D){var be=D.$a;for(D=new Date(new Date(D.ab+1900,0,1).getTime());0<be;){var Ie=D.getMonth(),Dt=(Je(D.getFullYear())?an:zr)[Ie];if(be>Dt-D.getDate())be-=Dt-D.getDate()+1,D.setDate(1),11>Ie?D.setMonth(Ie+1):(D.setMonth(0),D.setFullYear(D.getFullYear()+1));else{D.setDate(D.getDate()+be);break}}return Ie=new Date(D.getFullYear()+1,0,4),be=q(new Date(D.getFullYear(),0,4)),Ie=q(Ie),0>=L(be,D)?0>=L(Ie,D)?D.getFullYear()+1:D.getFullYear():D.getFullYear()-1}s>>>=0,m>>>=0,g>>>=0,$>>>=0;var X=se[$+40>>>2>>>0];$={Ab:W[$>>>2>>>0],zb:W[$+4>>>2>>>0],fb:W[$+8>>>2>>>0],jb:W[$+12>>>2>>>0],gb:W[$+16>>>2>>>0],ab:W[$+20>>>2>>>0],Va:W[$+24>>>2>>>0],$a:W[$+28>>>2>>>0],Cb:W[$+32>>>2>>>0],yb:W[$+36>>>2>>>0],Bb:X?je(X):""},g=je(g),X={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var de in X)g=g.replace(new RegExp(de,"g"),X[de]);var Ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Oe="January February March April May June July August September October November December".split(" ");X={"%a":D=>Ee[D.Va].substring(0,3),"%A":D=>Ee[D.Va],"%b":D=>Oe[D.gb].substring(0,3),"%B":D=>Oe[D.gb],"%C":D=>B((D.ab+1900)/100|0,2),"%d":D=>B(D.jb,2),"%e":D=>T(D.jb,2," "),"%g":D=>te(D).toString().substring(2),"%G":te,"%H":D=>B(D.fb,2),"%I":D=>(D=D.fb,D==0?D=12:12<D&&(D-=12),B(D,2)),"%j":D=>{for(var be=0,Ie=0;Ie<=D.gb-1;be+=(Je(D.ab+1900)?an:zr)[Ie++]);return B(D.jb+be,3)},"%m":D=>B(D.gb+1,2),"%M":D=>B(D.zb,2),"%n":()=>`\n`,"%p":D=>0<=D.fb&&12>D.fb?"AM":"PM","%S":D=>B(D.Ab,2),"%t":()=>"	","%u":D=>D.Va||7,"%U":D=>B(Math.floor((D.$a+7-D.Va)/7),2),"%V":D=>{var be=Math.floor((D.$a+7-(D.Va+6)%7)/7);if(2>=(D.Va+371-D.$a-2)%7&&be++,be)be==53&&(Ie=(D.Va+371-D.$a)%7,Ie==4||Ie==3&&Je(D.ab)||(be=1));else{be=52;var Ie=(D.Va+7-D.$a-1)%7;(Ie==4||Ie==5&&Je(D.ab%400-1))&&be++}return B(be,2)},"%w":D=>D.Va,"%W":D=>B(Math.floor((D.$a+7-(D.Va+6)%7)/7),2),"%y":D=>(D.ab+1900).toString().substring(2),"%Y":D=>D.ab+1900,"%z":D=>{D=D.yb;var be=0<=D;return D=Math.abs(D)/60,(be?"+":"-")+("0000"+(D/60*100+D%60)).slice(-4)},"%Z":D=>D.Bb,"%%":()=>"%"},g=g.replace(/%%/g,"\\0\\0");for(de in X)g.includes(de)&&(g=g.replace(new RegExp(de,"g"),X[de]($)));return g=g.replace(/\\0\\0/g,"%"),de=Xn(g),de.length>m?0:(N.set(de,s>>>0),de.length-1)}for(var un=Array(256),gr=0;256>gr;++gr)un[gr]=String.fromCharCode(gr);Cr=un,st=r.BindingError=class extends Error{constructor(s){super(s),this.name="BindingError"}},r.InternalError=class extends Error{constructor(s){super(s),this.name="InternalError"}},Te.push(0,1,void 0,1,null,1,!0,1,!1,1),r.count_emval_handles=()=>Te.length/2-5-Er.length;var Qn={ia:function(s,m,g){return Rr(async()=>{await r.sb(s,m,g)})},a:function(s,m,g){s>>>=0;var $=new Ut(s);throw se[$.hb+16>>>2>>>0]=0,se[$.hb+4>>>2>>>0]=m>>>0,se[$.hb+8>>>2>>>0]=g>>>0,sr=s,jt++,sr},z:function(){return 0},ea:function(){},R:function(){},T:function(){},ga:function(){return 0},ca:function(){},Z:function(){},ba:function(){},G:function(){},S:function(){},P:function(){},da:function(){},Q:function(){},C:function(s,m,g){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:$=>$,toWireType:function($,T){if(typeof T!="bigint"&&typeof T!="number")throw T===null?T="null":($=typeof T,T=$==="object"||$==="array"||$==="function"?T.toString():""+T),new TypeError(`Cannot convert "${T}" to ${this.name}`);return typeof T=="number"&&(T=BigInt(T)),T},argPackAdvance:8,readValueFromPointer:bt(m,g>>>0,m.indexOf("u")==-1),bb:null})},K:function(s,m,g,$){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:function(T){return!!T},toWireType:function(T,B){return B?g:$},argPackAdvance:8,readValueFromPointer:function(T){return this.fromWireType(K[T>>>0])},bb:null})},J:function(s){return ht(s>>>0,Fn)},B:function(s,m,g){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:$=>$,toWireType:($,T)=>T,argPackAdvance:8,readValueFromPointer:ge(m,g>>>0),bb:null})},s:function(s,m,g,$,T){if(s>>>=0,g>>>=0,m=ft(m>>>0),T===-1&&(T=4294967295),T=q=>q,$===0){var B=32-8*g;T=q=>q<<B>>>B}var L=m.includes("unsigned")?function(q,te){return te>>>0}:function(q,te){return te};ht(s,{name:m,fromWireType:T,toWireType:L,argPackAdvance:8,readValueFromPointer:bt(m,g,$!==0),bb:null})},o:function(s,m,g){function $(B){return new T(N.buffer,se[B+4>>>2>>>0],se[B>>>2>>>0])}var T=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];g=ft(g>>>0),ht(s>>>0,{name:g,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{nb:!0})},D:function(s,m){m=ft(m>>>0);var g=m==="std::string";ht(s>>>0,{name:m,fromWireType:function($){var T=se[$>>>2>>>0],B=$+4;if(g)for(var L=B,q=0;q<=T;++q){var te=B+q;if(q==T||K[te>>>0]==0){if(L=je(L,te-L),X===void 0)var X=L;else X+=String.fromCharCode(0),X+=L;L=te+1}}else{for(X=Array(T),q=0;q<T;++q)X[q]=String.fromCharCode(K[B+q>>>0]);X=X.join("")}return rt($),X},toWireType:function($,T){T instanceof ArrayBuffer&&(T=new Uint8Array(T));var B=typeof T=="string";if(!(B||T instanceof Uint8Array||T instanceof Uint8ClampedArray||T instanceof Int8Array))throw new st("Cannot pass non-string to std::string");var L=g&&B?Vt(T):T.length,q=Wt(4+L+1),te=q+4;if(se[q>>>2>>>0]=L,g&&B)at(T,K,te,L+1);else if(B)for(B=0;B<L;++B){var X=T.charCodeAt(B);if(255<X)throw rt(te),new st("String has UTF-16 code units that do not fit in 8 bits");K[te+B>>>0]=X}else for(B=0;B<L;++B)K[te+B>>>0]=T[B];return $!==null&&$.push(rt,q),q},argPackAdvance:8,readValueFromPointer:lr,bb($){rt($)}})},y:function(s,m,g){if(m>>>=0,g>>>=0,g=ft(g),m===2)var $=jr,T=qn,B=Kr,L=q=>he[q>>>1>>>0];else m===4&&($=jn,T=Yr,B=Zr,L=q=>se[q>>>2>>>0]);ht(s>>>0,{name:g,fromWireType:q=>{for(var te=se[q>>>2>>>0],X,de=q+4,Ee=0;Ee<=te;++Ee){var Oe=q+4+Ee*m;(Ee==te||L(Oe)==0)&&(de=$(de,Oe-de),X===void 0?X=de:(X+=String.fromCharCode(0),X+=de),de=Oe+m)}return rt(q),X},toWireType:(q,te)=>{if(typeof te!="string")throw new st(`Cannot pass non-string to C++ string type ${g}`);var X=B(te),de=Wt(4+X+m);return se[de>>>2>>>0]=X/m,T(te,de+4,X+m),q!==null&&q.push(rt,de),de},argPackAdvance:8,readValueFromPointer:lr,bb(q){rt(q)}})},L:function(s,m){m=ft(m>>>0),ht(s>>>0,{ob:!0,name:m,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ha:()=>1,u:function(s,m,g){return m>>>=0,g>>>=0,s=Xe(s>>>0),m=cr(m,"emval::as"),Pr(m,g,s)},x:function(s){return s>>>=0,Rr(()=>(s=Xe(s),s.then(ut)))},n:function(s,m,g,$){return g>>>=0,$>>>=0,s=Xt[s>>>0],m=Xe(m>>>0),s(null,m,g,$)},j:function(s,m,g,$,T){return g>>>=0,$>>>=0,T>>>=0,s=Xt[s>>>0],m=Xe(m>>>0),g=nt(g),s(m,m[g],$,T)},b:dr,w:function(s,m){return m>>>=0,s=Xe(s>>>0),m=Xe(m),s==m},m:function(s){return s>>>=0,s===0?ut(mr()):(s=nt(s),ut(mr()[s]))},i:function(s,m,g){m=Kn(s,m>>>0);var $=m.shift();s--;var T=`return function (obj, func, destructorsRef, args) {\n`,B=0,L=[];g===0&&L.push("obj");for(var q=["retType"],te=[$],X=0;X<s;++X)L.push("arg"+X),q.push("argType"+X),te.push(m[X]),T+=`  var arg${X} = argType${X}.readValueFromPointer(args${B?"+"+B:""});\n`,B+=m[X].argPackAdvance;return T+=`  var rv = ${g===1?"new func":"func.call"}(${L.join(", ")});\n`,$.ob||(q.push("emval_returnValue"),te.push(Pr),T+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),q.push(T+`};\n`),s=Yn(q)(...te),g=`methodCaller<(${m.map(de=>de.name).join(", ")}) => ${$.name}>`,Br(wt(g,s))},r:function(s,m){return m>>>=0,s=Xe(s>>>0),m=Xe(m),ut(s[m])},e:function(s){s>>>=0,9<s&&(Te[s+1]+=1)},t:function(){return ut([])},l:function(s){s=Xe(s>>>0);for(var m=Array(s.length),g=0;g<s.length;g++)m[g]=s[g];return ut(m)},f:function(s){return ut(nt(s>>>0))},k:function(){return ut({})},h:function(s){s>>>=0;for(var m=Xe(s);m.length;){var g=m.pop();m.pop()(g)}dr(s)},g:function(s,m,g){m>>>=0,g>>>=0,s=Xe(s>>>0),m=Xe(m),g=Xe(g),s[m]=g},c:function(s,m){return m>>>=0,s=cr(s>>>0,"_emval_take_value"),s=s.readValueFromPointer(m),ut(s)},W:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),W[m>>>2>>>0]=s.getUTCSeconds(),W[m+4>>>2>>>0]=s.getUTCMinutes(),W[m+8>>>2>>>0]=s.getUTCHours(),W[m+12>>>2>>>0]=s.getUTCDate(),W[m+16>>>2>>>0]=s.getUTCMonth(),W[m+20>>>2>>>0]=s.getUTCFullYear()-1900,W[m+24>>>2>>>0]=s.getUTCDay(),W[m+28>>>2>>>0]=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},X:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),W[m>>>2>>>0]=s.getSeconds(),W[m+4>>>2>>>0]=s.getMinutes(),W[m+8>>>2>>>0]=s.getHours(),W[m+12>>>2>>>0]=s.getDate(),W[m+16>>>2>>>0]=s.getMonth(),W[m+20>>>2>>>0]=s.getFullYear()-1900,W[m+24>>>2>>>0]=s.getDay(),W[m+28>>>2>>>0]=(Je(s.getFullYear())?Dr:fr)[s.getMonth()]+s.getDate()-1|0,W[m+36>>>2>>>0]=-(60*s.getTimezoneOffset());var g=new Date(s.getFullYear(),6,1).getTimezoneOffset(),$=new Date(s.getFullYear(),0,1).getTimezoneOffset();W[m+32>>>2>>>0]=(g!=$&&s.getTimezoneOffset()==Math.min($,g))|0},Y:function(s){s>>>=0;var m=new Date(W[s+20>>>2>>>0]+1900,W[s+16>>>2>>>0],W[s+12>>>2>>>0],W[s+8>>>2>>>0],W[s+4>>>2>>>0],W[s>>>2>>>0],0),g=W[s+32>>>2>>>0],$=m.getTimezoneOffset(),T=new Date(m.getFullYear(),6,1).getTimezoneOffset(),B=new Date(m.getFullYear(),0,1).getTimezoneOffset(),L=Math.min(B,T);return 0>g?W[s+32>>>2>>>0]=+(T!=B&&L==$):0<g!=(L==$)&&(T=Math.max(B,T),m.setTime(m.getTime()+6e4*((0<g?L:T)-$))),W[s+24>>>2>>>0]=m.getDay(),W[s+28>>>2>>>0]=(Je(m.getFullYear())?Dr:fr)[m.getMonth()]+m.getDate()-1|0,W[s>>>2>>>0]=m.getSeconds(),W[s+4>>>2>>>0]=m.getMinutes(),W[s+8>>>2>>>0]=m.getHours(),W[s+12>>>2>>>0]=m.getDate(),W[s+16>>>2>>>0]=m.getMonth(),W[s+20>>>2>>>0]=m.getYear(),s=m.getTime(),BigInt(isNaN(s)?-1:s/1e3)},U:function(){return-52},V:function(){},N:function(s,m,g,$){g>>>=0,$>>>=0;var T=new Date().getFullYear(),B=new Date(T,0,1),L=new Date(T,6,1);T=B.getTimezoneOffset();var q=L.getTimezoneOffset();se[s>>>0>>>2>>>0]=60*Math.max(T,q),W[m>>>0>>>2>>>0]=+(T!=q),s=te=>te.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],B=s(B),L=s(L),q<T?(at(B,K,g,17),at(L,K,$,17)):(at(B,K,$,17),at(L,K,g,17))},v:()=>{ne("")},d:function(s,m,g){return s>>>=0,m=hr(m>>>0,g>>>0),Ot[s](...m)},I:function(s,m,g){return s>>>=0,m=hr(m>>>0,g>>>0),Ot[s](...m)},H:()=>Date.now(),O:function(){return 4294901760},q:()=>performance.now(),M:function(s){s>>>=0;var m=K.length;if(4294901760<s)return!1;for(var g=1;4>=g;g*=2){var $=m*(1+.2/g);$=Math.min($,s+100663296);var T=Math;$=Math.max(s,$);e:{T=(T.min.call(T,4294901760,$+(65536-$%65536)%65536)-O.buffer.byteLength+65535)/65536;try{O.grow(T),Ae();var B=1;break e}catch{}B=void 0}if(B)return!0}return!1},$:function(s,m){s>>>=0,m>>>=0;var g=0;return ot().forEach(($,T)=>{var B=m+g;for(T=se[s+4*T>>>2>>>0]=B,B=0;B<$.length;++B)N[T++>>>0]=$.charCodeAt(B);N[T>>>0]=0,g+=$.length+1}),0},aa:function(s,m){s>>>=0,m>>>=0;var g=ot();se[s>>>2>>>0]=g.length;var $=0;return g.forEach(T=>$+=T.length+1),se[m>>>2>>>0]=$,0},A:()=>52,F:function(){return 52},_:function(){return 70},E:function(s,m,g,$){m>>>=0,g>>>=0,$>>>=0;for(var T=0,B=0;B<g;B++){var L=se[m>>>2>>>0],q=se[m+4>>>2>>>0];m+=8;for(var te=0;te<q;te++){var X=K[L+te>>>0],de=Zn[s];X===0||X===10?((s===1?E:P)(Kt(de,0)),de.length=0):de.push(X)}T+=q}return se[$>>>2>>>0]=T,0},fa:sn,p:function(s,m,g,$){return sn(s>>>0,m>>>0,g>>>0,$>>>0)}},pe=function(){function s(g){return pe=g.exports,pe=Qr(),pe=ln(),O=pe.ja,Ae(),ie.unshift(pe.ka),le--,le==0&&(qe!==null&&(clearInterval(qe),qe=null),G&&(g=G,G=null,g())),pe}var m={a:Qn};if(le++,r.instantiateWasm)try{return r.instantiateWasm(m,s)}catch(g){P(`Module.instantiateWasm callback failed with error: ${g}`),i(g)}return mt(m,function(g){s(g.instance)}).catch(i),{}}(),Mr=s=>(Mr=pe.la)(s);r._OrtInit=(s,m)=>(r._OrtInit=pe.ma)(s,m),r._OrtGetLastError=(s,m)=>(r._OrtGetLastError=pe.na)(s,m),r._OrtCreateSessionOptions=(s,m,g,$,T,B,L,q,te,X)=>(r._OrtCreateSessionOptions=pe.oa)(s,m,g,$,T,B,L,q,te,X),r._OrtAppendExecutionProvider=(s,m)=>(r._OrtAppendExecutionProvider=pe.pa)(s,m),r._OrtAddFreeDimensionOverride=(s,m,g)=>(r._OrtAddFreeDimensionOverride=pe.qa)(s,m,g),r._OrtAddSessionConfigEntry=(s,m,g)=>(r._OrtAddSessionConfigEntry=pe.ra)(s,m,g),r._OrtReleaseSessionOptions=s=>(r._OrtReleaseSessionOptions=pe.sa)(s),r._OrtCreateSession=(s,m,g)=>(r._OrtCreateSession=pe.ta)(s,m,g),r._OrtReleaseSession=s=>(r._OrtReleaseSession=pe.ua)(s),r._OrtGetInputOutputCount=(s,m,g)=>(r._OrtGetInputOutputCount=pe.va)(s,m,g),r._OrtGetInputName=(s,m)=>(r._OrtGetInputName=pe.wa)(s,m),r._OrtGetOutputName=(s,m)=>(r._OrtGetOutputName=pe.xa)(s,m),r._OrtFree=s=>(r._OrtFree=pe.ya)(s),r._OrtCreateTensor=(s,m,g,$,T,B)=>(r._OrtCreateTensor=pe.za)(s,m,g,$,T,B),r._OrtGetTensorData=(s,m,g,$,T)=>(r._OrtGetTensorData=pe.Aa)(s,m,g,$,T),r._OrtReleaseTensor=s=>(r._OrtReleaseTensor=pe.Ba)(s),r._OrtCreateRunOptions=(s,m,g,$)=>(r._OrtCreateRunOptions=pe.Ca)(s,m,g,$),r._OrtAddRunConfigEntry=(s,m,g)=>(r._OrtAddRunConfigEntry=pe.Da)(s,m,g),r._OrtReleaseRunOptions=s=>(r._OrtReleaseRunOptions=pe.Ea)(s),r._OrtCreateBinding=s=>(r._OrtCreateBinding=pe.Fa)(s),r._OrtBindInput=(s,m,g)=>(r._OrtBindInput=pe.Ga)(s,m,g),r._OrtBindOutput=(s,m,g,$)=>(r._OrtBindOutput=pe.Ha)(s,m,g,$),r._OrtClearBoundOutputs=s=>(r._OrtClearBoundOutputs=pe.Ia)(s),r._OrtReleaseBinding=s=>(r._OrtReleaseBinding=pe.Ja)(s),r._OrtRunWithBinding=(s,m,g,$,T)=>(r._OrtRunWithBinding=pe.Ka)(s,m,g,$,T),r._OrtRun=(s,m,g,$,T,B,L,q)=>(r._OrtRun=pe.La)(s,m,g,$,T,B,L,q),r._OrtEndProfiling=s=>(r._OrtEndProfiling=pe.Ma)(s),r._JsepOutput=(s,m,g)=>(r._JsepOutput=pe.Na)(s,m,g),r._JsepGetNodeName=s=>(r._JsepGetNodeName=pe.Oa)(s);var Wt=r._malloc=s=>(Wt=r._malloc=pe.Pa)(s),rt=r._free=s=>(rt=r._free=pe.Qa)(s),yr=s=>(yr=pe.Sa)(s),br=s=>(br=pe.Ta)(s),Ur=()=>(Ur=pe.Ua)(),Jt=s=>(Jt=pe.Wa)(s),dn=()=>(dn=pe.Xa)(),vt=s=>(vt=pe.Ya)(s),ct=()=>(ct=pe.Za)();r.___start_em_js=837968,r.___stop_em_js=838129;function ln(){var s=pe;s=Object.assign({},s);var m=g=>$=>g($)>>>0;return s.la=m(s.la),s.Pa=m(s.Pa),s.Ta=m(s.Ta),s.Ua=(g=>()=>g()>>>0)(s.Ua),s}r.stackSave=()=>Ur(),r.stackRestore=s=>yr(s),r.stackAlloc=s=>br(s),r.UTF8ToString=je,r.stringToUTF8=(s,m,g)=>at(s,K,m,g),r.lengthBytesUTF8=Vt;var Bt;G=function s(){Bt||Vr(),Bt||(G=s)};function Vr(){if(!(0<le)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var s=r.preRun.shift();me.unshift(s)}for(;0<me.length;)me.shift()(r);if(!(0<le||Bt||(Bt=!0,r.calledRun=!0,R))){for(;0<ie.length;)ie.shift()(r);for(o(r);0<ue.length;)ue.shift()(r)}}}return Vr(),u}})();typeof Ti=="object"&&typeof po=="object"?po.exports=Ii:typeof define=="function"&&define.amd&&define([],()=>Ii)});var Pi=Wr(()=>{});var ki=Wr(()=>{});var Oi={};gn(Oi,{cpus:()=>ll});var ll,Ri=Y(()=>{ll=void 0});var zi=Wr((Di,mo)=>{"use strict";var Bi=(()=>{var e=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(e||=__filename),function(t={}){function r(){return ae.buffer!=ue.buffer&&Ne(),ue}function o(){return ae.buffer!=ue.buffer&&Ne(),le}function i(){return ae.buffer!=ue.buffer&&Ne(),qe}function u(){return ae.buffer!=ue.buffer&&Ne(),G}function a(){return ae.buffer!=ue.buffer&&Ne(),ne}function c(){return ae.buffer!=ue.buffer&&Ne(),xe}function p(){return ae.buffer!=ue.buffer&&Ne(),Ke}function h(){return ae.buffer!=ue.buffer&&Ne(),Mt}var d=t,y,w,_=new Promise((n,l)=>{y=n,w=l});d.mountExternalData=(n,l)=>{(d.Db||(d.Db=new Map)).set(n,l)},d.unmountExternalData=()=>{delete d.Db};let v=()=>{let n=(f,b,C)=>(...k)=>{let V=ct,F=b?.();k=f(...k);let re=b?.();return F!==re&&(f=re,C(F),b=C=null),ct!=V?T():k},l=f=>async(...b)=>{try{if(d.Cb)throw Error("Session already started");let C=d.Cb={ec:b[0],errors:[]},k=await f(...b);if(d.Cb!==C)throw Error("Session mismatch");d.Kb?.flush();let V=C.errors;if(0<V.length){let F=await Promise.all(V);if(F=F.filter(re=>re),0<F.length)throw Error(F.join(`\n`))}return k}finally{d.Cb=null}};d._OrtCreateSession=n(d._OrtCreateSession,()=>d._OrtCreateSession,f=>d._OrtCreateSession=f),d._OrtRun=l(n(d._OrtRun,()=>d._OrtRun,f=>d._OrtRun=f)),d._OrtRunWithBinding=l(n(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,f=>d._OrtRunWithBinding=f)),d._OrtBindInput=n(d._OrtBindInput,()=>d._OrtBindInput,f=>d._OrtBindInput=f),v=void 0};d.jsepInit=(n,l)=>{if(v?.(),n==="webgpu"){[d.Kb,d.Wb,d.$b,d.Lb,d.Zb,d.ob,d.ac,d.cc,d.Xb,d.Yb,d.bc]=l;let f=d.Kb;d.jsepRegisterBuffer=(b,C,k,V)=>f.registerBuffer(b,C,k,V),d.jsepGetBuffer=b=>f.getBuffer(b),d.jsepCreateDownloader=(b,C,k)=>f.createDownloader(b,C,k),d.jsepOnReleaseSession=b=>{f.onReleaseSession(b)},d.jsepOnRunStart=b=>f.onRunStart(b)}};var S=Object.assign({},d),I="./this.program",A=(n,l)=>{throw l},x=typeof window=="object",E=typeof importScripts=="function",P=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",O=d.ENVIRONMENT_IS_PTHREAD||!1,R="";function H(n){return d.locateFile?d.locateFile(n,R):R+n}var N,K,Q;if(P){var he=(uo(),wr(so)),W=(co(),wr(lo));R=E?W.dirname(R)+"/":__dirname+"/",N=(n,l)=>(n=Vt(n)?new URL(n):W.normalize(n),he.readFileSync(n,l?void 0:"utf8")),Q=n=>(n=N(n,!0),n.buffer||(n=new Uint8Array(n)),n),K=(n,l,f,b=!0)=>{n=Vt(n)?new URL(n):W.normalize(n),he.readFile(n,b?void 0:"utf8",(C,k)=>{C?f(C):l(b?k.buffer:k)})},!d.thisProgram&&1<process.argv.length&&(I=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),A=(n,l)=>{throw process.exitCode=n,l},global.Worker=Pi().Worker}else(x||E)&&(E?R=self.location.href:typeof document<"u"&&document.currentScript&&(R=document.currentScript.src),typeof e<"u"&&e&&(R=e),R.startsWith("blob:")?R="":R=R.substr(0,R.replace(/[?#].*/,"").lastIndexOf("/")+1),P||(N=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.send(null),l.responseText},E&&(Q=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.responseType="arraybuffer",l.send(null),new Uint8Array(l.response)}),K=(n,l,f)=>{var b=new XMLHttpRequest;b.open("GET",n,!0),b.responseType="arraybuffer",b.onload=()=>{b.status==200||b.status==0&&b.response?l(b.response):f()},b.onerror=f,b.send(null)}));P&&typeof performance>"u"&&(global.performance=ki().performance);var se=console.log.bind(console),Ce=console.error.bind(console);P&&(se=(...n)=>he.writeSync(1,n.join(" ")+`\n`),Ce=(...n)=>he.writeSync(2,n.join(" ")+`\n`));var We=se,ee=Ce;Object.assign(d,S),S=null;var ae,Ae,me=!1,ie,ue,le,qe,G,ne,xe,Ke,De,Ge,Mt;function Ne(){var n=ae.buffer;d.HEAP8=ue=new Int8Array(n),d.HEAP16=qe=new Int16Array(n),d.HEAPU8=le=new Uint8Array(n),d.HEAPU16=G=new Uint16Array(n),d.HEAP32=ne=new Int32Array(n),d.HEAPU32=xe=new Uint32Array(n),d.HEAPF32=Ke=new Float32Array(n),d.HEAPF64=Mt=new Float64Array(n),d.HEAP64=De=new BigInt64Array(n),d.HEAPU64=Ge=new BigUint64Array(n)}var Ye=16777216;if(O)ae=d.wasmMemory;else if(d.wasmMemory)ae=d.wasmMemory;else if(ae=new WebAssembly.Memory({initial:Ye/65536,maximum:65536,shared:!0}),!(ae.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),P&&ee("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Ne(),Ye=ae.buffer.byteLength;var mt=[],Ot=[],qt=[],Ut=0,sr=null,jt=null;function xr(){if(Ut--,Ut==0&&(sr!==null&&(clearInterval(sr),sr=null),jt)){var n=jt;jt=null,n()}}function Kt(n){throw n="Aborted("+n+")",ee(n),me=!0,ie=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),w(n),n}var je=n=>n.startsWith("data:application/octet-stream;base64,"),Vt=n=>n.startsWith("file://"),at;at="ort-wasm-simd-threaded.wasm",je(at)||(at=H(at));function Cr(n){if(Q)return Q(n);throw"both async and sync fetching of the wasm failed"}function ft(n){if(x||E){if(typeof fetch=="function"&&!Vt(n))return fetch(n,{credentials:"same-origin"}).then(l=>{if(!l.ok)throw`failed to load wasm binary file at \'${n}\'`;return l.arrayBuffer()}).catch(()=>Cr(n));if(K)return new Promise((l,f)=>{K(n,b=>l(new Uint8Array(b)),f)})}return Promise.resolve().then(()=>Cr(n))}function ur(n,l,f){return ft(n).then(b=>WebAssembly.instantiate(b,l)).then(f,b=>{ee(`failed to asynchronously prepare wasm: ${b}`),Kt(b)})}function Ar(n,l){var f=at;return typeof WebAssembly.instantiateStreaming!="function"||je(f)||Vt(f)||P||typeof fetch!="function"?ur(f,n,l):fetch(f,{credentials:"same-origin"}).then(b=>WebAssembly.instantiateStreaming(b,n).then(l,function(C){return ee(`wasm streaming compile failed: ${C}`),ee("falling back to ArrayBuffer instantiation"),ur(f,n,l)}))}var Ir={826468:(n,l,f,b)=>{if(typeof d>"u"||!d.Db)return 1;if(n=He(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=d.Db.get(n),!n)return 2;if(l>>>=0,f>>>=0,b>>>=0,l+f>n.byteLength)return 3;try{return o().set(n.subarray(l,l+f),b>>>0),0}catch{return 4}},826969:()=>{d.Xb()},827e3:()=>{d.Yb()},827029:()=>{d.bc()},827054:n=>d.Wb(n),827087:n=>d.$b(n),827119:(n,l,f)=>{d.Lb(n,l,f,!0)},827158:(n,l,f)=>{d.Lb(n,l,f)},827191:n=>{d.ob("Abs",n,void 0)},827242:n=>{d.ob("Neg",n,void 0)},827293:n=>{d.ob("Floor",n,void 0)},827346:n=>{d.ob("Ceil",n,void 0)},827398:n=>{d.ob("Reciprocal",n,void 0)},827456:n=>{d.ob("Sqrt",n,void 0)},827508:n=>{d.ob("Exp",n,void 0)},827559:n=>{d.ob("Erf",n,void 0)},827610:n=>{d.ob("Sigmoid",n,void 0)},827665:(n,l,f)=>{d.ob("HardSigmoid",n,{alpha:l,beta:f})},827744:n=>{d.ob("Log",n,void 0)},827795:n=>{d.ob("Sin",n,void 0)},827846:n=>{d.ob("Cos",n,void 0)},827897:n=>{d.ob("Tan",n,void 0)},827948:n=>{d.ob("Asin",n,void 0)},828e3:n=>{d.ob("Acos",n,void 0)},828052:n=>{d.ob("Atan",n,void 0)},828104:n=>{d.ob("Sinh",n,void 0)},828156:n=>{d.ob("Cosh",n,void 0)},828208:n=>{d.ob("Asinh",n,void 0)},828261:n=>{d.ob("Acosh",n,void 0)},828314:n=>{d.ob("Atanh",n,void 0)},828367:n=>{d.ob("Tanh",n,void 0)},828419:n=>{d.ob("Not",n,void 0)},828470:(n,l,f)=>{d.ob("Clip",n,{min:l,max:f})},828539:n=>{d.ob("Clip",n,void 0)},828591:(n,l)=>{d.ob("Elu",n,{alpha:l})},828649:n=>{d.ob("Relu",n,void 0)},828701:(n,l)=>{d.ob("LeakyRelu",n,{alpha:l})},828765:(n,l)=>{d.ob("ThresholdedRelu",n,{alpha:l})},828835:(n,l)=>{d.ob("Cast",n,{to:l})},828893:n=>{d.ob("Add",n,void 0)},828944:n=>{d.ob("Sub",n,void 0)},828995:n=>{d.ob("Mul",n,void 0)},829046:n=>{d.ob("Div",n,void 0)},829097:n=>{d.ob("Pow",n,void 0)},829148:n=>{d.ob("Equal",n,void 0)},829201:n=>{d.ob("Greater",n,void 0)},829256:n=>{d.ob("GreaterOrEqual",n,void 0)},829318:n=>{d.ob("Less",n,void 0)},829370:n=>{d.ob("LessOrEqual",n,void 0)},829429:(n,l,f,b,C)=>{d.ob("ReduceMean",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829588:(n,l,f,b,C)=>{d.ob("ReduceMax",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829746:(n,l,f,b,C)=>{d.ob("ReduceMin",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829904:(n,l,f,b,C)=>{d.ob("ReduceProd",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830063:(n,l,f,b,C)=>{d.ob("ReduceSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830221:(n,l,f,b,C)=>{d.ob("ReduceL1",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830378:(n,l,f,b,C)=>{d.ob("ReduceL2",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830535:(n,l,f,b,C)=>{d.ob("ReduceLogSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830696:(n,l,f,b,C)=>{d.ob("ReduceSumSquare",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830860:(n,l,f,b,C)=>{d.ob("ReduceLogSumExp",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},831024:n=>{d.ob("Where",n,void 0)},831077:(n,l,f)=>{d.ob("Transpose",n,{perm:l?Array.from(a().subarray(l>>>0,f>>>0)):[]})},831185:(n,l,f,b)=>{d.ob("DepthToSpace",n,{blocksize:l,mode:He(f),format:b?"NHWC":"NCHW"})},831318:(n,l,f,b)=>{d.ob("DepthToSpace",n,{blocksize:l,mode:He(f),format:b?"NHWC":"NCHW"})},831451:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we)=>{d.ob("ConvTranspose",n,{format:re?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernelShape:[C],pads:[k,V],strides:[F],wIsConst:()=>!!r()[J>>>0],outputPadding:ce?Array.from(a().subarray(ce>>>0,Re>>>0)):[],outputShape:ze?Array.from(a().subarray(ze>>>0,z>>>0)):[],activation:He(we)})},831852:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z)=>{d.ob("ConvTranspose",n,{format:F?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,ze>>>0)):[],activation:He(z)})},832417:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we)=>{d.ob("ConvTranspose",n,{format:re?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernelShape:[C],pads:[k,V],strides:[F],wIsConst:()=>!!r()[J>>>0],outputPadding:ce?Array.from(a().subarray(ce>>>0,Re>>>0)):[],outputShape:ze?Array.from(a().subarray(ze>>>0,z>>>0)):[],activation:He(we)})},832818:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z)=>{d.ob("ConvTranspose",n,{format:F?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,ze>>>0)):[],activation:He(z)})},833383:(n,l)=>{d.ob("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},833474:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("AveragePool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},833758:(n,l)=>{d.ob("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},833849:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("AveragePool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834133:(n,l)=>{d.ob("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},834220:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("MaxPool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834500:(n,l)=>{d.ob("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},834587:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("MaxPool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834867:(n,l,f,b,C)=>{d.ob("Gemm",n,{alpha:l,beta:f,transA:b,transB:C})},834971:n=>{d.ob("MatMul",n,void 0)},835025:(n,l,f,b)=>{d.ob("ArgMax",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},835133:(n,l,f,b)=>{d.ob("ArgMin",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},835241:(n,l)=>{d.ob("Softmax",n,{axis:l})},835304:(n,l)=>{d.ob("Concat",n,{axis:l})},835364:(n,l,f,b,C)=>{d.ob("Split",n,{axis:l,numOutputs:f,splitSizes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},835504:n=>{d.ob("Expand",n,void 0)},835558:(n,l)=>{d.ob("Gather",n,{axis:Number(l)})},835629:(n,l)=>{d.ob("GatherElements",n,{axis:Number(l)})},835708:(n,l,f,b,C,k,V,F,re,J,ce)=>{d.ob("Resize",n,{antialias:l,axes:f?Array.from(a().subarray(f>>>0,b>>>0)):[],coordinateTransformMode:He(C),cubicCoeffA:k,excludeOutside:V,extrapolationValue:F,keepAspectRatioPolicy:He(re),mode:He(J),nearestMode:He(ce)})},836054:(n,l,f,b,C,k,V)=>{d.ob("Slice",n,{starts:l?Array.from(a().subarray(l>>>0,f>>>0)):[],ends:b?Array.from(a().subarray(b>>>0,C>>>0)):[],axes:k?Array.from(a().subarray(k>>>0,V>>>0)):[]})},836270:n=>{d.ob("Tile",n,void 0)},836322:(n,l,f,b)=>{d.ob("LayerNormalization",n,{axis:l,epsilon:f,simplified:!!b})},836433:(n,l,f)=>{d.ob("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},836547:(n,l,f)=>{d.ob("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},836661:n=>{d.ob("Range",n,void 0)},836714:(n,l)=>{d.ob("Einsum",n,{equation:He(l)})},836795:(n,l,f,b,C)=>{d.ob("Pad",n,{mode:l,value:f,pads:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},836922:(n,l,f,b,C,k)=>{d.ob("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!C,trainingMode:!!b,format:k?"NHWC":"NCHW"})},837091:(n,l,f,b,C,k)=>{d.ob("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!C,trainingMode:!!b,format:k?"NHWC":"NCHW"})},837260:(n,l,f)=>{d.ob("CumSum",n,{exclusive:Number(l),reverse:Number(f)})},837357:(n,l,f,b,C,k,V,F,re)=>{d.ob("Attention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:k,qkvHiddenSizes:V?Array.from(a().subarray(Number(F)>>>0,Number(F)+V>>>0)):[],pastPresentShareBuffer:!!re})},837629:n=>{d.ob("BiasAdd",n,void 0)},837684:n=>{d.ob("BiasSplitGelu",n,void 0)},837745:n=>{d.ob("FastGelu",n,void 0)},837801:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze)=>{d.ob("Conv",n,{format:re?"NHWC":"NCHW",auto_pad:l,dilations:[f],group:b,kernel_shape:[C],pads:k?Array.from(a().subarray(k>>>0,V>>>0)):[],strides:[F],w_is_const:()=>!!r()[J>>>0],activation:He(ce),activation_params:Re?Array.from(p().subarray(Re>>>0,ze>>>0)):[]})},838171:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("Conv",n,{format:Re?"NHWC":"NCHW",auto_pad:l,dilations:[f,b],group:C,kernel_shape:[k,V],pads:F?Array.from(a().subarray(F>>>0,re>>>0)):[],strides:[J,ce],w_is_const:()=>!!r()[ze>>>0],activation:He(z),activation_params:we?Array.from(p().subarray(we>>>0,Pe>>>0)):[]})},838562:n=>{d.ob("Gelu",n,void 0)},838614:(n,l,f,b,C,k)=>{d.ob("MatMulNBits",n,{k:l,n:f,accuracyLevel:b,bits:C,blockSize:k})},838741:(n,l,f,b,C,k)=>{d.ob("MultiHeadAttention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:k})},838900:(n,l,f,b,C)=>{d.ob("RotaryEmbedding",n,{interleaved:!!l,numHeads:f,rotaryEmbeddingDim:b,scale:C})},839039:(n,l,f)=>{d.ob("SkipLayerNormalization",n,{epsilon:l,simplified:!!f})},839141:(n,l,f)=>{d.ob("SkipLayerNormalization",n,{epsilon:l,simplified:!!f})},839243:(n,l,f,b)=>{d.ob("LayerNormalization",n,{axis:l,epsilon:f,simplified:!!b})},839354:n=>{d.ac(n)},839388:(n,l)=>d.cc(n,l,d.Cb.ec,d.Cb.errors)};function st(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var Tr=n=>{n.terminate(),n.onmessage=()=>{}},ht=n=>{ge.xb.length==0&&(lr(),ge.Mb(ge.xb[0]));var l=ge.xb.pop();if(!l)return 6;ge.yb.push(l),ge.ub[n.wb]=l,l.wb=n.wb;var f={cmd:"run",start_routine:n.fc,arg:n.Rb,pthread_ptr:n.wb};return P&&l.unref(),l.postMessage(f,n.mc),0},bt=0,Er=n=>{var l=io();return n=n(),fn(l),n},Te=(n,l,...f)=>Er(()=>{for(var b=2*f.length,C=oo(8*b),k=C>>>3,V=0;V<f.length;V++){var F=f[V];typeof F=="bigint"?(De[k+2*V]=1n,De[k+2*V+1]=F):(De[k+2*V]=0n,h()[k+2*V+1>>>0]=F)}return gi(n,0,b,C,l)});function dr(n){if(O)return Te(0,1,n);ie=n,0<bt||(ge.hc(),d.onExit?.(n),me=!0),A(n,new st(n))}var Xe=n=>{if(ie=n,O)throw jr(n),"unwind";dr(n)};function ut(){for(var n=d.numThreads;n--;)lr();mt.unshift(()=>{Ut++,Fn(()=>xr())})}function lr(){var n=H("ort-wasm-simd-threaded.worker.js");n=new Worker(n),ge.xb.push(n)}function Fn(n){O?n():Promise.all(ge.xb.map(ge.Mb)).then(n)}var ge={xb:[],yb:[],Qb:[],ub:{},Gb(){O?(ge.receiveObjectTransfer=ge.dc,ge.threadInitTLS=ge.Pb,ge.setExitStatus=ge.Ob):ut()},Ob:n=>ie=n,pc:["$terminateWorker"],hc:()=>{for(var n of ge.yb)Tr(n);for(n of ge.xb)Tr(n);ge.xb=[],ge.yb=[],ge.ub=[]},Nb:n=>{var l=n.wb;delete ge.ub[l],ge.xb.push(n),ge.yb.splice(ge.yb.indexOf(n),1),n.wb=0,ro(l)},dc(){},Pb(){ge.Qb.forEach(n=>n())},Mb:n=>new Promise(l=>{n.onmessage=k=>{k=k.data;var V=k.cmd;if(k.targetThread&&k.targetThread!=pn()){var F=ge.ub[k.targetThread];F?F.postMessage(k,k.transferList):ee(`Internal error! Worker sent a message "${V}" to target pthread ${k.targetThread}, but that thread no longer exists!`)}else V==="checkMailbox"?rt():V==="spawnThread"?ht(k):V==="cleanupThread"?ge.Nb(ge.ub[k.thread]):V==="killThread"?(k=k.thread,V=ge.ub[k],delete ge.ub[k],Tr(V),ro(k),ge.yb.splice(ge.yb.indexOf(V),1),V.wb=0):V==="cancelThread"?ge.ub[k.thread].postMessage({cmd:"cancel"}):V==="loaded"?(n.loaded=!0,P&&!n.wb&&n.unref(),l(n)):V==="alert"?alert(`Thread ${k.threadId}: ${k.text}`):k.target==="setimmediate"?n.postMessage(k):V==="callHandler"?d[k.handler](...k.args):V&&ee(`worker sent an unknown command ${V}`)},n.onerror=k=>{throw ee(`worker sent an error! ${k.filename}:${k.lineno}: ${k.message}`),k},P&&(n.on("message",k=>n.onmessage({data:k})),n.on("error",k=>n.onerror(k)));var f=[],b=["onExit"],C;for(C of b)d.hasOwnProperty(C)&&f.push(C);n.postMessage({cmd:"load",handlers:f,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:ae,wasmModule:Ae})})};d.PThread=ge;var Yt=n=>{for(;0<n.length;)n.shift()(d)};d.establishStackSpace=()=>{var n=pn(),l=c()[n+52>>>2>>>0];n=c()[n+56>>>2>>>0],bi(l,l-n),fn(l)};function jr(n){if(O)return Te(1,0,n);Xe(n)}d.invokeEntryPoint=(n,l)=>{bt=0,n=wi(n,l),0<bt?ge.Ob(n):no(n)};class qn{constructor(l){this.Ib=l-24}Gb(l,f){c()[this.Ib+16>>>2>>>0]=0,c()[this.Ib+4>>>2>>>0]=l,c()[this.Ib+8>>>2>>>0]=f}}var Kr=0,jn=0;function Yr(n,l,f,b){return O?Te(2,1,n,l,f,b):Zr(n,l,f,b)}function Zr(n,l,f,b){if(n>>>=0,l>>>=0,f>>>=0,b>>>=0,typeof SharedArrayBuffer>"u")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var C=[];return O&&C.length===0?Yr(n,l,f,b):(n={fc:f,wb:n,Rb:b,mc:C},O?(n.oc="spawnThread",postMessage(n,C),0):ht(n))}var cr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Pr=(n,l,f)=>{l>>>=0;var b=l+f;for(f=l;n[f]&&!(f>=b);)++f;if(16<f-l&&n.buffer&&cr)return cr.decode(n.buffer instanceof SharedArrayBuffer?n.slice(l,f):n.subarray(l,f));for(b="";l<f;){var C=n[l++];if(C&128){var k=n[l++]&63;if((C&224)==192)b+=String.fromCharCode((C&31)<<6|k);else{var V=n[l++]&63;C=(C&240)==224?(C&15)<<12|k<<6|V:(C&7)<<18|k<<12|V<<6|n[l++]&63,65536>C?b+=String.fromCharCode(C):(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023))}}else b+=String.fromCharCode(C)}return b},He=(n,l)=>(n>>>=0)?Pr(o(),n,l):"";function Xr(n,l,f){return O?Te(3,1,n,l,f):0}function Qr(n,l){if(O)return Te(4,1,n,l)}var gt=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);127>=b?l++:2047>=b?l+=2:55296<=b&&57343>=b?(l+=4,++f):l+=3}return l},dt=(n,l,f,b)=>{if(f>>>=0,!(0<b))return 0;var C=f;b=f+b-1;for(var k=0;k<n.length;++k){var V=n.charCodeAt(k);if(55296<=V&&57343>=V){var F=n.charCodeAt(++k);V=65536+((V&1023)<<10)|F&1023}if(127>=V){if(f>=b)break;l[f++>>>0]=V}else{if(2047>=V){if(f+1>=b)break;l[f++>>>0]=192|V>>6}else{if(65535>=V){if(f+2>=b)break;l[f++>>>0]=224|V>>12}else{if(f+3>=b)break;l[f++>>>0]=240|V>>18,l[f++>>>0]=128|V>>12&63}l[f++>>>0]=128|V>>6&63}l[f++>>>0]=128|V&63}}return l[f>>>0]=0,f-C},Rt=(n,l,f)=>dt(n,o(),l,f);function Zt(n,l){if(O)return Te(5,1,n,l)}function kr(n,l,f){if(O)return Te(6,1,n,l,f)}function Or(n,l,f){return O?Te(7,1,n,l,f):0}function Jr(n,l){if(O)return Te(8,1,n,l)}function pr(n,l,f){if(O)return Te(9,1,n,l,f)}function en(n,l,f,b){if(O)return Te(10,1,n,l,f,b)}function tn(n,l,f,b){if(O)return Te(11,1,n,l,f,b)}function rn(n,l,f,b){if(O)return Te(12,1,n,l,f,b)}function nn(n){if(O)return Te(13,1,n)}function Rr(n,l){if(O)return Te(14,1,n,l)}function Xt(n,l,f){if(O)return Te(15,1,n,l,f)}var on,nt=n=>{for(var l="";o()[n>>>0];)l+=on[o()[n++>>>0]];return l},mr={},Br={},Kn={},wt;function Yn(n,l,f={}){var b=l.name;if(!n)throw new wt(`type "${b}" must have a positive integer typeid pointer`);if(Br.hasOwnProperty(n)){if(f.Ub)return;throw new wt(`Cannot register type \'${b}\' twice`)}Br[n]=l,delete Kn[n],mr.hasOwnProperty(n)&&(l=mr[n],delete mr[n],l.forEach(C=>C()))}function Je(n,l,f={}){if(!("argPackAdvance"in l))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Yn(n,l,f)}var Dr=(n,l,f)=>{switch(l){case 1:return f?b=>r()[b>>>0]:b=>o()[b>>>0];case 2:return f?b=>i()[b>>>1>>>0]:b=>u()[b>>>1>>>0];case 4:return f?b=>a()[b>>>2>>>0]:b=>c()[b>>>2>>>0];case 8:return f?b=>De[b>>>3]:b=>Ge[b>>>3];default:throw new TypeError(`invalid integer width (${l}): ${n}`)}},fr=[],lt=[];function hr(n){n>>>=0,9<n&&--lt[n+1]===0&&(lt[n]=void 0,fr.push(n))}var Qe=n=>{if(!n)throw new wt("Cannot use deleted val. handle = "+n);return lt[n]},ot=n=>{switch(n){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let l=fr.pop()||lt.length;return lt[l]=n,lt[l+1]=1,l}};function Qt(n){return this.fromWireType(c()[n>>>2>>>0])}var Zn={name:"emscripten::val",fromWireType:n=>{var l=Qe(n);return hr(n),l},toWireType:(n,l)=>ot(l),argPackAdvance:8,readValueFromPointer:Qt,Bb:null},an=(n,l)=>{switch(l){case 4:return function(f){return this.fromWireType(p()[f>>>2>>>0])};case 8:return function(f){return this.fromWireType(h()[f>>>3>>>0])};default:throw new TypeError(`invalid float width (${l}): ${n}`)}},zr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Xn=(n,l)=>{for(var f=n>>1,b=f+l/2;!(f>=b)&&u()[f>>>0];)++f;if(f<<=1,32<f-n&&zr)return zr.decode(o().slice(n,f));for(f="",b=0;!(b>=l/2);++b){var C=i()[n+2*b>>>1>>>0];if(C==0)break;f+=String.fromCharCode(C)}return f},sn=(n,l,f)=>{if(f??=2147483647,2>f)return 0;f-=2;var b=l;f=f<2*n.length?f/2:n.length;for(var C=0;C<f;++C){var k=n.charCodeAt(C);i()[l>>>1>>>0]=k,l+=2}return i()[l>>>1>>>0]=0,l-b},un=n=>2*n.length,gr=(n,l)=>{for(var f=0,b="";!(f>=l/4);){var C=a()[n+4*f>>>2>>>0];if(C==0)break;++f,65536<=C?(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023)):b+=String.fromCharCode(C)}return b},Qn=(n,l,f)=>{if(l>>>=0,f??=2147483647,4>f)return 0;var b=l;f=b+f-4;for(var C=0;C<n.length;++C){var k=n.charCodeAt(C);if(55296<=k&&57343>=k){var V=n.charCodeAt(++C);k=65536+((k&1023)<<10)|V&1023}if(a()[l>>>2>>>0]=k,l+=4,l+4>f)break}return a()[l>>>2>>>0]=0,l-b},pe=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);55296<=b&&57343>=b&&++f,l+=4}return l},Mr=n=>{if(!me)try{if(n(),!(0<bt))try{O?no(ie):Xe(ie)}catch(l){l instanceof st||l=="unwind"||A(1,l)}}catch(l){l instanceof st||l=="unwind"||A(1,l)}};function Wt(n){n>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(a(),n>>>2,n).value.then(rt),n+=128,Atomics.store(a(),n>>>2,1))}d.__emscripten_thread_mailbox_await=Wt;var rt=()=>{var n=pn();n&&(Wt(n),Mr(yi))};d.checkMailbox=rt;var yr=[],br=(n,l)=>{var f=Br[n];if(f===void 0)throw n=fi(n),f=nt(n),Ct(n),new wt(`${l} has unknown type ${f}`);return f},Ur=(n,l,f)=>{var b=[];return n=n.toWireType(b,f),b.length&&(c()[l>>>2>>>0]=ot(b)),n},Jt=n=>{try{n()}catch(l){Kt(l)}};function dn(){var n=oe,l={};for(let[f,b]of Object.entries(n))l[f]=typeof b=="function"?(...C)=>{Bt.push(f);try{return b(...C)}finally{me||(Bt.pop(),ct&&vt===1&&Bt.length===0&&(vt=0,bt+=1,Jt($i),typeof Fibers<"u"&&Fibers.rc()))}}:b;return l}var vt=0,ct=null,ln=0,Bt=[],Vr={},s={},m=0,g=null,$=[];function T(){return new Promise((n,l)=>{g={resolve:n,reject:l}})}function B(){var n=mn(65548),l=n+12;c()[n>>>2>>>0]=l,c()[n+4>>>2>>>0]=l+65536,l=Bt[0];var f=Vr[l];return f===void 0&&(f=m++,Vr[l]=f,s[f]=l),l=f,a()[n+8>>>2>>>0]=l,n}function L(){var n=a()[ct+8>>>2>>>0];return n=oe[s[n]],--bt,n()}function q(n){if(!me){if(vt===0){var l=!1,f=!1;n((b=0)=>{if(!me&&(ln=b,l=!0,f)){vt=2,Jt(()=>_i(ct)),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.resume(),b=!1;try{var C=L()}catch(F){C=F,b=!0}var k=!1;if(!ct){var V=g;V&&(g=null,(b?V.reject:V.resolve)(C),k=!0)}if(b&&!k)throw C}}),f=!0,l||(vt=1,ct=B(),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.pause(),Jt(()=>vi(ct)))}else vt===2?(vt=0,Jt(Si),Ct(ct),ct=null,$.forEach(Mr)):Kt(`invalid state: ${vt}`);return ln}}function te(n){return q(l=>{n().then(l)})}var X=[],de={},Ee=n=>{var l=de[n];return l===void 0?nt(n):l},Oe=()=>typeof globalThis=="object"?globalThis:Function("return this")(),D=n=>{var l=X.length;return X.push(n),l},be=(n,l)=>{for(var f=Array(n),b=0;b<n;++b)f[b]=br(c()[l+4*b>>>2>>>0],"parameter "+b);return f},Ie=(n,l)=>Object.defineProperty(l,"name",{value:n});function Dt(n){var l=Function;if(!(l instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof l} which is not a function`);var f=Ie(l.name||"unknownFunctionName",function(){});return f.prototype=l.prototype,f=new f,n=l.apply(f,n),n instanceof Object?n:f}var zt=n=>n%4===0&&(n%100!==0||n%400===0),Qo=[0,31,60,91,121,152,182,213,244,274,305,335],Jo=[0,31,59,90,120,151,181,212,243,273,304,334];function ei(n,l,f,b,C,k,V){return O?Te(16,1,n,l,f,b,C,k,V):-52}function ti(n,l,f,b,C,k){if(O)return Te(17,1,n,l,f,b,C,k)}var Jn=[],ri=(n,l)=>{Jn.length=0;for(var f;f=o()[n++>>>0];){var b=f!=105;b&=f!=112,l+=b&&l%8?4:0,Jn.push(f==112?c()[l>>>2>>>0]:f==106?De[l>>>3]:f==105?a()[l>>>2>>>0]:h()[l>>>3>>>0]),l+=b?8:4}return Jn},eo={},ni=()=>{if(!to){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:I||"./this.program"},l;for(l in eo)eo[l]===void 0?delete n[l]:n[l]=eo[l];var f=[];for(l in n)f.push(`${l}=${n[l]}`);to=f}return to},to;function oi(n,l){if(O)return Te(18,1,n,l);n>>>=0,l>>>=0;var f=0;return ni().forEach((b,C)=>{var k=l+f;for(C=c()[n+4*C>>>2>>>0]=k,k=0;k<b.length;++k)r()[C++>>>0]=b.charCodeAt(k);r()[C>>>0]=0,f+=b.length+1}),0}function ii(n,l){if(O)return Te(19,1,n,l);n>>>=0,l>>>=0;var f=ni();c()[n>>>2>>>0]=f.length;var b=0;return f.forEach(C=>b+=C.length+1),c()[l>>>2>>>0]=b,0}function ai(n){return O?Te(20,1,n):52}function si(n,l,f,b){return O?Te(21,1,n,l,f,b):52}function ui(n,l,f,b){return O?Te(22,1,n,l,f,b):70}var Xd=[null,[],[]];function di(n,l,f,b){if(O)return Te(23,1,n,l,f,b);l>>>=0,f>>>=0,b>>>=0;for(var C=0,k=0;k<f;k++){var V=c()[l>>>2>>>0],F=c()[l+4>>>2>>>0];l+=8;for(var re=0;re<F;re++){var J=o()[V+re>>>0],ce=Xd[n];J===0||J===10?((n===1?We:ee)(Pr(ce,0)),ce.length=0):ce.push(J)}C+=F}return c()[b>>>2>>>0]=C,0}var li=[31,29,31,30,31,30,31,31,30,31,30,31],ci=[31,28,31,30,31,30,31,31,30,31,30,31];function Qd(n){var l=Array(gt(n)+1);return dt(n,l,0,l.length),l}var Jd=(n,l)=>{r().set(n,l>>>0)};function pi(n,l,f,b){function C(z,we,Pe){for(z=typeof z=="number"?z.toString():z||"";z.length<we;)z=Pe[0]+z;return z}function k(z,we){return C(z,we,"0")}function V(z,we){function Pe(Ci){return 0>Ci?-1:0<Ci?1:0}var er;return(er=Pe(z.getFullYear()-we.getFullYear()))===0&&(er=Pe(z.getMonth()-we.getMonth()))===0&&(er=Pe(z.getDate()-we.getDate())),er}function F(z){switch(z.getDay()){case 0:return new Date(z.getFullYear()-1,11,29);case 1:return z;case 2:return new Date(z.getFullYear(),0,3);case 3:return new Date(z.getFullYear(),0,2);case 4:return new Date(z.getFullYear(),0,1);case 5:return new Date(z.getFullYear()-1,11,31);case 6:return new Date(z.getFullYear()-1,11,30)}}function re(z){var we=z.zb;for(z=new Date(new Date(z.Ab+1900,0,1).getTime());0<we;){var Pe=z.getMonth(),er=(zt(z.getFullYear())?li:ci)[Pe];if(we>er-z.getDate())we-=er-z.getDate()+1,z.setDate(1),11>Pe?z.setMonth(Pe+1):(z.setMonth(0),z.setFullYear(z.getFullYear()+1));else{z.setDate(z.getDate()+we);break}}return Pe=new Date(z.getFullYear()+1,0,4),we=F(new Date(z.getFullYear(),0,4)),Pe=F(Pe),0>=V(we,z)?0>=V(Pe,z)?z.getFullYear()+1:z.getFullYear():z.getFullYear()-1}n>>>=0,l>>>=0,f>>>=0,b>>>=0;var J=c()[b+40>>>2>>>0];b={kc:a()[b>>>2>>>0],jc:a()[b+4>>>2>>>0],Eb:a()[b+8>>>2>>>0],Jb:a()[b+12>>>2>>>0],Fb:a()[b+16>>>2>>>0],Ab:a()[b+20>>>2>>>0],vb:a()[b+24>>>2>>>0],zb:a()[b+28>>>2>>>0],qc:a()[b+32>>>2>>>0],ic:a()[b+36>>>2>>>0],lc:J?He(J):""},f=He(f),J={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ce in J)f=f.replace(new RegExp(ce,"g"),J[ce]);var Re="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ze="January February March April May June July August September October November December".split(" ");J={"%a":z=>Re[z.vb].substring(0,3),"%A":z=>Re[z.vb],"%b":z=>ze[z.Fb].substring(0,3),"%B":z=>ze[z.Fb],"%C":z=>k((z.Ab+1900)/100|0,2),"%d":z=>k(z.Jb,2),"%e":z=>C(z.Jb,2," "),"%g":z=>re(z).toString().substring(2),"%G":re,"%H":z=>k(z.Eb,2),"%I":z=>(z=z.Eb,z==0?z=12:12<z&&(z-=12),k(z,2)),"%j":z=>{for(var we=0,Pe=0;Pe<=z.Fb-1;we+=(zt(z.Ab+1900)?li:ci)[Pe++]);return k(z.Jb+we,3)},"%m":z=>k(z.Fb+1,2),"%M":z=>k(z.jc,2),"%n":()=>`\n`,"%p":z=>0<=z.Eb&&12>z.Eb?"AM":"PM","%S":z=>k(z.kc,2),"%t":()=>"	","%u":z=>z.vb||7,"%U":z=>k(Math.floor((z.zb+7-z.vb)/7),2),"%V":z=>{var we=Math.floor((z.zb+7-(z.vb+6)%7)/7);if(2>=(z.vb+371-z.zb-2)%7&&we++,we)we==53&&(Pe=(z.vb+371-z.zb)%7,Pe==4||Pe==3&&zt(z.Ab)||(we=1));else{we=52;var Pe=(z.vb+7-z.zb-1)%7;(Pe==4||Pe==5&&zt(z.Ab%400-1))&&we++}return k(we,2)},"%w":z=>z.vb,"%W":z=>k(Math.floor((z.zb+7-(z.vb+6)%7)/7),2),"%y":z=>(z.Ab+1900).toString().substring(2),"%Y":z=>z.Ab+1900,"%z":z=>{z=z.ic;var we=0<=z;return z=Math.abs(z)/60,(we?"+":"-")+("0000"+(z/60*100+z%60)).slice(-4)},"%Z":z=>z.lc,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(ce in J)f.includes(ce)&&(f=f.replace(new RegExp(ce,"g"),J[ce](b)));return f=f.replace(/\\0\\0/g,"%"),ce=Qd(f),ce.length>l?0:(Jd(ce,n),ce.length-1)}ge.Gb();for(var mi=Array(256),cn=0;256>cn;++cn)mi[cn]=String.fromCharCode(cn);on=mi,wt=d.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},d.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},lt.push(0,1,void 0,1,null,1,!0,1,!1,1),d.count_emval_handles=()=>lt.length/2-5-fr.length;var el=[dr,jr,Yr,Xr,Qr,Zt,kr,Or,Jr,pr,en,tn,rn,nn,Rr,Xt,ei,ti,oi,ii,ai,si,ui,di],tl={ua:function(n,l,f){return te(async()=>{await d.Zb(n,l,f)})},b:function(n,l,f){throw n>>>=0,new qn(n).Gb(l>>>0,f>>>0),Kr=n,jn++,Kr},ia:function(n){hi(n>>>0,!E,1,!x,131072,!1),ge.Pb()},G:function(n){n>>>=0,O?postMessage({cmd:"cleanupThread",thread:n}):ge.Nb(ge.ub[n])},_:Zr,B:Xr,pa:Qr,W:Zt,Y:kr,qa:Or,na:Jr,fa:pr,ma:en,K:tn,X:rn,U:nn,oa:Rr,V:Xt,E:function(n,l,f){n>>>=0,f>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:b=>b,toWireType:function(b,C){if(typeof C!="bigint"&&typeof C!="number")throw C===null?C="null":(b=typeof C,C=b==="object"||b==="array"||b==="function"?C.toString():""+C),new TypeError(`Cannot convert "${C}" to ${this.name}`);return typeof C=="number"&&(C=BigInt(C)),C},argPackAdvance:8,readValueFromPointer:Dr(l,f,l.indexOf("u")==-1),Bb:null})},O:function(n,l,f,b){n>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:function(C){return!!C},toWireType:function(C,k){return k?f:b},argPackAdvance:8,readValueFromPointer:function(C){return this.fromWireType(o()[C>>>0])},Bb:null})},N:function(n){return Je(n>>>0,Zn)},D:function(n,l,f){n>>>=0,f>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:b=>b,toWireType:(b,C)=>C,argPackAdvance:8,readValueFromPointer:an(l,f),Bb:null})},t:function(n,l,f,b,C){if(n>>>=0,f>>>=0,l=nt(l>>>0),C===-1&&(C=4294967295),C=F=>F,b===0){var k=32-8*f;C=F=>F<<k>>>k}var V=l.includes("unsigned")?function(F,re){return re>>>0}:function(F,re){return re};Je(n,{name:l,fromWireType:C,toWireType:V,argPackAdvance:8,readValueFromPointer:Dr(l,f,b!==0),Bb:null})},p:function(n,l,f){function b(k){var V=c()[k>>>2>>>0];return k=c()[k+4>>>2>>>0],new C(r().buffer,k,V)}n>>>=0;var C=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][l];f=nt(f>>>0),Je(n,{name:f,fromWireType:b,argPackAdvance:8,readValueFromPointer:b},{Ub:!0})},F:function(n,l){n>>>=0,l=nt(l>>>0);var f=l==="std::string";Je(n,{name:l,fromWireType:function(b){var C=c()[b>>>2>>>0],k=b+4;if(f)for(var V=k,F=0;F<=C;++F){var re=k+F;if(F==C||o()[re>>>0]==0){if(V=He(V,re-V),J===void 0)var J=V;else J+=String.fromCharCode(0),J+=V;V=re+1}}else{for(J=Array(C),F=0;F<C;++F)J[F]=String.fromCharCode(o()[k+F>>>0]);J=J.join("")}return Ct(b),J},toWireType:function(b,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var k=typeof C=="string";if(!(k||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new wt("Cannot pass non-string to std::string");var V=f&&k?gt(C):C.length,F=mn(4+V+1),re=F+4;if(c()[F>>>2>>>0]=V,f&&k)Rt(C,re,V+1);else if(k)for(k=0;k<V;++k){var J=C.charCodeAt(k);if(255<J)throw Ct(re),new wt("String has UTF-16 code units that do not fit in 8 bits");o()[re+k>>>0]=J}else for(k=0;k<V;++k)o()[re+k>>>0]=C[k];return b!==null&&b.push(Ct,F),F},argPackAdvance:8,readValueFromPointer:Qt,Bb(b){Ct(b)}})},A:function(n,l,f){if(n>>>=0,l>>>=0,f>>>=0,f=nt(f),l===2)var b=Xn,C=sn,k=un,V=F=>u()[F>>>1>>>0];else l===4&&(b=gr,C=Qn,k=pe,V=F=>c()[F>>>2>>>0]);Je(n,{name:f,fromWireType:F=>{for(var re=c()[F>>>2>>>0],J,ce=F+4,Re=0;Re<=re;++Re){var ze=F+4+Re*l;(Re==re||V(ze)==0)&&(ce=b(ce,ze-ce),J===void 0?J=ce:(J+=String.fromCharCode(0),J+=ce),ce=ze+l)}return Ct(F),J},toWireType:(F,re)=>{if(typeof re!="string")throw new wt(`Cannot pass non-string to C++ string type ${f}`);var J=k(re),ce=mn(4+J+l);return c()[ce>>>2>>>0]=J/l,C(re,ce+4,J+l),F!==null&&F.push(Ct,ce),ce},argPackAdvance:8,readValueFromPointer:Qt,Bb(F){Ct(F)}})},P:function(n,l){n>>>=0,l=nt(l>>>0),Je(n,{Vb:!0,name:l,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ta:()=>1,S:function(n,l){n>>>=0,n==l>>>0?setTimeout(rt):O?postMessage({targetThread:n,cmd:"checkMailbox"}):(n=ge.ub[n])&&n.postMessage({cmd:"checkMailbox"})},$:function(n,l,f,b,C){l>>>=0,f>>>=0,b/=2,yr.length=b,C=C>>>0>>>3;for(var k=0;k<b;k++)yr[k]=De[C+2*k]?De[C+2*k+1]:h()[C+2*k+1>>>0];return n=l?Ir[l]:el[n],ge.Sb=f,f=n(...yr),ge.Sb=0,f},ha:Wt,sa:function(n){P&&ge.ub[n>>>0].ref()},w:function(n,l,f){return l>>>=0,f>>>=0,n=Qe(n>>>0),l=br(l,"emval::as"),Ur(l,f,n)},z:function(n){return n>>>=0,te(()=>(n=Qe(n),n.then(ot)))},o:function(n,l,f,b){return f>>>=0,b>>>=0,n=X[n>>>0],l=Qe(l>>>0),n(null,l,f,b)},k:function(n,l,f,b,C){return f>>>=0,b>>>=0,C>>>=0,n=X[n>>>0],l=Qe(l>>>0),f=Ee(f),n(l,l[f],b,C)},c:hr,y:function(n,l){return l>>>=0,n=Qe(n>>>0),l=Qe(l),n==l},n:function(n){return n>>>=0,n===0?ot(Oe()):(n=Ee(n),ot(Oe()[n]))},j:function(n,l,f){l=be(n,l>>>0);var b=l.shift();n--;var C=`return function (obj, func, destructorsRef, args) {\n`,k=0,V=[];f===0&&V.push("obj");for(var F=["retType"],re=[b],J=0;J<n;++J)V.push("arg"+J),F.push("argType"+J),re.push(l[J]),C+=`  var arg${J} = argType${J}.readValueFromPointer(args${k?"+"+k:""});\n`,k+=l[J].argPackAdvance;return C+=`  var rv = ${f===1?"new func":"func.call"}(${V.join(", ")});\n`,b.Vb||(F.push("emval_returnValue"),re.push(Ur),C+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),F.push(C+`};\n`),n=Dt(F)(...re),f=`methodCaller<(${l.map(ce=>ce.name).join(", ")}) => ${b.name}>`,D(Ie(f,n))},s:function(n,l){return l>>>=0,n=Qe(n>>>0),l=Qe(l),ot(n[l])},d:function(n){n>>>=0,9<n&&(lt[n+1]+=1)},v:function(){return ot([])},m:function(n){n=Qe(n>>>0);for(var l=Array(n.length),f=0;f<n.length;f++)l[f]=n[f];return ot(l)},g:function(n){return ot(Ee(n>>>0))},l:function(){return ot({})},i:function(n){n>>>=0;for(var l=Qe(n);l.length;){var f=l.pop();l.pop()(f)}hr(n)},h:function(n,l,f){l>>>=0,f>>>=0,n=Qe(n>>>0),l=Qe(l),f=Qe(f),n[l]=f},e:function(n,l){return l>>>=0,n=br(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(l),ot(n)},ca:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getUTCSeconds(),a()[l+4>>>2>>>0]=n.getUTCMinutes(),a()[l+8>>>2>>>0]=n.getUTCHours(),a()[l+12>>>2>>>0]=n.getUTCDate(),a()[l+16>>>2>>>0]=n.getUTCMonth(),a()[l+20>>>2>>>0]=n.getUTCFullYear()-1900,a()[l+24>>>2>>>0]=n.getUTCDay(),n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[l+28>>>2>>>0]=n},da:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getSeconds(),a()[l+4>>>2>>>0]=n.getMinutes(),a()[l+8>>>2>>>0]=n.getHours(),a()[l+12>>>2>>>0]=n.getDate(),a()[l+16>>>2>>>0]=n.getMonth(),a()[l+20>>>2>>>0]=n.getFullYear()-1900,a()[l+24>>>2>>>0]=n.getDay();var f=(zt(n.getFullYear())?Qo:Jo)[n.getMonth()]+n.getDate()-1|0;a()[l+28>>>2>>>0]=f,a()[l+36>>>2>>>0]=-(60*n.getTimezoneOffset()),f=new Date(n.getFullYear(),6,1).getTimezoneOffset();var b=new Date(n.getFullYear(),0,1).getTimezoneOffset();n=(f!=b&&n.getTimezoneOffset()==Math.min(b,f))|0,a()[l+32>>>2>>>0]=n},ea:function(n){n>>>=0;var l=new Date(a()[n+20>>>2>>>0]+1900,a()[n+16>>>2>>>0],a()[n+12>>>2>>>0],a()[n+8>>>2>>>0],a()[n+4>>>2>>>0],a()[n>>>2>>>0],0),f=a()[n+32>>>2>>>0],b=l.getTimezoneOffset(),C=new Date(l.getFullYear(),6,1).getTimezoneOffset(),k=new Date(l.getFullYear(),0,1).getTimezoneOffset(),V=Math.min(k,C);return 0>f?a()[n+32>>>2>>>0]=+(C!=k&&V==b):0<f!=(V==b)&&(C=Math.max(k,C),l.setTime(l.getTime()+6e4*((0<f?V:C)-b))),a()[n+24>>>2>>>0]=l.getDay(),f=(zt(l.getFullYear())?Qo:Jo)[l.getMonth()]+l.getDate()-1|0,a()[n+28>>>2>>>0]=f,a()[n>>>2>>>0]=l.getSeconds(),a()[n+4>>>2>>>0]=l.getMinutes(),a()[n+8>>>2>>>0]=l.getHours(),a()[n+12>>>2>>>0]=l.getDate(),a()[n+16>>>2>>>0]=l.getMonth(),a()[n+20>>>2>>>0]=l.getYear(),n=l.getTime(),BigInt(isNaN(n)?-1:n/1e3)},aa:ei,ba:ti,R:function(n,l,f,b){n>>>=0,l>>>=0,f>>>=0,b>>>=0;var C=new Date().getFullYear(),k=new Date(C,0,1),V=new Date(C,6,1);C=k.getTimezoneOffset();var F=V.getTimezoneOffset(),re=Math.max(C,F);c()[n>>>2>>>0]=60*re,a()[l>>>2>>>0]=+(C!=F),n=J=>J.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],k=n(k),V=n(V),F<C?(Rt(k,f,17),Rt(V,b,17)):(Rt(k,b,17),Rt(V,f,17))},q:()=>{Kt("")},f:function(n,l,f){return n>>>=0,l=ri(l>>>0,f>>>0),Ir[n](...l)},M:function(n,l,f){return n>>>=0,l=ri(l>>>0,f>>>0),Ir[n](...l)},H:()=>{},L:()=>Date.now(),ra:()=>{throw bt+=1,"unwind"},T:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>P?(Ri(),wr(Oi)).cpus().length:navigator.hardwareConcurrency,Q:function(n){n>>>=0;var l=o().length;if(n<=l||4294901760<n)return!1;for(var f=1;4>=f;f*=2){var b=l*(1+.2/f);b=Math.min(b,n+100663296);var C=Math;b=Math.max(n,b);e:{C=(C.min.call(C,4294901760,b+(65536-b%65536)%65536)-ae.buffer.byteLength+65535)/65536;try{ae.grow(C),Ne();var k=1;break e}catch{}k=void 0}if(k)return!0}return!1},ja:oi,la:ii,Z:Xe,C:ai,J:si,ga:ui,I:di,a:ae||d.wasmMemory,ka:pi,r:function(n,l,f,b){return pi(n>>>0,l>>>0,f>>>0,b>>>0)}},oe=function(){function n(f,b){return oe=f.exports,oe=dn(),oe=rl(),ge.Qb.push(oe.cb),Ot.unshift(oe.va),Ae=b,xr(),oe}var l={a:tl};if(Ut++,d.instantiateWasm)try{return d.instantiateWasm(l,n)}catch(f){ee(`Module.instantiateWasm callback failed with error: ${f}`),w(f)}return Ar(l,function(f){n(f.instance,f.module)}).catch(w),{}}(),fi=n=>(fi=oe.wa)(n);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=oe.xa)(),d._OrtInit=(n,l)=>(d._OrtInit=oe.ya)(n,l),d._OrtGetLastError=(n,l)=>(d._OrtGetLastError=oe.za)(n,l),d._OrtCreateSessionOptions=(n,l,f,b,C,k,V,F,re,J)=>(d._OrtCreateSessionOptions=oe.Aa)(n,l,f,b,C,k,V,F,re,J),d._OrtAppendExecutionProvider=(n,l)=>(d._OrtAppendExecutionProvider=oe.Ba)(n,l),d._OrtAddFreeDimensionOverride=(n,l,f)=>(d._OrtAddFreeDimensionOverride=oe.Ca)(n,l,f),d._OrtAddSessionConfigEntry=(n,l,f)=>(d._OrtAddSessionConfigEntry=oe.Da)(n,l,f),d._OrtReleaseSessionOptions=n=>(d._OrtReleaseSessionOptions=oe.Ea)(n),d._OrtCreateSession=(n,l,f)=>(d._OrtCreateSession=oe.Fa)(n,l,f),d._OrtReleaseSession=n=>(d._OrtReleaseSession=oe.Ga)(n),d._OrtGetInputOutputCount=(n,l,f)=>(d._OrtGetInputOutputCount=oe.Ha)(n,l,f),d._OrtGetInputName=(n,l)=>(d._OrtGetInputName=oe.Ia)(n,l),d._OrtGetOutputName=(n,l)=>(d._OrtGetOutputName=oe.Ja)(n,l),d._OrtFree=n=>(d._OrtFree=oe.Ka)(n),d._OrtCreateTensor=(n,l,f,b,C,k)=>(d._OrtCreateTensor=oe.La)(n,l,f,b,C,k),d._OrtGetTensorData=(n,l,f,b,C)=>(d._OrtGetTensorData=oe.Ma)(n,l,f,b,C),d._OrtReleaseTensor=n=>(d._OrtReleaseTensor=oe.Na)(n),d._OrtCreateRunOptions=(n,l,f,b)=>(d._OrtCreateRunOptions=oe.Oa)(n,l,f,b),d._OrtAddRunConfigEntry=(n,l,f)=>(d._OrtAddRunConfigEntry=oe.Pa)(n,l,f),d._OrtReleaseRunOptions=n=>(d._OrtReleaseRunOptions=oe.Qa)(n),d._OrtCreateBinding=n=>(d._OrtCreateBinding=oe.Ra)(n),d._OrtBindInput=(n,l,f)=>(d._OrtBindInput=oe.Sa)(n,l,f),d._OrtBindOutput=(n,l,f,b)=>(d._OrtBindOutput=oe.Ta)(n,l,f,b),d._OrtClearBoundOutputs=n=>(d._OrtClearBoundOutputs=oe.Ua)(n),d._OrtReleaseBinding=n=>(d._OrtReleaseBinding=oe.Va)(n),d._OrtRunWithBinding=(n,l,f,b,C)=>(d._OrtRunWithBinding=oe.Wa)(n,l,f,b,C),d._OrtRun=(n,l,f,b,C,k,V,F)=>(d._OrtRun=oe.Xa)(n,l,f,b,C,k,V,F),d._OrtEndProfiling=n=>(d._OrtEndProfiling=oe.Ya)(n),d._JsepOutput=(n,l,f)=>(d._JsepOutput=oe.Za)(n,l,f),d._JsepGetNodeName=n=>(d._JsepGetNodeName=oe._a)(n);var pn=d._pthread_self=()=>(pn=d._pthread_self=oe.$a)(),mn=d._malloc=n=>(mn=d._malloc=oe.ab)(n),Ct=d._free=n=>(Ct=d._free=oe.bb)(n);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=oe.cb)();var hi=d.__emscripten_thread_init=(n,l,f,b,C,k)=>(hi=d.__emscripten_thread_init=oe.eb)(n,l,f,b,C,k);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=oe.fb)();var gi=(n,l,f,b,C)=>(gi=oe.gb)(n,l,f,b,C),ro=n=>(ro=oe.hb)(n),no=d.__emscripten_thread_exit=n=>(no=d.__emscripten_thread_exit=oe.ib)(n),yi=()=>(yi=oe.jb)(),bi=(n,l)=>(bi=oe.kb)(n,l),fn=n=>(fn=oe.lb)(n),oo=n=>(oo=oe.mb)(n),io=()=>(io=oe.nb)(),wi=d.dynCall_ii=(n,l)=>(wi=d.dynCall_ii=oe.pb)(n,l),vi=n=>(vi=oe.qb)(n),$i=()=>($i=oe.rb)(),_i=n=>(_i=oe.sb)(n),Si=()=>(Si=oe.tb)();d.___start_em_js=839500,d.___stop_em_js=839661;function rl(){var n=oe;n=Object.assign({},n);var l=b=>C=>b(C)>>>0,f=b=>()=>b()>>>0;return n.wa=l(n.wa),n.$a=f(n.$a),n.ab=l(n.ab),n.emscripten_main_runtime_thread_id=f(n.emscripten_main_runtime_thread_id),n.mb=l(n.mb),n.nb=f(n.nb),n}d.wasmMemory=ae,d.stackSave=()=>io(),d.stackRestore=n=>fn(n),d.stackAlloc=n=>oo(n),d.keepRuntimeAlive=()=>0<bt,d.UTF8ToString=He,d.stringToUTF8=Rt,d.lengthBytesUTF8=gt,d.ExitStatus=st,d.PThread=ge;var hn;jt=function n(){hn||xi(),hn||(jt=n)};function xi(){if(!(0<Ut))if(O)y(d),O||Yt(Ot),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)mt.unshift(d.preRun.shift());Yt(mt),0<Ut||hn||(hn=!0,d.calledRun=!0,me||(O||Yt(Ot),y(d),O||Yt(qt)))}}return xi(),_}})();typeof Di=="object"&&typeof mo=="object"?mo.exports=Bi:typeof define=="function"&&define.amd&&define([],()=>Bi)});var Mi=Wr((gm,cl)=>{cl.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(...e){var a=e.join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,a+`\\n`);return}console.error(a)}function threadAlert(...e){var a=e.join(" ");postMessage({cmd:"alert",text:a,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,a)=>{var r=Module.wasmModule;Module.wasmModule=null;var t=new WebAssembly.Instance(r,e);return a(t)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let r=[];self.onmessage=t=>r.push(t),self.startWorker=t=>{Module=t,postMessage({cmd:"loaded"});for(let s of r)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const t of e.data.handlers)Module[t]=(...s)=>{postMessage({cmd:"callHandler",handler:t,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var a=URL.createObjectURL(e.data.urlOrBlob);importScripts(a),URL.revokeObjectURL(a)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(r){if(r!="unwind")throw r}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(r){throw Module.__emscripten_thread_crashed?.(),r}}self.onmessage=handleMessage;\\n\'});var go,Nt,tr,bn,Gr,Hi,yo,ye=Y(()=>{"use strict";go=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Nt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},tr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],bn=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Gr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Hi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",yo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var wn=Y(()=>{"use strict"});var Fi=Y(()=>{"use strict";wn()});var qi,ji=Y(()=>{"use strict";qi="1.18.0-dev.20240424-218b6b0a73"});var Ki,pt,bo=Y(()=>{"use strict";ji();Ki="warning",pt={wasm:{},webgl:{},webgpu:{},versions:{common:qi},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ki=e}},get logLevel(){return Ki}};Object.defineProperty(pt,"logLevel",{enumerable:!0})});var vr,Yi=Y(()=>{"use strict";bo();vr=pt});var Zi=Y(()=>{"use strict"});var Xi=Y(()=>{"use strict";vn()});var Ji=Y(()=>{"use strict"});var ea=Y(()=>{"use strict";vn()});var vn=Y(()=>{"use strict";Zi();Xi();Ji();ea()});var $n=Y(()=>{"use strict";vn()});var wo,ta,rr,Gt,vo=Y(()=>{"use strict";bo();wo=(e,t)=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||console.timeStamp(`${e}::ORT::${t}`)},ta=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let i=0;i<r.length;i++){if(o&&!r[i].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(u+=`::${t}`),wo("CPU",u);return}r[i].includes("TRACE_FUNC")&&(o=!0)}},rr=e=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||ta("BEGIN",e)},Gt=e=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||ta("END",e)}});var ra=Y(()=>{"use strict";wn();$n();vo()});var na=Y(()=>{"use strict";ra()});var oa=Y(()=>{"use strict"});var ia=Y(()=>{"use strict"});var aa=Y(()=>{"use strict"});var sa=Y(()=>{"use strict"});var ua=Y(()=>{"use strict";wn();$n()});var da=Y(()=>{"use strict";ua()});var $r=Y(()=>{"use strict";Fi();Yi();na();$n();oa();ia();vo();aa();sa();da()});var _l,Sl,la,ca,pa,xl,Ve,Ht=Y(()=>{"use strict";ye();_l=["V","I","W","E","F"],Sl=(e,t)=>{console.log(`[${_l[e]},${new Date().toISOString()}]${t}`)},pa=(e,t)=>{la=e,ca=t},xl=(e,t)=>{let r=Gr(e),o=Gr(la);r>=o&&Sl(r,typeof t=="function"?t():t)},Ve=(...e)=>{ca&&xl(...e)}});var ma,fa=Y(()=>{"use strict";ye();ma=(e,t)=>new(bn(t))(e)});var _n=Y(()=>{"use strict"});var ha,$o,_o,Cl,Al,ga,xo,So,ba,wa=Y(()=>{"use strict";Ht();_n();ha=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),$o=[],_o=e=>Math.ceil(e/16)*16,Cl=e=>{for(let t=0;t<$o.length;t++){let r=$o[t];if(e<=r)return r}return Math.ceil(e/16)*16},Al=1,ga=()=>Al++,xo=async(e,t,r,o)=>{let i=_o(r),u=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,u,0,i),e.flush(),await u.mapAsync(GPUMapMode.READ);let c=u.getMappedRange();if(o){let p=o();return p.set(new Uint8Array(c,0,r)),p}else return new Uint8Array(c.slice(0,r))}finally{u.destroy()}},So=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map;for(let[r]of ha)$o.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[])}upload(t,r){let o=r.buffer,i=r.byteOffset,u=r.byteLength,a=_o(u),c=this.storageCache.get(t);if(!c)throw new Error("gpu data for uploading does not exist");if(c.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${u}`);let p=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),h=p.getMappedRange();new Uint8Array(h).set(new Uint8Array(o,i,u)),p.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(p,0,c.gpuData.buffer,0,a),Ve("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(p)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=_o(o.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(o.gpuData.buffer,0,i.gpuData.buffer,0,u)}registerExternalBuffer(t,r,o){let i;if(o){if(i=this.externalBuffers.get(o),i===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else i=ga();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ve("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=Cl(t),i,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||a){let h=(u?this.freeBuffers:this.freeUniformBuffers).get(o);h?h.length>0?i=h.pop():i=this.backend.device.createBuffer({size:o,usage:r}):i=this.backend.device.createBuffer({size:o,usage:r})}else i=this.backend.device.createBuffer({size:o,usage:r});let c={id:ga(),type:0,buffer:i};return this.storageCache.set(c.id,{gpuData:c,originalSize:t}),Ve("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${c.id}`),c}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ve("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await xo(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending){let r=ha.get(t.size);if((t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let o=this.freeBuffers.get(t.size)||[];r===void 0||o.length>=r?t.destroy():o.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let o=this.freeUniformBuffers.get(t.size)||[];r===void 0||o.length>=r?t.destroy():o.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},ba=(...e)=>new So(...e)});var Co,ve,Ze=Y(()=>{"use strict";Co=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},ve=e=>new Co(e)});var Ao,At,M,nr,Sn,xn,Cn,Se=Y(()=>{"use strict";Ao=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},At=class{static calcShape(t,r,o=!1){let i=t.length,u=r.length;if(i===0)return r;if(u===0)return t;let a=Math.max(t.length,r.length),c=new Array(a);if(o){if(i<2||u<2)return;let p=Ao.calcMatMulShape([t[i-2],t[i-1]],[r[u-2],r[u-1]]);if(p===void 0)return;[c[a-2],c[a-1]]=p}for(let p=o?3:1;p<=a;p++){let h=i-p<0?1:t[i-p],d=u-p<0?1:r[u-p];if(h!==d&&h>1&&d>1)return;let y=Math.max(h,d);if(h&&d)c[a-p]=Math.max(h,d);else{if(y>1)return;c[a-p]=0}}return c}static isValidBroadcast(t,r){let o=t.length,i=r.length;if(o>i)return!1;for(let u=1;u<=o;u++)if(t[o-u]!==1&&t[o-u]!==r[i-u])return!1;return!0}},M=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let o=t.length;if(o===0)return[];let i=new Array(o),u=o-1;for(;u>=0;){if(t[u]%r===0){i[u]=t[u]/r;break}if(r%t[u]!==0)throw new Error("cannot convert shape");i[u]=1,r/=t[u],u--}for(u--;u>=0;u--)i[u]=t[u];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let i=1;for(let u=r;u<o;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[u]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let i=r-3;i>=0;--i)o[i]=o[i+1]*t[i+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((i,u)=>i+r[u]+r[u+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,i)=>o===r[i])}},nr=class e{static adjustPoolAttributes(t,r,o,i,u,a){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=o.length?o.push(r[c+2]):o[c]=r[c+2];for(let c=0;c<o.length;c++)if(c<i.length){if(i[c]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let c=0;c<o.length;c++)if(c<u.length){if(u[c]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let c=0;c<o.length*2;c++)if(c<a.length){if(a[c]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let c=0;c<o.length;c++){if(o[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[c]>=o[c]||a[c+o.length]>=o[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,i,u,a,c){if(c){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let p=0;p<t.length-2;p++)e.adjustPadAndReturnShape(t[p+(a?1:2)],r[p],o[p],i[p],u,p,p+t.length-2,c)}}static computePoolOutputShape(t,r,o,i,u,a,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let p=[r[0],r[1]];return e.computeShapeHelper(t,r,p,o,i,u,a,c),p}static computeConvOutputShape(t,r,o,i,u,a,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let p=[t[0],r[0]];return e.computeShapeHelper(!1,t,p,o,i,u,a,c),p}static computeShapeHelper(t,r,o,i,u,a,c,p){if(t)for(let h=0;h<r.length-2;h++)o.push(1);else for(let h=0;h<r.length-2;h++)o.push(e.adjustPadAndReturnShape(r[h+2],i[h],u[h],a[h],c,h,h+r.length-2,p))}static adjustPadAndReturnShape(t,r,o,i,u,a,c,p){let h=o*(i-1)+1;if(p&&p!=="NOTSET")switch(p){case"VALID":return u[a]=0,u[c]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return u[a]=Math.floor(p==="SAME_LOWER"?(y+1)/2:y/2),u[c]=y-u[a],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[a]+u[c]-h)/r+1)}},Sn=class{static getShapeOfGemmResult(t,r,o,i,u){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let a,c,p;r?(a=t[1],c=t[0]):(a=t[0],c=t[1]);let h=-1;if(i?(p=o[0],h=1):(p=o[1],h=0),o[h]!==c)throw new Error("dimension mismatch");if(a<=0||p<=0||c<=0)throw new Error("invalid shape specified");if(u&&!At.isValidBroadcast(u,[a,p]))throw new Error("gemm: invalid bias shape for broadcast");return[a,p,c]}},xn=-34028234663852886e22,Cn=34028234663852886e22});var or,To,Be,et,Z,Me,Lt,ir,$t,fe,Eo,U,j,An,Io,va,_r,_e=Y(()=>{"use strict";ye();Se();or=64,To=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Be=(e,t=1)=>{let r=To(e,t);return typeof r=="string"?r:r[0]},et=(e,t=1)=>{let r=To(e,t);return typeof r=="string"?r:r[1]},Z=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:M.computeStrides(r)})}),t},Me=e=>e%4===0?4:e%2===0?2:1,Lt=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,ir=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,$t=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,fe=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Eo=(e,t,r,o,i)=>{let u=typeof r=="number",a=u?r:r.length,c=[...new Array(a).keys()],p=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,h=To(t,i),d=typeof h=="string"?h:h[1],y=typeof h=="string"?h:h[0],w={indices:p,value:d,storage:y,tensor:t},_=G=>typeof G=="string"?G:`${G}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},S=u?"uniforms.":"",I=`${S}${e}_shape`,A=`${S}${e}_strides`,x="";for(let G=0;G<a-1;G++)x+=`\n    let dim${G} = current / ${fe(A,G,a)};\n    let rest${G} = current % ${fe(A,G,a)};\n    indices[${G}] = dim${G};\n    current = rest${G};\n    `;x+=`indices[${a-1}] = current;`;let E=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${w.indices} {\n    var indices: ${w.indices};\n    var current = offset;\n    ${x}\n    return indices;\n  }`,P=G=>(v.offsetToIndices=!0,a<2?G:`o2i_${e}(${G})`),O=[];if(a>=2)for(let G=a-1;G>=0;G--)O.push(`${fe(A,G,a)} * (indices[${G}])`);let R=a<2?"":`\n  fn i2o_${e}(indices: ${w.indices}) -> u32 {\n    return ${O.join("+")};\n  }`,H=G=>(v.indicesToOffset=!0,a<2?G:`i2o_${e}(${G})`),N=(...G)=>a===0?"0u":`${w.indices}(${G.map(_).join(",")})`,K=(G,ne)=>a<2?`${G}`:`${fe(G,ne,a)}`,Q=(G,ne,xe)=>a<2?`${G}=${xe};`:`${fe(G,ne,a)}=${xe};`,he={},W=(G,ne)=>{v.broadcastedIndicesToOffset=!0;let xe=`${ne.name}broadcastedIndicesTo${e}Offset`;if(xe in he)return`${xe}(${G})`;let Ke=[];for(let De=a-1;De>=0;De--){let Ge=ne.indicesGet("outputIndices",De+ne.rank-a);Ke.push(`${K(A,De)} * (${Ge} % ${K(I,De)})`)}return he[xe]=`fn ${xe}(outputIndices: ${ne.type.indices}) -> u32 {\n             return ${Ke.length>0?Ke.join("+"):"0u"};\n           }`,`${xe}(${G})`},se=(G,ne)=>(()=>{if(w.storage===w.value)return`${e}[${G}]=${ne};`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`${e}[${G}]=vec2<u32>(u32(${ne}), select(0u, 0xFFFFFFFFu, ${ne} < 0));`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`${e}[${G}]=vec2<u32>(u32(${ne}), 0u);`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`${e}[${G}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ne}));`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),Ce=G=>(()=>{if(w.storage===w.value)return`${e}[${G}]`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`i32(${e}[${G}].x)`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`u32(${e}[${G}].x)`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${G}] & 0xFFu), bool(${e}[${G}] & 0xFF00u), bool(${e}[${G}] & 0xFF0000u), bool(${e}[${G}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),We=a<2?"":`\n  fn get_${e}ByIndices(indices: ${w.indices}) -> ${d} {\n    return ${Ce(`i2o_${e}(indices)`)};\n  }`,ee=a<2?"":(()=>{let G=c.map(xe=>`d${xe}: u32`).join(", "),ne=c.map(xe=>`d${xe}`).join(", ");return`\n  fn get_${e}(${G}) -> ${d} {\n    return get_${e}ByIndices(${N(ne)});\n  }`})(),ae=(...G)=>{if(G.length!==a)throw new Error(`indices length must be ${a}`);let ne=G.map(_).join(",");return a===0?Ce("0u"):a===1?Ce(ne[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}(${ne})`)},Ae=G=>a<2?Ce(G):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}ByIndices(${G})`),me=a<2?"":`\n  fn set_${e}ByIndices(indices: ${w.indices}, value: ${d}) {\n    ${se(`i2o_${e}(indices)`,"value")}\n  }`,ie=a<2?"":(()=>{let G=c.map(xe=>`d${xe}: u32`).join(", "),ne=c.map(xe=>`d${xe}`).join(", ");return`\n  fn set_${e}(${G}, value: ${d}) {\n    set_${e}ByIndices(${N(ne)}, value);\n  }`})();return{impl:()=>{let G=[],ne=!1;return v.offsetToIndices&&(G.push(E),ne=!0),v.indicesToOffset&&(G.push(R),ne=!0),v.broadcastedIndicesToOffset&&(Object.values(he).forEach(xe=>G.push(xe)),ne=!0),v.set&&(G.push(ie),ne=!0),v.setByIndices&&(G.push(me),ne=!0),v.get&&(G.push(ee),ne=!0),v.getByIndices&&(G.push(We),ne=!0),!u&&ne&&G.unshift(`const ${I} = ${w.indices}(${r.join(",")});`,`const ${A} = ${w.indices}(${M.computeStrides(r).join(",")});`),G.join(`\n`)},type:w,offsetToIndices:P,indicesToOffset:H,broadcastedIndicesToOffset:W,indices:N,indicesGet:K,indicesSet:Q,set:(...G)=>{if(G.length!==a+1)throw new Error(`indices length must be ${a}`);let ne=G[a];if(typeof ne!="string")throw new Error("value must be string");let xe=G.slice(0,a).map(_).join(",");return a===0?se("0u",ne):a===1?se(xe[0],ne):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}(${xe}, ${ne})`)},setByOffset:se,setByIndices:(G,ne)=>a<2?se(G,ne):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}ByIndices(${G}, ${ne});`),get:ae,getByOffset:Ce,getByIndices:Ae,usage:o,name:e,strides:A,shape:I,rank:a}},U=(e,t,r,o=1)=>Eo(e,t,r,"input",o),j=(e,t,r,o=1)=>Eo(e,t,r,"output",o),An=(e,t,r,o=1)=>Eo(e,t,r,"internal",o),Io=class{constructor(t,r){this.normalizedDispatchGroup=t;this.limits=r;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=or){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2];if(r>this.limits.maxComputeWorkgroupSizeX||o>this.limits.maxComputeWorkgroupSizeY||i>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*o*i>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=u?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,c=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${i})\n  fn main(${a}) {\n    ${c}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:i}of this.uniforms)if(i&&i>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(i/4)}>`);else{let u=i==null||i===1?o:`vec${i}<${o}>`;t.push(`${r}:${u}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}get variablesInfo(){if(this.uniforms.length===0)return;let t=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[t(r.type),r.length??1])}},va=(e,t)=>new Io(e,t),_r=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;i++){let u=r-1-i,a=e[u]||1;(t[t.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}});var Il,$a,Tl,El,yt,_a,Sa,Sr=Y(()=>{"use strict";ye();Se();Ze();_e();Il=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},$a=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Tl=(e,t)=>M.sortBasedOnPerm(e,$a(e.length,t)),El=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},yt=(e,t)=>{let r=e.dataType,o=e.dims.length,i=$a(o,t),u=Tl(e.dims,i),a=j("output",r,u.length),c=U("a",r,o),p=h=>`\n  ${h.registerUniform("output_size","u32").declareVariables(c,a)}\n\n  ${El(i,o,c,a)}\n\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${a.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${a.setByOffset("global_idx",c.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:h=>{let d=M.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...Z(h[0].dims,u)]}},getShaderSource:p}},_a=(e,t)=>{Il(e.inputs),e.compute(yt(e.inputs[0],t.perm))},Sa=e=>ve({perm:e.perm})});var Pl,kl,Ol,Rl,Bl,Dl,zl,Ml,Ul,Vl,It,xa,Ca,Aa,Ia,Ta,Ea,Pa,ka,Oa,Ra,Ba=Y(()=>{"use strict";ye();Se();_e();In();Sr();Pl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},kl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ol={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Rl={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Bl=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Dl=(e,t)=>{let r=[],o=e.length;for(let u=0;u<o;u++)t.indexOf(u)===-1&&r.push(e[u]);let i=t.map(u=>e[u]);return[r,i]},zl=(e,t)=>{let r=e.length+t.length,o=[],i=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?o.push(e[i++]):o.push(1);return o},Ml=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},Ul=(e,t)=>{let r=[];if(!Ml(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},Vl=(e,t,r,o,i,u,a)=>{let c=r[0].dims,p=M.size(u),h=M.size(a),d=U("_A",r[0].dataType,c),y=j("output",i,u),w=32,_=`\n          var<workgroup> aBestValues : array<f32, ${w}>;\n       `;return{name:e,shaderCache:t,getShaderSource:S=>`\n        ${S.registerUniform("reduceSize","u32").declareVariables(d,y)}\n        ${_}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${S.mainStart(w)}\n\n          let outputIndex = global_idx / ${w};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${Ol[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${w}) {\n           let candidate = f32(${d.getByOffset("offset + k")});\n           bestValue = ${Pl[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${w}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${kl[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${y.setByOffset("outputIndex",`${o==="mean"?`${y.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${y.type.storage}(${Rl[o]})`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:p},programUniforms:[{type:12,data:h}]})}},It=(e,t,r,o)=>{let i=e.inputs.length===1?r:Po(e.inputs,r),u=i.axes;u.length===0&&!i.noopWithEmptyAxes&&(u=e.inputs[0].dims.map((_,v)=>v));let a=M.normalizeAxes(u,e.inputs[0].dims.length),c=a,p=e.inputs[0],h=Ul(c,e.inputs[0].dims.length);h.length>0&&(p=e.compute(yt(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],c=Bl(c.length,p.dims.length));let[d,y]=Dl(p.dims,c),w=d;i.keepDims&&(w=zl(d,a)),e.compute(Vl(t,{hint:i.cacheKey,inputDependencies:["type"]},[p],o,e.inputs[0].dataType,w,y),{inputs:[p]})},xa=(e,t)=>{It(e,"ReduceMeanShared",t,"mean")},Ca=(e,t)=>{It(e,"ReduceL1Shared",t,"l1")},Aa=(e,t)=>{It(e,"ReduceL2Shared",t,"l2")},Ia=(e,t)=>{It(e,"ReduceLogSumExpShared",t,"logSumExp")},Ta=(e,t)=>{It(e,"ReduceMaxShared",t,"max")},Ea=(e,t)=>{It(e,"ReduceMinShared",t,"min")},Pa=(e,t)=>{It(e,"ReduceProdShared",t,"prod")},ka=(e,t)=>{It(e,"ReduceSumShared",t,"sum")},Oa=(e,t)=>{It(e,"ReduceSumSquareShared",t,"sumSquare")},Ra=(e,t)=>{It(e,"ReduceLogSumShared",t,"logSum")}});var Tt,Wl,Tn,Po,Et,Nl,Gl,Hl,Ll,Fl,ql,jl,Kl,Yl,Zl,Pt,Da,za,Ma,Ua,Va,Wa,Na,Ga,Ha,La,In=Y(()=>{"use strict";ye();Se();Ze();_e();Ba();Tt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Wl=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Tn=(e,t,r,o,i,u,a=!1,c=!1)=>{let p=[],h=r[0].dims,d=h.length,y=M.normalizeAxes(i,d),w=!c&&y.length===0;h.forEach((I,A)=>{w||y.indexOf(A)>=0?a&&p.push(1):p.push(I)});let _=p.length,v=M.size(p);return{name:e,shaderCache:t,getShaderSource:I=>{let A=[],x=U("_A",r[0].dataType,d),E=j("output",u,_),P=o(x,E,y),O=P[2];for(let R=0,H=0;R<d;R++)w||y.indexOf(R)>=0?(a&&H++,O=`for(var j${R}: u32 = 0; j${R} < ${h[R]}; j${R}++) {\n                  ${P[2].includes("last_index")?`let last_index = j${R};`:""}\n                  ${x.indicesSet("input_indices",R,`j${R}`)}\n                  ${O}\n                }`):(A.push(`${x.indicesSet("input_indices",R,E.indicesGet("output_indices",H))};`),H++);return`\n\n        ${I.registerUniform("output_size","u32").declareVariables(x,E)}\n\n        ${I.mainStart()}\n          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${x.type.indices};\n          let output_indices = ${E.offsetToIndices("global_idx")};\n\n          ${A.join(`\n`)}\n          ${P[0]}       // init ops for reduce max/min\n          ${P[1]}\n          ${O}\n          ${P[3]}\n          ${P.length===4?E.setByOffset("global_idx","value"):P.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:p,dataType:u}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:12,data:v},...Z(h,p)]})}},Po=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),ve({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Et=(e,t,r,o)=>{let i=e.inputs,u=i.length===1?r:Po(i,r);e.compute(Tn(t,{hint:u.cacheKey,inputDependencies:["rank"]},[i[0]],u.noopWithEmptyAxes&&u.axes.length===0?Wl:o,u.axes,i[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},Nl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceLogSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},Gl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceL1",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},Hl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceL2",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ll=(e,t)=>{Tt(e.inputs),Et(e,"ReduceLogSumExp",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},Fl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceMax",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(o.indicesSet("input_indices",c,0));return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},ql=(e,t)=>{Tt(e.inputs),Et(e,"ReduceMean",t,(o,i,u)=>{let a=1;for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&(a*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${a});`]})},jl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceMin",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Kl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceProd",t,(o,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},Yl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Zl=(e,t)=>{Tt(e.inputs),Et(e,"ReduceSumSquare",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},Pt=(e,t,r)=>{if(t.length===0)return r;let o=1,i=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?o*=e[u]:i*=e[u];return i<32&&o>1024},Da=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ql(e,t):xa(e,t)},za=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Gl(e,t):Ca(e,t)},Ma=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Hl(e,t):Aa(e,t)},Ua=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ll(e,t):Ia(e,t)},Va=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Fl(e,t):Ta(e,t)},Wa=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?jl(e,t):Ea(e,t)},Na=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Kl(e,t):Pa(e,t)},Ga=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Yl(e,t):ka(e,t)},Ha=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Zl(e,t):Oa(e,t)},La=(e,t)=>{Pt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Nl(e,t):Ra(e,t)}});var Fa,qa,ja,ko,Ka=Y(()=>{"use strict";ye();Ze();In();Fa=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},qa=(e,t)=>{Fa(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ja=(e,t)=>{Fa(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ko=e=>ve(e)});var Xl,Ql,Jl,En,Ya,Za,Oo=Y(()=>{"use strict";ye();Se();Ze();_e();Xl=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,o=e[r],i=o.dataType,u=o.dims.length;e.forEach((a,c)=>{if(c!==r){if(a.dataType!==i)throw new Error("input tensors should be one type");if(a.dims.length!==u)throw new Error("input tensors should have the same shape");a.dims.forEach((p,h)=>{if(h!==t&&p!==o.dims[h])throw new Error("non concat dimensions must match")})}})},Ql=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Jl=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;++i){let u=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?o.push(u):i===0?o.push(`if (inputIndex == ${i}u) { ${u} }`):i===r-1?o.push(`else { ${u} }`):o.push(`else if (inputIndex == ${i}) { ${u} }`)}return o.join(`\n`)},En=(e,t,r,o)=>{let i=M.size(r),u=new Array(e.length),a=new Array(e.length),c=0,p=[],h=[],d=[{type:12,data:i}];for(let S=0;S<e.length;++S)c+=e[S].dims[t],u[S]=c,h.push(e[S].dims.length),a[S]=U(`input${S}`,o,h[S]),p.push("rank"),d.push({type:12,data:u[S]});for(let S=0;S<e.length;++S)d.push(...Z(e[S].dims));d.push(...Z(r));let y=j("output",o,r.length),w=y.indicesGet("indices",t),_=Array.from(Array(u.length).keys()).map(S=>`uniforms.sizeInConcatAxis${S}`).join(","),v=S=>`\n\n  ${(()=>{S.registerUniform("outputSize","u32");for(let I=0;I<e.length;I++)S.registerUniform(`sizeInConcatAxis${I}`,"u32");return S.declareVariables(...a,y)})()}\n\n  ${Ql(u.length,_)}\n\n  ${S.mainStart()}\n    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${y.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${w});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${u.length}u>(${_});\n      ${w} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Jl(a,y)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:r,dataType:o}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:d}),getShaderSource:v}},Ya=(e,t)=>{let r=e.inputs,o=r[0].dims,i=M.normalizeAxis(t.axis,o.length);Xl(r,i);let u=o.slice();u[i]=r.reduce((c,p)=>c+(p.dims.length>i?p.dims[i]:0),0);let a=r.filter(c=>M.size(c.dims)>0);e.compute(En(a,i,u,r[0].dataType),{inputs:a})},Za=e=>ve({axis:e.axis})});var ec,tc,rc,nc,Pn,oc,Xa,Ro=Y(()=>{"use strict";ye();_n();_e();Oo();ec=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],c=e[5];if(a&&c)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let p=r.dims[0],h=r.dims[1],d=r.dims[2];if(i.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let y=i.dims[0]/3,w=y,_=w;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let E of t.qkvHiddenSizes)if(E%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=t.qkvHiddenSizes[0],w=t.qkvHiddenSizes[1],_=t.qkvHiddenSizes[2]}let v=h;if(y!==w)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==y+w+_)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let S=0;if(a){if(w!==_)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(a.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(a.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(a.dims[1]!==p)throw new Error(\'Input "past" second dimension must be batch_size\');if(a.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(a.dims[4]!==w/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(S=a.dims[3])}let I=v+S,A=-1,x=0;if(u)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");return{batchSize:p,sequenceLength:h,pastSequenceLength:S,kvSequenceLength:v,totalSequenceLength:I,maxSequenceLength:A,inputHiddenSize:d,hiddenSize:y,vHiddenSize:_,headSize:Math.floor(y/t.numHeads),vHeadSize:Math.floor(_/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:x,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},tc=(e,t,r,o)=>{let i=Me(o),u=64,a=o/i;a<u?u=1:a/8<64&&(u=Math.ceil(a/8));let c=Math.ceil(o/i/u),p=[{type:t.dataType,data:1/o},{type:12,data:a},{type:12,data:c}],h=Be(t.dataType,i),d=et(1,i),y=w=>{let _=j("x",t.dataType,t.dims,i),S=[{name:"d_inv",type:et(t.dataType)},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`\n  var<workgroup> thread_max: array<f32, ${u}>;\n  var<workgroup> thread_sum: array<f32, ${u}>;\n  ${w.registerUniforms(S).declareVariables(_)}\n  ${w.mainStart([u,1,1])}\n    let local_offset = local_idx * uniforms.elements_per_thread;\n    let offset = workgroup_id.x * uniforms.d_comp + local_offset;\n\n    var thread_max_vector = ${d}(-3.402823e+38f);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${d}(x[offset + i]), thread_max_vector);\n    }\n    thread_max[local_idx] = ${(()=>{switch(i){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${i}`)}})()};\n    workgroupBarrier();\n\n    var max_value =  f32(-3.402823e+38f);\n    for (var i = 0u; i < ${u}; i++) {\n      max_value = max(thread_max[i], max_value);\n    }\n\n    var sum_vector = ${d}(0);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      sum_vector += exp(${d}(x[offset + i]) - max_value);\n    }\n    thread_sum[local_idx] = ${(()=>{switch(i){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${i}`)}})()};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += thread_sum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        x[offset + i] = ${_.type.value}(uniforms.d_inv);\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        var f32input = ${d}(x[offset + i]);\n        x[offset + i] = ${_.type.value}(exp(f32input - max_value) / sum);\n      }\n    }\n  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${h};${i}`},getShaderSource:y,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:p})}},rc=(e,t,r,o,i,u,a)=>{let c=a+i.kvSequenceLength,p=[i.batchSize,i.numHeads,i.sequenceLength,c],h=u.scale===0?1/Math.sqrt(i.headSize):u.scale,d=Me(i.headSize),y=i.headSize/d,w=12,_={x:Math.ceil(c/w),y:Math.ceil(i.sequenceLength/w),z:i.batchSize*i.numHeads},v=[{type:12,data:i.sequenceLength},{type:12,data:y},{type:12,data:c},{type:12,data:i.numHeads},{type:1,data:h}],S=o?["type","type","type"]:["type","type"],I=A=>{let x=U("q",t.dataType,t.dims,d),E=U("key",r.dataType,r.dims,d),P=[x,E];o&&P.push(U("relative_position_bias",o.dataType,o.dims));let O=j("output",t.dataType,p),R=et(1,d),H=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"}];return`\n  const TILE_SIZE = ${w}u;\n\n  var<workgroup> tileQ: array<${x.type.storage}, ${w*w}>;\n  var<workgroup> tileK: array<${x.type.storage}, ${w*w}>;\n  ${A.registerUniforms(H).declareVariables(...P,O)}\n  ${A.mainStart([w,w,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${R}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n        value += ${R}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      var sum: f32 = ${(()=>{switch(d){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${d}`)}})()};\n        output[outputIdx] = ${O.type.value} (sum * uniforms.alpha) + ${o?"relative_position_bias[outputIdx]":"0.0"};\n    }\n  }`};return{name:"AttentionProbs",shaderCache:{hint:`${d}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType,gpuDataType:0}],dispatchGroup:_,programUniforms:v}),getShaderSource:I}},nc=(e,t,r,o,i)=>{let u=i+o.kvSequenceLength,a=[o.batchSize,o.sequenceLength,o.vHiddenSize],c=12,p={x:Math.ceil(o.vHeadSize/c),y:Math.ceil(o.sequenceLength/c),z:o.batchSize*o.numHeads},h=[{type:12,data:o.sequenceLength},{type:12,data:u},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}];return{name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:h}),getShaderSource:w=>{let _=U("probs",t.dataType,t.dims),v=U("v",r.dataType,r.dims),S=j("output",t.dataType,a),I=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${c}u;\n  var<workgroup> tileQ: array<${_.type.value}, ${c*c}>;\n  var<workgroup> tileK: array<${_.type.value}, ${c*c}>;\n  ${w.registerUniforms(I).declareVariables(_,v,S)}\n  ${w.mainStart([c,c,1])}\n   let headIdx = workgroup_id.z;\n   let m = global_id.y;\n   let n = global_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${_.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}}},Pn=(e,t,r,o,i,u,a,c,p,h,d)=>{let y=e.outputCount>1,w=e.outputCount>2,_=y&&w?h.pastSequenceLength:0,v=_+h.kvSequenceLength,S=[h.batchSize,h.numHeads,v,h.headSize],I=a?[a,r]:[r],A=y?e.compute(En(I,2,S,r.dataType),{inputs:I,outputs:[1]})[0]:r,x=[h.batchSize,h.numHeads,v,h.headSize],E=c?[c,o]:[o],P=w?e.compute(En(E,2,x,o.dataType),{inputs:E,outputs:[2]})[0]:o,O=[t,A];p&&O.push(p);let R=e.compute(rc(e,t,A,p,h,d,_),{inputs:O,outputs:[-1]})[0];e.compute(tc(e,R,h.batchSize*h.numHeads*h.sequenceLength,v),{inputs:[R],outputs:[]});let H=[R,P];e.compute(nc(e,R,P,h,_),{inputs:H,outputs:[0]})},oc=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,i=t.inputHiddenSize,u=t.headSize,a=12,c={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},p=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:o},{type:12,data:i},{type:12,data:u},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],d=y=>{let w=j("output_q",p[0].dataType,r),_=j("output_k",p[0].dataType,r),v=j("output_v",p[0].dataType,r),S=U("input",p[0].dataType,p[0].dims),I=U("weight",p[1].dataType,p[1].dims),A=U("bias",p[2].dataType,p[2].dims),x=S.type.storage,E=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${a}u;\n  var<workgroup> tileInput: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightQ: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightK: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightV: array<${x}, ${a*a}>;\n  ${y.registerUniforms(E).declareVariables(S,I,A,w,_,v)}\n  ${y.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${x}(0);\n    var valueK = ${x}(0);\n    var valueV = ${x}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:h}),getShaderSource:d},{inputs:p,outputs:[-1,-1,-1]})},Xa=(e,t)=>{let r=ec(e.inputs,t),[o,i,u]=oc(e,r);return Pn(e,o,i,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var ic,ac,sc,Qa,Ja=Y(()=>{"use strict";$r();ye();Se();Ze();_e();ic=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,i,u)=>{let a=i.length;if(a!==o.length)throw new Error(`${u}: num dimensions != ${a}`);i.forEach((c,p)=>{if(c!==o[p])throw new Error(`${u}: dim[${p}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},ac=(e,t)=>{let{epsilon:r,spatial:o,format:i}=t,u=e[0].dims,a=o?Me(u[u.length-1]):1,c=i==="NHWC"&&u.length>1?a:1,p=M.size(u)/a,h=o,d=h?u.length:u,y=U("x",e[0].dataType,e[0].dims,a),w=U("scale",e[1].dataType,e[1].dims,c),_=U("bias",e[2].dataType,e[2].dims,c),v=U("inputMean",e[3].dataType,e[3].dims,c),S=U("inputVar",e[4].dataType,e[4].dims,c),I=j("y",e[0].dataType,d,a),A=()=>{let E="";if(o)E=`let cOffset = ${u.length===1?"0u":i==="NHWC"?`outputIndices[${u.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")E=`\n            ${I.indicesSet("outputIndices","0","0")}\n            let cOffset = ${I.indicesToOffset("outputIndices")};`;else{E=`var cIndices = ${w.type.indices}(0);\n                       cIndices[0] = outputIndices[${u.length-1}];`;for(let P=1;P<w.rank;P++)E+=`cIndices[${P}] = outputIndices[${P}];`;E+=`let cOffset = ${w.indicesToOffset("cIndices")};`}return E},x=E=>`\n  const epsilon = ${r};\n  ${E.registerUniform("outputSize","u32").declareVariables(y,w,_,v,S,I)}\n  ${E.mainStart()}\n  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${I.offsetToIndices(`global_idx * ${a}`)};\n    ${A()}\n    let scale = ${w.getByOffset("cOffset")};\n    let bias = ${_.getByOffset("cOffset")};\n    let inputMean = ${v.getByOffset("cOffset")};\n    let inputVar = ${S.getByOffset("cOffset")};\n    let x = ${y.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${I.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${a}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:x,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h?[{type:12,data:p},...Z(u)]:[{type:12,data:p}]})}},sc=e=>ve(e),Qa=(e,t)=>{let{inputs:r,outputCount:o}=e,i=sc({...t,outputCount:o});if(vr.webgpu.validateInputContent&&ic(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(ac(r,i))}});var uc,dc,es,ts=Y(()=>{"use strict";Se();_e();uc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},dc=e=>{let t=e[0].dims,r=e[0].dims[2],o=M.size(t)/4,i=e[0].dataType,u=U("input",i,t,4),a=U("bias",i,[r],4),c=U("residual",i,t,4),p=j("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:d=>`\n  const channels = ${r}u / 4;\n  ${d.declareVariables(u,a,c,p)}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${u.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};\n    ${p.setByOffset("global_idx","value")}\n  }`}},es=e=>{uc(e.inputs),e.compute(dc(e.inputs))}});var lc,ke,rs,ns,os,is,as,ss,us,ds,ls,cc,cs,ps,ms,fs,kn,hs,On,gs,ys,bs,ws,vs,$s,_s,Ss,xs,Cs,As,Is,Ts,Es,Ps,ks,Os,Rs,Bo,Do,Bs,Ds,zs,Rn=Y(()=>{"use strict";ye();Se();Ze();_e();lc=(e,t,r,o,i,u)=>{let a=Math.ceil(t/4),c="";typeof i=="string"?c=`${i}(a)`:c=i("a");let p=U("inputData",r,[a],4),h=j("outputData",o,[a],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(p,h)}\n\n  ${u??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${p.getByOffset("global_idx")};\n    ${h.setByOffset("global_idx",c)}\n  }`},ke=(e,t,r,o,i,u=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:a=>lc(a,M.size(e.dims),e.dataType,u,r,o),getRunData:a=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(M.size(a[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(e.dims)/4)}]})}),rs=e=>{e.compute(ke(e.inputs[0],"Abs","abs"))},ns=e=>{e.compute(ke(e.inputs[0],"Acos","acos"))},os=e=>{e.compute(ke(e.inputs[0],"Acosh","acosh"))},is=e=>{e.compute(ke(e.inputs[0],"Asin","asin"))},as=e=>{e.compute(ke(e.inputs[0],"Asinh","asinh"))},ss=e=>{e.compute(ke(e.inputs[0],"Atan","atan"))},us=e=>{e.compute(ke(e.inputs[0],"Atanh","atanh"))},ds=e=>ve(e),ls=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(ke(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},cc=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:xn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Cn;return ve({min:t,max:r})},cs=(e,t)=>{let r=e.inputs.length===1?t:cc(e.inputs),o=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},ps=e=>{e.compute(ke(e.inputs[0],"Ceil","ceil"))},ms=e=>{e.compute(ke(e.inputs[0],"Cos","cos"))},fs=e=>{e.compute(ke(e.inputs[0],"Cosh","cosh"))},kn=e=>ve(e),hs=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},On=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,gs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,On(t)))},ys=e=>{e.compute(ke(e.inputs[0],"Exp","exp"))},bs=e=>{e.compute(ke(e.inputs[0],"Floor","floor"))},ws=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,On(t)))},vs=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},$s=e=>{e.compute(ke(e.inputs[0],"Not",t=>`!${t}`))},_s=e=>{e.compute(ke(e.inputs[0],"Neg",t=>`-${t}`))},Ss=e=>{e.compute(ke(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},xs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Cs=e=>{e.compute(ke(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},As=e=>ve(e),Is=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Ts=e=>{e.compute(ke(e.inputs[0],"Sin","sin"))},Es=e=>{e.compute(ke(e.inputs[0],"Sinh","sinh"))},Ps=e=>{e.compute(ke(e.inputs[0],"Sqrt","sqrt"))},ks=e=>{e.compute(ke(e.inputs[0],"Tan","tan"))},Os=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Rs=e=>{e.compute(ke(e.inputs[0],"Tanh",Os))},Bo=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Os("v")};\n}\n`,Do=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Bs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"FastGelu",Do,Bo(t),void 0,e.inputs[0].dataType))},Ds=(e,t)=>{let r=et(e.inputs[0].dataType);return e.compute(ke(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},zs=e=>{e.compute(ke(e.inputs[0],"Log","log"))}});var pc,mc,Us,Vs=Y(()=>{"use strict";Se();_e();Rn();pc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},mc=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=U("input",e[0].dataType,e[0].dims,4),o=U("bias",e[0].dataType,[e[0].dims[2]],4),i=j("output",e[0].dataType,t,4),u=M.size(t)/4,a=Be(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:p=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${p.declareVariables(r,o,i)}\n\n  ${On(a)}\n\n  ${p.mainStart()}\n    ${p.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Us=e=>{pc(e.inputs),e.compute(mc(e.inputs))}});var fc,hc,kt,Ws,Ns,Gs,Hs,Ls,Fs,qs,js,Ks,Ys,Zs=Y(()=>{"use strict";ye();Se();_e();fc=(e,t,r,o,i,u,a,c,p,h,d,y)=>{let w,_;typeof c=="string"?w=_=(x,E)=>`${c}((${x}),(${E}))`:typeof c=="function"?w=_=c:(w=c.scalar,_=c.vector);let v=j("outputData",d,o.length,4),S=U("aData",p,t.length,4),I=U("bData",h,r.length,4),A;if(i)if(u){let x=M.size(t)===1,E=M.size(r)===1,P=t.length>0&&t[t.length-1]%4===0,O=r.length>0&&r[r.length-1]%4===0;x||E?A=v.setByOffset("global_idx",_(x?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"),E?`${I.type.value}(${I.getByOffset("0")}.x)`:I.getByOffset("global_idx"))):A=`\n            let outputIndices = ${v.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${S.broadcastedIndicesToOffset("outputIndices",v)};\n            let offsetB = ${I.broadcastedIndicesToOffset("outputIndices",v)};\n            ${v.setByOffset("global_idx",_(a||P?S.getByOffset("offsetA / 4u"):`${S.type.value}(${S.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||O?I.getByOffset("offsetB / 4u"):`${I.type.value}(${I.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else A=v.setByOffset("global_idx",_(S.getByOffset("global_idx"),I.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let x=(E,P,O="")=>{let R=`aData[indexA${P}][componentA${P}]`,H=`bData[indexB${P}][componentB${P}]`;return`\n            let outputIndices${P} = ${v.offsetToIndices(`global_idx * 4u + ${P}u`)};\n            let offsetA${P} = ${S.broadcastedIndicesToOffset(`outputIndices${P}`,v)};\n            let offsetB${P} = ${I.broadcastedIndicesToOffset(`outputIndices${P}`,v)};\n            let indexA${P} = offsetA${P} / 4u;\n            let indexB${P} = offsetB${P} / 4u;\n            let componentA${P} = offsetA${P} % 4u;\n            let componentB${P} = offsetB${P} % 4u;\n            ${E}[${P}] = ${O}(${w(R,H)});\n          `};d===9?A=`\n            var data = vec4<u32>(0);\n            ${x("data",0,"u32")}\n            ${x("data",1,"u32")}\n            ${x("data",2,"u32")}\n            ${x("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:A=`\n            ${x("outputData[global_idx]",0)}\n            ${x("outputData[global_idx]",1)}\n            ${x("outputData[global_idx]",2)}\n            ${x("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(S,I,v)}\n\n        ${y??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${A}\n      }`},hc=(e,t,r,o,i,u,a=r.dataType)=>{let c=!M.areEqual(r.dims,o.dims),p=r.dims,h=M.size(r.dims),d=!1,y=!1,w=[c];if(c){let _=At.calcShape(r.dims,o.dims,!1);if(!_)throw new Error("Can\'t perform binary op on the given tensors");p=_,h=M.size(p);let v=M.size(r.dims)===1,S=M.size(o.dims)===1,I=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,A=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;w.push(v),w.push(S),w.push(I),w.push(A);let x=1;for(let E=1;E<p.length;E++){let P=r.dims[r.dims.length-E]??1,O=o.dims[o.dims.length-E]??1;if(P===O)x*=P;else break}x%4===0?(y=!0,d=!0):(v||S||I||A)&&(d=!0)}else d=!0;return w.push(d),{name:e,shaderCache:{hint:t+w.map(_=>_.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:_=>fc(_,r.dims,o.dims,p,d,c,y,i,r.dataType,o.dataType,a,u),getRunData:()=>({outputs:[{dims:p,dataType:a}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(p)/4)},...Z(r.dims,o.dims,p)]})}},kt=(e,t,r,o,i,u)=>{e.compute(hc(t,i??"",e.inputs[0],e.inputs[1],r,o,u))},Ws=e=>{kt(e,"Add",(t,r)=>`${t}+${r}`)},Ns=e=>{kt(e,"Div",(t,r)=>`${t}/${r}`)},Gs=e=>{kt(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Hs=e=>{kt(e,"Mul",(t,r)=>`${t}*${r}`)},Ls=e=>{let t=U("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;kt(e,"Pow",{scalar:(o,i)=>`pow_custom(${o},${i})`,vector:(o,i)=>`pow_vector_custom(${o},${i})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Fs=e=>{kt(e,"Sub",(t,r)=>`${t}-${r}`)},qs=e=>{kt(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},js=e=>{kt(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},Ks=e=>{kt(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Ys=e=>{kt(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var _t,St,xt,Bn,Ft=Y(()=>{"use strict";ye();Se();_t=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},St=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},xt=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Bn=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[xn,Cn];return{activation:t,clipMax:o,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}});var tt,Dn,zn=Y(()=>{"use strict";tt=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Dn=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Mn,zo=Y(()=>{"use strict";Mn=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var yc,bc,Hr,Xs,wc,Lr,vc,Un,Fr=Y(()=>{"use strict";ye();Se();_e();Ft();zn();yc=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,bc=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Hr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32)=>{let p=t[1]*e[1],h=t[0]*e[0],d=i?p:u,y=i?u:p,w=d/t[0],_=u/t[1];if(!((i&&w===4&&e[1]===4||!i&&(w===3||w===4))&&d%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${w} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${w} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${w}<${r}>, ${d/w}>, ${y}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${u}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${w};\nconst tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${p};\n\n  let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${_};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${yc(i,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${w===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${bc(i,w)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Xs=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,wc=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Lr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32,p=!1)=>{let h=e[1]*t[1],d=e[0]*t[0],y=i?h:u,w=i?u:h;if(!(w%t[1]===0&&y%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${w} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let _=w/t[1],v=y/t[0],S=u/t[1],I=p?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${h};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${w}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {\n          ${Xs(i,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${h};\n\nlet tileRowA = i32(localId.y) * ${_};\nlet tileColA = i32(localId.x) * ${v};\nlet tileRowB = i32(localId.y) * ${S};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Xs(i,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${wc(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${y}>, ${w}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${d}>, ${u}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${I}\n  }\n`},vc=(e,t,r,o,i,u=!1)=>{let[a,c,p]=i,[h,d,y,w]=o,_=_r(a,p),v=_r(c,p),S=Be(o[0].type.tensor),I=()=>{let E=d.rank,P=h.rank,O=`var aIndices: ${d.type.indices};`;for(let R=E-2-1,H=P-1;R>=0;R--,H--)O+=`\naIndices[${R}] = ${P>1?`batchIndices[${H}]`:"batchIndices"};`;return _.forEach(R=>{O+=`\naIndices[${R}] = 0;`}),O+=`\naIndices[${E-2}] = u32(row);\n                   aIndices[${E-1}] = u32(colIn);`,O},A=()=>{let E=y.rank,P=h.rank,O=`var bIndices: ${y.type.indices};`;for(let R=E-2-1,H=P-1;R>=0;R--,H--)O+=`\nbIndices[${R}] = ${P>1?`batchIndices[${H}]`:"batchIndices"};`;return v.forEach(R=>{O+=`\nbIndices[${R}] = 0;`}),O+=`\nbIndices[${E-2}] = u32(row);\n                   bIndices[${E-1}] = u32(colIn);`,O};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${tt(e,S)} {\n      var value = ${tt(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${I()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${tt(e,S)} {\n      var value = ${tt(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${A()}\n        value = ${y.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${tt(e,S)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${u?"bias[colIn]":`${tt(e,S)}(bias[row])`};`:""}\n        ${r}\n        ${w.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Un=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u.slice(0,-2),p=a.slice(0,-2),h=o?o.slice(0,-2):r.slice(0,-2),d=M.size(h),y=u[u.length-2],w=u[u.length-1],_=a[a.length-1],v=w%4===0&&_%4===0,S=y<=8?[4,1,1]:[4,4,1],I=[8,8,1],A=[Math.ceil(_/I[0]/S[0]),Math.ceil(y/I[1]/S[1]),Math.ceil(d/I[2]/S[2])],x=v?4:1,E=[...c,y,w/x],P=E.length,O=[...p,w,_/x],R=O.length,H=[d,y,_/x],N=[{type:6,data:y},{type:6,data:_},{type:6,data:w}];St(t,N),N.push(...Z(h,E,O));let K=["rank","rank"],Q=e.length>2;Q&&(N.push(...Z(e[2].dims)),K.push("rank")),N.push(...Z(H));let he=W=>{let se=h.length,Ce=An("batchDims",e[0].dataType,se,1),We=Be(e[0].dataType),ee=U("a",e[0].dataType,P,x),ae=U("b",e[1].dataType,R,x),Ae=j("result",e[0].dataType,H.length,x),me=[ee,ae];if(Q){let G=i?x:1;me.push(U("bias",e[2].dataType,e[2].dims.length,G))}let ie=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];xt(t,ie);let ue=Be(Ae.type.tensor),le=_t(t,Ae.type.value,ue),qe=vc(x,Q,le,[Ce,ee,ae,Ae],[c,p,h],i);return`\n  ${W.registerUniforms(ie).registerInternalVariables(Ce).declareVariables(...me,Ae)}\n  ${qe}\n  ${v?Hr(S,I,We,Ce):Lr(S,I,We,Ce)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${S};${t.activation};${v};${i}`,inputDependencies:K},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]},programUniforms:N}),getShaderSource:he}}});var $c,Qs,Js=Y(()=>{"use strict";ye();Ht();_e();Ft();zn();zo();Fr();$c=(e,t,r,o,i=!1,u,a=4,c=4,p=4,h="f32")=>{let d=Q=>{switch(Q){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},y=Q=>{switch(Q){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,_=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,v=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",S=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",I=e?"row":"col",A=e?"col":"row",x=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${I} / outWidth;\n    let outCol = ${I} % outWidth;\n\n    let WRow = ${A} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${A} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${A} % inChannels;\n    var resData = ${tt(a,h)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${v} && xCol >= 0 && xCol < ${S}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${d(a)}\n    }\n    return resData;`,E=e?t&&o?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${x}\n    }\n    return ${tt(a,h)}(0.0);`:o&&r?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${x}\n    }\n    return ${tt(a,h)}(0.0);`,P=`${y(c)}`,O=tt(p,h),R=e?tt(a,h):tt(c,h),H=e?tt(c,h):tt(a,h),N=_t(u,O,h);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${R} {\n      ${e?E:P}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${H} {\n      ${e?P:E}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${O}) {\n      let col = colIn * ${p};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${_}\n      ${Dn(i)}\n      ${N}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Qs=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],d=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],v=p&&(h%4===0||h%3===0)&&_%4===0,S=p?_:y*w,I=p?y*w:_,A=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(S/A[0]/x[0]),Math.ceil(I/A[1]/x[1]),Math.ceil(d/A[2]/x[2])];Ve("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let P=v?p&&h%4!==0?3:4:1,O=A[1]*x[1],R=A[0]*x[0],H=Math.max(A[0]*P,A[1]),N=o%O===0,K=i%R===0,Q=u%H===0,he=v?[P,4,4]:[1,1,1],W=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];St(t,W),W.push(...Z(e[0].dims,e[1].dims));let se=["rank","rank"];a&&(W.push(...Z(e[2].dims)),se.push("rank")),W.push(...Z(r));let Ce=We=>{let ee=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];xt(t,ee);let ae=v?4:1,Ae=Be(e[0].dataType),me=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${Ae}>`:Ae}) {\n        result[flatIndex] = ${v?`vec4<${Ae}>`:Ae}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${Ae}>`:Ae}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);\n      }`,ie=U("x",e[0].dataType,e[0].dims.length,P===3?1:P),ue=U("w",e[1].dataType,e[1].dims.length,ae),le=[ie,ue],qe=j("result",e[0].dataType,r.length,ae);if(a){let G=U("bias",e[2].dataType,e[2].dims.length,ae);le.push(G),me+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${Ae}>`:Ae} {\n          return bias[coords.${p?"w":"y"}${v?"/ 4":""}];\n        }`}return`\n        ${Mn("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${We.registerUniforms(ee).declareVariables(...le,qe)}\n        ${me}\n        ${$c(p,N,K,Q,a,t,he[0],he[1],he[2],Ae)}\n        ${v?Hr(x,A,Ae,void 0,!p,H):Lr(x,A,Ae,void 0,!p,H,!1,void 0,c)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${P};${v};${N};${K};${Q};${O};${R};${H}`,inputDependencies:se},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:W}),getShaderSource:Ce}}});var Mo,eu,tu=Y(()=>{"use strict";ye();Se();_e();Uo();Ft();Mo=(e,t,r)=>{let o=e.length>2,i=o?"value += b[output_channel];":"",u=e[0].dims,a=e[1].dims,c=a[0]/t.group,p=t.format==="NHWC",h=Vn(u,a,t.dilations,t.pads,t.strides,p),d=M.size(h),y=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:c}];St(t,y),y.push(...Z(u,a));let w=["rank","rank"];o&&(y.push(...Z(e[2].dims)),w.push("rank")),y.push(...Z(h));let _=v=>{let S=j("output",e[0].dataType,h.length),I=Be(S.type.tensor),A=_t(t,S.type.value,I),x=U("x",e[0].dataType,u.length),E=U("w",e[1].dataType,a.length),P=[x,E];o&&P.push(U("b",e[2].dataType,e[2].dims.length));let O=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return xt(t,O),`\n  ${v.registerUniforms(O).declareVariables(...P,S)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${S.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${p?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${p?1:2}], outputIndices[${p?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${S.type.value} = ${S.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${p?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${p?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${p?x.get("batch","xHeight","xWidth","input_channel"):x.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${E.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${A}\n    ${S.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:w},getRunData:()=>({outputs:[{dims:r?r(h):h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y}),getShaderSource:_}},eu=(e,t,r)=>{let o=e.length>2,i=Me(r[3]),u=Me(r[2]),a=M.size(r)/i/u,c=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],p=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],h=[r[0],r[1],r[2],r[3]/i],d=[{type:12,data:a},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];St(t,d),d.push(...Z(c,p,h));let y=(u-1)*t.strides[1]+p[1],w=_=>{let v=j("output",e[0].dataType,h.length,i),S=Be(v.type.tensor),I=_t(t,v.type.value,S),A=U("x",e[0].dataType,c.length,i),x=U("w",e[1].dataType,p.length,i),E=[A,x];o&&E.push(U("b",e[2].dataType,e[2].dims,i));let P=o?"value += b[output_channel];":"",O=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return xt(t,O),`\n  ${_.registerUniforms(O).declareVariables(...E,v)}\n  ${_.mainStart()}\n    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${u}u;\n    let col = (index1 % width1) * ${u}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${A.type.value}, ${y}>;\n    var values: array<${v.type.value}, ${u}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w\'s height/width.\n    for (var w_height: u32 = 0u; w_height < ${p[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${y}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${A.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${A.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${p[1]}; w_width++) {\n          let w_val = ${x.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${u}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${u}u; i++) {\n      var value = values[i];\n      ${P}\n      ${I}\n      ${v.set("batch","row","col + i","output_channel","value")};\n    }\n  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${i};${u};${y};${p[0]};${p[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:w}}});var Vo,_c,ru,Wo=Y(()=>{"use strict";ye();Se();Fr();_e();Ft();Vo=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u[u.length-2],p=a[a.length-1],h=u[u.length-1],d=Me(p),y=Me(h),w=Me(c),_=M.size(r)/d/w,v=e.length>2,S=o?o.slice(0,-2):r.slice(0,-2),A=[M.size(S),c,p],x=[{type:12,data:_},{type:12,data:c},{type:12,data:p},{type:12,data:h}];St(t,x),x.push(...Z(S,u,a)),v&&x.push(...Z(e[2].dims)),x.push(...Z(A));let E=P=>{let O=An("batch_dims",e[0].dataType,S.length),R=U("a",e[0].dataType,u.length,y),H=U("b",e[1].dataType,a.length,d),N=j("output",e[0].dataType,A.length,d),K=Be(N.type.tensor),Q=_t(t,N.type.value,K),he=[R,H],W="";if(v){let ie=i?d:1;he.push(U("bias",e[2].dataType,e[2].dims.length,ie)),W=`${i?`value += bias[col / ${ie}];`:`value += ${N.type.value}(bias[row + i]);`}`}let se=u.slice(0,-2),Ce=a.slice(0,-2),We=_r(se,S),ee=_r(Ce,S),ae=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];xt(t,ae);let Ae=(ie,ue)=>{let le=ie.rank,qe=ie.name;if(le===2)return`var ${qe}_indices = ${ie.type.indices}(0u, 0u);`;let G=O.rank,ne=`var ${qe}_indices: ${ie.type.indices};`;for(let xe=le-2-1,Ke=G-1;xe>=0;xe--,Ke--)ne+=`\n${qe}_indices[${xe}] = ${G>1?`batch_indices[${Ke}]`:"batch_indices"};`;return ue.forEach(xe=>{ne+=`\n${qe}_indices[${xe}] = 0;`}),ne+=`${qe}_indices[${le-2}] = 0u;\n                     ${qe}_indices[${le-1}] = 0u;`,ne},me=()=>{let ie=`var a_data: ${R.type.value};`;for(let ue=0;ue<y;ue++)ie+=`\n              let b_data${ue} = b[(b_offset + (k + ${ue}) * uniforms.N + col) / ${d}];`;for(let ue=0;ue<w;ue++){ie+=`a_data = a[(a_offset + (row + ${ue}) * uniforms.K + k) / ${y}];`;for(let le=0;le<y;le++)ie+=`\n            values[${ue}] = fma(${H.type.value}(a_data${y===1?"":`[${le}]`}), b_data${le}, values[${ue}]);\n`}return ie};return`\n  ${P.registerUniforms(ae).registerInternalVariables(O).declareVariables(...he,N)}\n  ${P.mainStart()}\n    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${w};\n    let row = (index1 % stride1) * ${w};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${O.offsetToIndices("batch")};`}\n    ${Ae(R,We)}\n    let a_offset = ${R.indicesToOffset("a_indices")};\n    ${Ae(H,ee)}\n    let b_offset = ${H.indicesToOffset("b_indices")};\n    var values: array<${N.type.value}, ${w}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${y}) {\n      ${me()}\n    }\n    for (var i = 0u; i < ${w}u; i++) {\n      var value = values[i];\n      ${W}\n      ${Q}\n      let cur_indices = ${N.type.indices}(batch, row + i, col);\n      let offset = ${N.indicesToOffset("cur_indices")};\n      ${N.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${y};${w};${i}`,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:x}),getShaderSource:E}},_c=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},ru=e=>{_c(e.inputs);let t=At.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Vo(e.inputs,{activation:""},t)):e.compute(Un(e.inputs,{activation:""},t))}});var Vn,No,Sc,nu,Go,xc,Cc,Ho,Uo=Y(()=>{"use strict";Se();Js();Fr();tu();Ft();Wo();Sr();Vn=(e,t,r,o,i,u)=>{let a=e[0],c=e.slice(u?1:2,u?3:4),p=c.length,h=t[0],y=t.slice(2).map((v,S)=>v+(v-1)*(r[S]-1)),_=c.map((v,S)=>v+o[S]+o[S+p]).map((v,S)=>Math.floor((v-y[S]+i[S])/i[S]));return _.splice(0,0,a),_.splice(u?3:1,0,h),_},No=[2,3,1,0],Sc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},nu=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let o=e.pads.slice();nr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:o}),i},Go=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,u=e.group,a=e.kernel_shape,c=e.pads,p=e.strides,h=e.w_is_const();return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},xc=(e,t,r)=>{let o=nu(r,t),i=r.format==="NHWC";if(r.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let H=Vn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),N=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=N);let K=[t[0],N];t.length===3&&K.push(t[2]),e.compute(eu(K,o,H),{inputs:K})}else e.compute(Mo(t,o));return}let u=t.length===3,a=t[0].dims[i?1:2],c=t[0].dims[i?2:3],p=t[0].dims[i?3:1],h=t[1].dims[2],d=t[1].dims[3],y=Vn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),w=y[i?1:2],_=y[i?2:3],v=y[i?3:1],S=i&&h===a&&d===c&&r.pads[0]===0&&r.pads[1]===0;if(S||h===1&&d===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let R=y[0],H,N,K,Q=[];if(i){let se=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=se),S){let Ce=a*c*p;H=t[0].reshape([1,R,Ce]),N=se.reshape([1,Ce,v]),K=[1,R,v]}else H=t[0].reshape([R,a*c,p]),N=se.reshape([1,p,v]),K=[R,w*_,v];Q.push(H),Q.push(N)}else H=t[0].reshape([R,p,a*c]),N=t[1].reshape([1,v,p]),K=[R,v,w*_],Q.push(N),Q.push(H);u&&Q.push(t[2]);let he=K[2],W=Q[0].dims[Q[0].dims.length-1];he<8&&W<8?e.compute(Vo(Q,o,y,K,i),{inputs:Q}):e.compute(Un(Q,o,y,K,i),{inputs:Q});return}let I=!0,A=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let x=[t[0],A];u&&x.push(t[2]);let E=i?w*_:v,P=i?v:w*_,O=h*d*p;e.compute(Qs(x,o,y,E,P,O,u,I),{inputs:x})},Cc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),a=[1].concat(t.dilations),c=[1].concat(t.kernelShape),p=nu({...t,pads:i,strides:u,dilations:a,kernelShape:c},o);e.compute(Mo(o,p,h=>r?[h[0],h[2],h[3]]:[]))},Ho=(e,t)=>{Sc(e.inputs,t),e.inputs[0].dims.length===3?Cc(e,t):xc(e,e.inputs,t)}});var Ac,ou,iu=Y(()=>{"use strict";ye();Ht();_e();Ft();zn();zo();Fr();Ac=(e,t=!1,r,o,i=4)=>{let u=A=>{switch(A){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${o}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${A} is not supported.`)}},a=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,c=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=e?"row":"col",y=e?"col":"row",w=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${d} / outWidth;\n      let outCol = ${d} % outWidth;\n\n      let WRow = ${y} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${y} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${p}) || fract(xR) > 0.0) {\n        return ${o}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {\n        return ${o}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${y} % inChannels;\n      ${a}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${i}];`,_=e?`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${w}\n      }\n      return ${o}(0.0);`:`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${w}\n      }\n      return ${o}(0.0);`,v=`\n      let col = colIn * ${i};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(i)}\n      }\n      return ${o}(0.0);\n      `,S=_t(r,o);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?_:v}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?v:_}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {\n    let col = colIn * ${i};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${Dn(t)}\n      ${S}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${i}] = value;\n    }\n  }`},ou=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],d=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],v=p&&h%4===0&&h%3&&_%4===0,S=p?_:y*w,I=p?y*w:_,A=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(S/A[0]/x[0]),Math.ceil(I/A[1]/x[1]),Math.ceil(d/A[2]/x[2])];Ve("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let P=v?4:1,O=Math.max(A[0]*P,A[1]),R=v?4:1,H=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],N=[H[0]+(t.dilations[0]<=1?0:(H[0]-1)*(t.dilations[0]-1)),H[1]+(t.dilations[1]<=1?0:(H[1]-1)*(t.dilations[1]-1))],K=[N[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),N[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],Q=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:H},{type:6,data:K}];St(t,Q),Q.push(...Z(e[0].dims,e[1].dims));let he=["rank","rank"];a&&(Q.push(...Z(e[2].dims)),he.push("rank")),Q.push(...Z(r));let W=se=>{let Ce=U("x",e[0].dataType,e[0].dims.length,R),We=U("w",e[1].dataType,e[1].dims.length,1),ee=j("result",e[0].dataType,r.length,R),ae=[Ce,We],Ae="";if(a){let ue=U("bias",e[2].dataType,e[2].dims.length,R);ae.push(ue),Ae+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${ue.type.value} {\n            return bias[coords.${p?"w":"y"}${v?"/ 4":""}];\n          }`}let me=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:H.length},{name:"pads",type:"i32",length:K.length}];xt(t,me);let ie=Be(e[0].dataType,1);if(ie!=="f16"&&ie!=="f32")throw new Error(`elemType ${ie} is not supported.`);return`\n        ${Mn("uniforms.result_strides")}\n        ${se.registerUniforms(me).declareVariables(...ae,ee)};\n        ${Ae}\n        ${Ac(p,a,t,Ce.type.value,P)}\n        ${v?Hr(x,A,ie,void 0,!p,O):Lr(x,A,ie,void 0,!p,O,!1,void 0,c)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${x};${A};${v}`,inputDependencies:he},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:Q}),getShaderSource:W}}});var Ic,Lo,au=Y(()=>{"use strict";ye();Ht();Se();_e();Ic=(e,t,r,o,i,u=!1,a,c,p=!1)=>{let h=p?1:2,d=p?2:3,y=p?3:1,w=u?2:1,_=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {\n    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);\n  }`;o&&(_+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {\n      return bias[coords.${p?"w":"y"}${u?"/ 4":""}];\n    }`);let v=u?4:1,S=U("W",t[1].dataType,t[1].dims.length,v),I=U("Dy",t[0].dataType,t[0].dims.length,v),A=[I,S];o&&A.push(U("bias",t[2].dataType,[r[y]].length,v));let x=j("result",t[0].dataType,r.length,v),E=`{\n        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${i?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${a}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${a}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${I.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${I.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${y}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${I.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${I.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};\n          ${x.set("batch","r","c + i","d1","value")};\n        }\n      }`,P=`\n          let outputIndices = ${x.offsetToIndices("global_idx")};\n          let batch = ${x.indicesGet("outputIndices",0)};\n          let d1 = ${x.indicesGet("outputIndices",y)};\n          let r = ${x.indicesGet("outputIndices",h)};\n          let c = ${x.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${a}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${p?I.get("batch","idyR","idyC","inputChannel"):I.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${S.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};\n          ${x.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(c).declareVariables(...A,x)}\n  ${_}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${u?E:P}}`},Lo=(e,t,r)=>{let o=e.length>2,i=t.outputShape,u=M.size(i),a=[Math.ceil(u/64),1,1];Ve("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${a}`);let c=t.format==="NHWC",p=["rank","rank"],h=[t.strides[0],t.strides[1]],d=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],y=[t.dilations[0],t.dilations[1]],w=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[c?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[c?2:3]-1)*(t.dilations[1]-1))],_=[w[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),w[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],v=!1,S=t.group,I=e[1].dims,A=I[0]/S,x=I[1],E=[{type:12,data:u},{type:12,data:h},{type:12,data:d},{type:12,data:y},{type:12,data:w},{type:6,data:_},{type:12,data:A},{type:12,data:x},...Z(e[0].dims,e[1].dims)];o&&(E.push(...Z(e[2].dims)),p.push("rank")),E.push(...Z(i));let P=a[1]===1&&a[2]===1,O=R=>{let H=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:_.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],N=Be(e[0].dataType);return`${Ic(R,e,i,o,P,v,N,H,c)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:p},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:E}),getShaderSource:O}}});var Tc,Ec,Pc,su,uu,kc,Oc,Rc,Bc,du,lu=Y(()=>{"use strict";iu();au();Ft();Sr();Tc=(e,t,r,o,i,u)=>(e-1)*t+r+(o-1)*i+1-u,Ec=(e,t,r,o,i)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=u,r[i]=e-u):t==="SAME_LOWER"&&(r[o]=e-u,r[i]=u)},Pc=(e,t,r,o,i,u,a,c,p,h)=>{let d=e.length-2,y=h.length===0;if(p.length===0)for(let v=0;v<d;++v)p.push(0);let w=e[0],_=t[c?3:1]*i;for(let v=0,S=e.length-d-(c?1:0);v<d;++v,++S){let I=e[S],A=y?I*a[v]:h[v],x=Tc(I,a[v],u[v],t[S],r[v],A);Ec(x,o,u,v,v+d),y&&h.push(a[v]*(I-1)+p[v]+(t[S]-1)*r[v]+1-u[v]-u[v+d])}h.splice(0,0,w),h.splice(c?3:1,0,_)},su=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((y,w)=>y*w,1)===0){r.length=0;for(let y=2;y<t[1].dims.length;++y)r.push(t[1].dims[y])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let i=e.pads.slice(),u=e.outputShape.slice(),a=e.outputPadding.slice(),c=t[0].dims,p=e.dilations.slice();if(p.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;p=new Array(y).fill(1)}let h=e.strides.slice();if(h.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;h=new Array(y).fill(1)}Pc(c,r,p,e.autoPad,e.group,i,h,o,a,u);let d=Object.assign({},e);return Object.assign(d,{kernelShape:r,pads:i,outputPadding:a,outputShape:u,dilations:p,strides:h}),d},uu=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,u=e.group,a=e.kernelShape,c=e.pads,p=e.strides,h=e.wIsConst(),d=e.outputPadding,y=e.outputShape;return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,outputPadding:d,outputShape:y,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},kc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((d,y)=>d+y,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((d,y)=>d+y,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((d,y)=>d+y,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((d,y)=>d+y,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Oc=[2,3,1,0],Rc=(e,t,r)=>{let o=su(r,t),i=r.format==="NHWC",u=o.outputShape,a=u[i?3:1],c=t[0].dims[i?3:1];if(o.group!==1||a===1&&c===1){e.compute(Lo(t,o));return}let p=u[i?1:2],h=u[i?2:3],d=t[1].dims[2],y=t[1].dims[3],w=i?p*h:a,_=i?a:p*h,v=d*y*c,S=!0,I=e.kernelCustomData.wT??e.compute(yt(t[1],Oc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=I);let A=[t[0],I],x=t.length===3;x&&(!i&&t[2].dims.length===1?A.push(t[2].reshape([t[2].dims[0],1,1])):A.push(t[2])),e.compute(ou(A,o,u,w,_,v,x,S),{inputs:A})},Bc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],a=[1].concat(a),u=[1].concat(u),i=[1].concat(i);let p=su({...t,pads:c,strides:a,dilations:u,kernelShape:i},o);e.compute(Lo(o,p,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},du=(e,t)=>{kc(e.inputs,t),e.inputs[0].dims.length===3?Bc(e,t):Rc(e,e.inputs,t)}});var Dc,cu,pu,mu=Y(()=>{"use strict";ye();Se();Ze();_e();Dc=(e,t,r,o)=>{let i=M.size(t),u=t.length,a=U("input",e,u),c=j("output",e,u),p=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=M.normalizeAxis(p,u),d=y=>{let w=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,_=fe("uniforms.input_shape","uniforms.axis",u),v=o.reverse?w+(o.exclusive?" + 1":""):"0",S=o.reverse?_:w+(o.exclusive?"":" + 1");return`\n                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,c)}\n                ${y.mainStart()}\n                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${c.offsetToIndices("global_idx")};\n                  var sum = ${c.type.value}(0);\n                  let first : i32 = ${v};\n                  let last : i32 = ${S};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${c.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:h},...Z(t,t)]}),getShaderSource:d}},cu=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,i=e.inputs[1];e.compute(Dc(o,r,i,t),{inputs:[0]})},pu=e=>{let t=e.exclusive===1,r=e.reverse===1;return ve({exclusive:t,reverse:r})}});var zc,Mc,Uc,fu,hu,gu=Y(()=>{"use strict";ye();Se();Ze();_e();zc=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Mc=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},Uc=(e,t)=>{let r,o,i,u,a,c,p=t.format==="NHWC",h=t.blocksize,d=t.mode==="DCR";p?([r,o,i,u]=e.dims,a=d?[r,o,i,h,h,u/h**2]:[r,o,i,u/h**2,h,h],c=d?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,o,i,u]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],a=d?[r,h,h,u/h**2,o,i]:[r,u/h**2,h,h,o,i],c=d?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let y=e.reshape(a),w=y.dims.length,_=e.dataType,v=U("a",_,w),S=j("output",_,w),I=A=>`\n  ${A.registerUniform("output_size","u32").declareVariables(v,S)}\n\n  ${Mc(c,w,v,S)}\n\n  ${A.mainStart()}\n    ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${S.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${S.setByOffset("global_idx",v.getByIndices("aIndices"))}\n  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:A=>{let x=p?[r,o*h,i*h,u/h**2]:[r,u/h**2,o*h,i*h],E=M.size(x),P=y.dims,O=M.sortBasedOnPerm(P,c);return{outputs:[{dims:x,dataType:A[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},...Z(P,O)]}},getShaderSource:I}},fu=(e,t)=>{zc(e.inputs),e.compute(Uc(e.inputs[0],t))},hu=e=>ve({blocksize:e.blocksize,mode:e.mode,format:e.format})});var Fo,Wn,yu,Vc,Wc,qo,jo,bu,Nc,wu,vu,$u=Y(()=>{"use strict";ye();Se();Ze();_e();Fo="[a-zA-Z]|\\\\.\\\\.\\\\.",Wn="("+Fo+")+",yu="^"+Wn+"$",Vc="("+Wn+",)*"+Wn,Wc="^"+Vc+"$",qo=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},jo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,i]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(Wc)))throw new Error("Invalid LHS term");if(o.split(",").forEach((c,p)=>{let h=t[p].dims.slice();if(!c.match(RegExp(yu)))throw new Error("Invalid LHS term");let d=this.processTerm(c,!0,h,p);this.lhs.push(d)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([c,p])=>p.count===1||c==="...").map(([c])=>c).join("");else if(!i.match(RegExp(Wn)))throw new Error("Invalid RHS");i.match(RegExp(Fo,"g"))?.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let p=this.symbolToInfo.get(c);if(p===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(p.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,o){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(o)}else i={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,i)}processTerm(t,r,o,i=-1){let u=o.length,a=!1,c=[],p=0;if(!t.match(RegExp(yu))&&!r&&t!=="")throw new Error("Invalid LHS term");let h=t.match(RegExp(Fo,"g")),d=new qo(i);return h?.forEach((y,w)=>{if(y==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let _=u-h.length+1;if(_<0)throw new Error("Ellipsis out of bounds");if(c=o.slice(p,p+_),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<c.length;v++){let S=String.fromCharCode("0".charCodeAt(0)+v);d.addSymbol(S,w+v),this.addSymbol(S,o[p++],i)}}else d.addSymbol(y,w+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,o[p++],i)}),d}},bu=e=>e+"_max",Nc=(e,t,r,o)=>{let u=e.map(d=>d.length).map((d,y)=>U(`input${y}`,t,d)),a=M.size(o),c=j("output",t,o.length),p=[...r.symbolToInfo.keys()].filter(d=>!r.rhs.symbolToIndices.has(d)),h=d=>{let y=[],w="var prod = 1.0;",_="var sum = 0.0;",v="sum += prod;",S=[],I=[],A=[],x=[],E=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((O,R)=>{if(r.rhs.symbolToIndices.has(R)){let H=r.rhs.symbolToIndices.get(R)?.[0];H!==void 0&&r.lhs.forEach((N,K)=>{if(O.inputIndices.includes(K)){let Q=N.symbolToIndices.get(R);if(Q===void 0)throw new Error("Invalid symbol error");Q.forEach(he=>{y.push(`${u[K].indicesSet(`input${K}Indices`,he,c.indicesGet("outputIndices",H))}`)})}})}else r.lhs.forEach((H,N)=>{if(O.inputIndices.includes(N)){let K=H.symbolToIndices.get(R);if(K===void 0)throw new Error("Invalid symbol error");K.forEach(Q=>{S.push(`${u[N].indicesSet(`input${N}Indices`,Q,`${R}`)}`)}),x.push(`prod *= ${u[N].getByIndices(`input${N}Indices`)};`)}}),I.push(`for(var ${R}: u32 = 0; ${R} < uniforms.${bu(R)}; ${R}++) {`),A.push("}")});let P=E?[...y,`let sum = ${u.map((O,R)=>O.getByIndices(`input${R}Indices`)).join(" * ")};`]:[...y,_,...I,...S,w,...x,v,...A];return`\n            ${d.registerUniforms(p.map(O=>({name:`${bu(O)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,c)}\n\n            ${d.mainStart()}\n            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${c.offsetToIndices("global_idx")};\n            ${u.map((O,R)=>`var input${R}Indices: ${u[R].type.indices};`).join(`\n`)}\n            ${P.join(`\n`)};\n            ${c.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let d=p.filter(w=>r.symbolToInfo.has(w)).map(w=>({type:12,data:r.symbolToInfo.get(w)?.dimValue||0}));d.push({type:12,data:a});let y=e.map((w,_)=>[...Z(w)]).reduce((w,_)=>w.concat(_),d);return y.push(...Z(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:y}},getShaderSource:h}},wu=(e,t)=>{let r=new jo(e.inputs,t.equation),o=r.outputDims,i=e.inputs.map((u,a)=>u.dims);e.compute(Nc(i,e.inputs[0].dataType,r,o))},vu=e=>{let t=e.equation.replace(/\\s+/g,"");return ve({equation:t})}});var Gc,_u,Hc,Lc,Su,xu=Y(()=>{"use strict";ye();Se();_e();Gc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;o<r.length&&i<t.length;++o,++i)if(r[o]!==t[i]&&r[o]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},_u=(e,t)=>{let r=e.length-t.length,o=[];for(let i=0;i<r;++i)o.push(e[i]);for(let i=0;i<t.length;++i)o.push(t[i]===1?e[i+r]:t[i]);return o},Hc=(e,t)=>e.length>t.length?_u(e,t):_u(t,e),Lc=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Hc(t,r),i=e[0].dataType,u=i===9?4:1,a=Math.ceil(M.size(o)/u),c=h=>{let d=U("input",i,t.length,u),y=j("output",i,o.length,u),w;if(i===9){let _=(v,S,I="")=>`\n          let outputIndices${S} = ${y.offsetToIndices(`outputOffset + ${S}u`)};\n          let offset${S} = ${d.broadcastedIndicesToOffset(`outputIndices${S}`,y)};\n          let index${S} = offset${S} / 4u;\n          let component${S} = offset${S} % 4u;\n          ${v}[${S}] = ${I}(${d.getByOffset(`index${S}`)}[component${S}]);\n        `;w=`\n        let outputOffset = global_idx * ${u};\n        var data = vec4<u32>(0);\n        ${_("data",0,"u32")}\n        ${_("data",1,"u32")}\n        ${_("data",2,"u32")}\n        ${_("data",3,"u32")}\n        ${y.setByOffset("global_idx","data")}\n      }`}else w=`\n        let outputIndices = ${y.offsetToIndices("global_idx")};\n        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",y)};\n        ${y.setByOffset("global_idx",d.getByOffset("inputOffset"))}\n      }`;return`\n    ${h.registerUniform("vec_size","u32").declareVariables(d,y)}\n    ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${w}`},p=[{type:12,data:a},...Z(t,o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p})}},Su=e=>{Gc(e.inputs),e.compute(Lc(e.inputs),{inputs:[0]})}});var Fc,Cu,Au=Y(()=>{"use strict";ye();Se();_e();Rn();Fc=e=>{let t=e[0].dataType,r=M.size(e[0].dims),o=M.size(e[1].dims),i=o%4===0,u=a=>{let c=U("x",t,[1],4),p=U("bias",t,[1],4),h=j("y",t,[1],4),d=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],y=_=>`\n      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;\n      let bias${_} = ${p.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,w=i?`\n      let bias = ${p.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${y(0)}${y(1)}${y(2)}${y(3)}\n      let bias = ${c.type.value}(bias0, bias1, bias2, bias3);`;return`${a.registerUniforms(d).declareVariables(c,p,h)}\n\n    ${Bo(et(t))}\n\n    ${a.mainStart(or)}\n      ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${c.getByOffset("global_idx")};\n      ${w}\n      let x_in = x + bias;\n      ${h.setByOffset("global_idx",Do("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:u,getRunData:a=>({outputs:[{dims:a[0].dims,dataType:a[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(r/or/4)}})}},Cu=e=>{e.inputs.length<2||M.size(e.inputs[1].dims)===0?Bs(e):e.compute(Fc(e.inputs))}});var qc,jc,Iu,Tu,Eu=Y(()=>{"use strict";ye();Se();Ze();_e();qc=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},jc=(e,t)=>{let r=e[0].dims,o=e[1].dims,i=r.length,u=M.normalizeAxis(t.axis,i),a=r.slice(0);a.splice(u,1,...o);let c=r[u],p=e[0].dataType===9?4:1,h=Math.ceil(M.size(a)/p),d=[{type:12,data:h},{type:6,data:c},{type:12,data:u},...Z(e[0].dims,e[1].dims,a)],y=w=>{let _=U("data",e[0].dataType,e[0].dims.length,p),v=U("inputIndices",e[1].dataType,e[1].dims.length),S=j("output",e[0].dataType,a.length,p),I=x=>{let E=o.length,P=`var indicesIndices${x}  = ${v.type.indices}(0);`;for(let O=0;O<E;O++)P+=`${E>1?`indicesIndices${x}[${O}]`:`indicesIndices${x}`} = ${a.length>1?`outputIndices${x}[uniforms.axis + ${O}]`:`outputIndices${x}`};`;P+=`\n          var idx${x} = ${v.getByIndices(`indicesIndices${x}`)};\n          if (idx${x} < 0) {\n            idx${x} = idx${x} + uniforms.axisDimLimit;\n          }\n          var dataIndices${x} : ${_.type.indices};\n        `;for(let O=0,R=0;O<i;O++)O===u?(P+=`${i>1?`dataIndices${x}[${O}]`:`dataIndices${x}`} = u32(idx${x});`,R+=E):(P+=`${i>1?`dataIndices${x}[${O}]`:`dataIndices${x}`} = ${a.length>1?`outputIndices${x}[${R}]`:`outputIndices${x}`};`,R++);return P},A;if(e[0].dataType===9){let x=(E,P,O="")=>`\n          let outputIndices${P} = ${S.offsetToIndices(`outputOffset + ${P}u`)};\n          ${I(P)};\n          let offset${P} = ${_.indicesToOffset(`dataIndices${P}`)};\n          let index${P} = offset${P} / 4u;\n          let component${P} = offset${P} % 4u;\n          ${E}[${P}] = ${O}(${_.getByOffset(`index${P}`)}[component${P}]);\n        `;A=`\n        let outputOffset = global_idx * ${p};\n        var value = vec4<u32>(0);\n        ${x("value",0,"u32")}\n        ${x("value",1,"u32")}\n        ${x("value",2,"u32")}\n        ${x("value",3,"u32")}\n        ${S.setByOffset("global_idx","value")}\n      `}else A=`\n      let outputIndices = ${S.offsetToIndices("global_idx")};\n      ${I("")};\n      let value = ${_.getByIndices("dataIndices")};\n      ${S.setByOffset("global_idx","value")};\n      `;return`\n      ${w.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,v,S)}\n      ${w.mainStart()}\n        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${A}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:y}},Iu=e=>ve({axis:e.axis}),Tu=(e,t)=>{let r=e.inputs;qc(r),e.compute(jc(e.inputs,t))}});var Kc,Yc,Pu,ku,Ou=Y(()=>{"use strict";ye();Se();Ze();_e();Kc=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Yc=(e,t)=>{let r=e[0].dims,o=e[0].dataType,i=r.length,u=e[1].dims,a=e[1].dataType,c=M.normalizeAxis(t.axis,i),p=r[c],h=u.slice(0),d=M.size(h),y=U("input",o,i),w=U("indicesInput",a,u.length),_=j("output",o,h.length),v=[{type:12,data:d},{type:6,data:p},{type:12,data:c}];return v.push(...Z(r,u,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:v}),getShaderSource:A=>`\n      ${A.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,w,_)}\n      ${A.mainStart()}\n      ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${_.offsetToIndices("global_idx")};\n\n      var idx = ${w.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${y.type.indices}(outputIndices);\n      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${y.getByIndices("inputIndices")};\n\n      ${_.setByOffset("global_idx","value")};\n  }`}},Pu=e=>ve({axis:e.axis}),ku=(e,t)=>{let r=e.inputs;Kc(r),e.compute(Yc(e.inputs,t))}});var Zc,Xc,Ru,Bu,Du=Y(()=>{"use strict";ye();Se();_e();Zc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Xc=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[i,u,a]=Sn.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),c=[i,u];if(!c)throw new Error("Can\'t use gemm on the given tensors");let p=M.size(c),h=[{type:12,data:p},{type:12,data:i},{type:12,data:u},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}],d=["type","type"];e.length===3&&(h.push(...Z(e[2].dims)),d.push("rank")),h.push(...Z(c));let y=w=>{let _="";t.transA&&t.transB?_="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?_="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?_="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(_="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let v=t.alpha===1?"":"value *= uniforms.alpha;",S=U("a",e[0].dataType,e[0].dims),I=U("b",e[1].dataType,e[1].dims),A=S.type.value,x=null,E=[S,I];e.length===3&&(x=U("c",e[2].dataType,e[2].dims.length),E.push(x));let P=j("output",e[0].dataType,c.length);E.push(P);let O=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${w.registerUniforms(O).declareVariables(...E)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${A}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${_}\n    }\n\n    ${v}\n    ${(()=>x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",P)}; value += ${A}(uniforms.beta) * ${x.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:y}},Ru=e=>{let t=e.transA,r=e.transB,o=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:o,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Bu=(e,t)=>{Zc(e.inputs),e.compute(Xc(e.inputs,t))}});var Qc,Jc,ep,zu,Mu=Y(()=>{"use strict";ye();Se();_e();Qc=(e,t)=>{let r=e[0].dims,o=r,i=2,u=M.sizeToDimension(r,i),a=M.sizeFromDimension(r,i),c=Me(a),p=a/c,h=[r[0],r[1],p],d=["rank","type","type"],y=[{type:12,data:a},{type:12,data:p}];y.push(...Z(h,h));let w=_=>{let v=U("x",e[0].dataType,h.length,c),S=U("scale",e[1].dataType,e[1].dims),I=U("bias",e[2].dataType,e[2].dims),A=j("output",e[0].dataType,h.length,c),x=[v,S,I,A],E=v.type.value,P=c===1?"f32":`vec${c}<f32>`,O=64,R=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${P}, ${O}>;\n  const workgroupSize = ${O}u;\n  ${_.registerUniforms(R).declareVariables(...x)}\n  ${_.mainStart(O)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${P}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${P}(${v.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${$t("workgroupShared[0]",c)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${P}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${P}(${v.get("batch","channel","h")}) - ${P}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${$t("workgroupShared[0]",c)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${S.getByOffset("channel")});\n    let channelShift = f32(${I.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${v.get("batch","channel","h")} * ${E}(${P}(channelScale)) + ${E}(${P}(channelShift));\n      ${A.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:y}),getShaderSource:w}},Jc=(e,t,r,o,i,u,a,c)=>{let p=Me(a),h=64,d=p===1?"vec2f":`mat2x${p}f`,y=p===1?"f32":`vec${p}f`,w=(R,H)=>`${d}(${R}, ${H})`,_=i*a/p,v=Math.ceil(u/h),S=["type"],I=[{type:12,data:v},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(u*a/p)}],A=R=>{let H=U("input",t.dataType,t.dims,p);return`\n  ${R.declareVariables(H)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${R.mainStart(h)}\n    let currentImageNumber = global_idx / ${h} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${h}) % uniforms.C;\n    let wgOffset = local_id.x * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${Lt("f32",p)};\n    var squaredSum = ${Lt("f32",p)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${y}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${w("sum","squaredSum")};\n  }`},x=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${p}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:[i,a,h,2],dataType:1}],dispatchGroup:{x:i*a/p},programUniforms:I}),getShaderSource:A},{inputs:[t],outputs:[-1]})[0],E=[{type:12,data:_},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(h*a/p)}],P=["type","type","type"],O=R=>{let H=U("scale",r.dataType,r.dims,p),N=U("bias",o.dataType,o.dims,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${H.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${N.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${R.mainStart()}\n    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${Lt("f32",p)};\n    var squaredSum = ${Lt("f32",p)};\n    for (var i: u32 = 0; i < min(${h}, uniforms.H); i++) {\n        let value = input[offset + i + currentChannelNumber * ${h}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${c}));\n    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);\n    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${w("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${p};${c}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:[i,a,2],dataType:1}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:E}),getShaderSource:O},{inputs:[x,r,o],outputs:[-1]})[0]},ep=(e,t,r)=>{let o=t[0].dims,i=o,u=o[0],a=o[o.length-1],c=M.sizeFromDimension(o,1)/a,p=Me(a),h=M.size(i)/p,d=[{type:12,data:c},{type:12,data:Math.floor(a/p)}],y=["type","type"],w=Jc(e,t[0],t[1],t[2],u,c,a,r.epsilon),_=v=>{let S=Be(t[0].dataType),I=p===1?"vec2f":`mat2x${p}f`,A=p===1?S:`vec${p}<${S}>`,x=U("input",t[0].dataType,t[0].dims,p),E=j("output",t[0].dataType,i,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${x.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${I}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${v.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${A}(scale[0]), ${A}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${p}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:_},{inputs:[t[0],w]})},zu=(e,t)=>{t.format==="NHWC"?ep(e,e.inputs,t):e.compute(Qc(e.inputs,t))}});var tp,rp,Uu,Vu=Y(()=>{"use strict";ye();Se();_e();tp=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},rp=(e,t,r)=>{let o=t.simplified,i=e[0].dims,u=e[1],a=!o&&e[2],c=i,p=M.normalizeAxis(t.axis,i.length),h=M.sizeToDimension(i,p),d=M.sizeFromDimension(i,p),y=M.size(u.dims),w=a?M.size(a.dims):0;if(y!==d||a&&w!==d)throw new Error(`Size of X.shape()[axis:] == ${d}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${y} and bias size of ${w}`);let _=[];for(let O=0;O<i.length;++O)O<p?_.push(i[O]):_.push(1);let v=Me(d),S=["type","type"],I=[{type:12,data:h},{type:1,data:d},{type:12,data:Math.floor(d/v)},{type:1,data:t.epsilon}];a&&S.push("type");let A=r>1,x=r>2,E=O=>{let R=Be(e[0].dataType),H=[U("x",e[0].dataType,e[0].dims,v),U("scale",u.dataType,u.dims,v)];a&&H.push(U("bias",a.dataType,a.dims,v)),H.push(j("output",e[0].dataType,c,v)),A&&H.push(j("mean_data_output",1,_)),x&&H.push(j("inv_std_output",1,_));let N=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${O.registerUniforms(N).declareVariables(...H)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${Lt("f32",v)};\n    var mean_square_vector = ${Lt("f32",v)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${ir(R,v,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${$t("mean_vector",v)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${$t("mean_square_vector",v)} / uniforms.norm_size ${o?"":"- mean * mean"} + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${ir(R,v,"x[j + offset]")};\n      let f32scale = ${ir(R,v,"scale[j]")};\n      output[j + offset] = ${H[0].type.value}((f32input ${o?"":"- mean"}) * inv_std_dev * f32scale\n        ${a?`+ ${ir(R,v,"bias[j]")}`:""}\n      );\n    }\n\n    ${A?"mean_data_output[global_idx] = mean":""};\n    ${x?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`},P=[{dims:c,dataType:e[0].dataType}];return A&&P.push({dims:_,dataType:1}),x&&P.push({dims:_,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${v};${r};${o}`,inputDependencies:S},getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(h/64)},programUniforms:I}),getShaderSource:E}},Uu=(e,t)=>{tp(e.inputs),e.compute(rp(e.inputs,t,e.outputCount))}});var np,op,Wu,Nu,Gu=Y(()=>{"use strict";ye();Se();Ze();_e();np=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],o=r.dims.length;if(r.dims[o-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),u=t.blockSize/8*t.bits,a=e[1];if(!M.areEqual(a.dims,[t.n,i,u]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let p=e[2].dims;if(M.size(p)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let d=e[3].dims,y=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(M.size(d)!==y)throw new Error("zeroPoints input size error.")}},op=(e,t,r,o)=>{let i=e[0].dims,u=i.length,a=Math.floor((t.k+t.blockSize-1)/t.blockSize),c=i[u-2],p=t.k,h=t.n,d=i.slice(0,u-2),y=M.size(d),_=t.blockSize/8*t.bits/4,v=e[0].dataType,S=Me(c),I=Me(t.k),A=Me(_),x=tr(v),E=c*a*x,P=Math.floor(o/E),O=a<=r[0]&&P>0,R=!O||P>=4?Me(h):P>=2&&Me(h)>=2?2:1,H=d.concat([c,h]),N=M.size(H)/R/S,K=O?[]:[{type:12,data:N},{type:12,data:t.blockSize}],Q=[y,c,p/I],he=M.convertShape(e[1].dims).slice();he.splice(-1,1,_/A),K.push(...Z(Q)),K.push(...Z(he)),K.push(...Z(e[2].dims)),e.length===4&&K.push(...Z(M.convertShape(e[3].dims)));let W=[y,c,h/R];K.push(...Z(W));let se=Ce=>{let We=Q.length,ee=U("a",e[0].dataType,We,I),ae=U("b",12,he.length,A),Ae=U("scales",e[2].dataType,e[2].dims.length),me=[ee,ae,Ae],ie=e.length===4?U("zero_points",12,e[3].dims.length):void 0;ie&&me.push(ie);let ue=W.length,le=j("output",e[0].dataType,ue,R),qe=[{name:"output_size",type:"u32"},{name:"block_size",type:"u32"}],G=Be(e[0].dataType),ne=(()=>{switch(I){case 1:return`array<${G}, 8>`;case 2:return`mat4x2<${G}>`;case 4:return`mat2x4<${G}>`;default:throw new Error(`${I}-component is not supported.`)}})(),xe=`\n        for (var word: u32 = 0; word < ${_}; word += ${A}) {\n          ${ae.indicesSet("b_indices","2","word")};\n          let b_data = ${ae.getByIndices("b_indices")};\n          for (var i: u32 = 0; i < ${A}; i++) {\n            let b_value: u32 = ${A===1?"b_data":"b_data[word + i]"};\n            let b_mask: u32 = 0x0F0F0F0Fu;\n            let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);\n            let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);\n            let b_quantized_values = ${ne}(${Array.from({length:4},(De,Ge)=>`${G}(b_value_lower[${Ge}]), ${G}(b_value_upper[${Ge}])`).join(", ")});\n            let b_dequantized_values = ${(()=>I===1?`${ne}(${Array.from({length:8},(De,Ge)=>`(b_quantized_values[${Ge}] - zero_point) * scale`).join(", ")});`:`(b_quantized_values - ${ne}(${Array(8).fill("zero_point").join(",")})) * scale;`)()};\n            // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n            for (var m: u32 = 0; m < ${O?c:S}u; m++) {\n              ${ee.indicesSet("a_indices",We-2,O?"m":`row * ${S} + m`)};\n              ${ee.indicesSet("a_indices",We-1,"word_offset")};\n              var input_offset = ${ee.indicesToOffset("a_indices")};\n              var a_data: ${ne};\n              for (var j: u32 = 0; j < ${8/I}; j++) {\n                a_data[j] = ${ee.getByOffset("input_offset")};\n                input_offset++;\n              }\n              ${O?"workgroup_shared[workgroup_shared_offset + m]":"output_values[m]"}${R>1?"[c]":""} += ${Array.from({length:8/I},(De,Ge)=>`${I===1?`a_data[${Ge}] * b_dequantized_values[${Ge}]`:`dot(a_data[${Ge}], b_dequantized_values[${Ge}])`}`).join(" + ")};\n            }\n            word_offset += ${8/I};\n          }\n        }`,Ke=ie?`\n          zero_point_offset += 4;\n          if (zero_point_offset == 32) {\n            zero_point_offset = 0;\n            zero_point_index++;\n            zero_point_word = ${ie.getByOffset("zero_point_index")};\n          }`:"";return O?`\n        var<workgroup> workgroup_shared: array<${le.type.value}, ${c*a}>;\n        ${Ce.declareVariables(...me,le)}\n        ${Ce.mainStart([a,1,1])}\n          var a_indices: ${ee.type.indices};\n          var block = local_id.x;\n          var col = workgroup_id.y;\n          var batch = workgroup_id.z;\n          ${ee.indicesSet("a_indices","0","batch")};\n          // Two zero points are packed into one byte when uniforms.bits is 4.\n          for (var c: u32 = 0; c < ${R}; c++) {\n            let col_times_components_plus_c = col * ${R} + c;\n              ${ie?`\n            var zero_point_bytes_per_col: u32 = (${a} + 1) / 2;\n            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);\n            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;\n            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;\n            var zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            var zero_point_word: u32 = ${ie.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}\n            var b_indices: ${ae.type.indices};\n            ${ae.indicesSet("b_indices","0","col_times_components_plus_c")};\n            // The scale and zero points are computed per block.\n            var scales_index = col_times_components_plus_c * ${a} + block;\n            let scale = ${Ae.getByOffset("scales_index")};\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${G}(${ie?"(zero_point_word) & 0xFu":8});\n            ${ae.indicesSet("b_indices","1","block")};\n            var word_offset: u32 = block * ${t.blockSize/I};\n            var workgroup_shared_offset: u32 = block * ${c};\n            ${xe}\n          }\n          workgroupBarrier();\n          var output_indices: ${le.type.indices};\n          var elements_per_thread: u32 = ${Math.ceil(c/a)};\n          ${le.indicesSet("output_indices","0","batch")};\n          ${le.indicesSet("output_indices",ue-1,"col")};\n          ${le.indicesSet("output_indices",ue-2,"local_id.x * elements_per_thread")};\n          var output_offset = ${le.indicesToOffset("output_indices")};\n          for (var m: u32 = 0u; m < elements_per_thread; m++) {\n            var row = m + local_id.x * elements_per_thread;\n            if (row < ${c}) {\n              var output_value: ${le.type.value} = ${le.type.value}(0);\n              var workgroup_shared_offset: u32 = row;\n              for (var b: u32 = 0u; b < ${a}u; b++) {\n                output_value += workgroup_shared[workgroup_shared_offset];\n                workgroup_shared_offset += ${c};\n              }\n              ${le.setByOffset("output_offset","output_value")};\n              output_offset += ${h/R};\n            }\n          }\n        }`:`\n        ${Ce.registerUniforms(qe).declareVariables(...me,le)}\n        ${Ce.mainStart()}\n          ${Ce.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var output_values: array<${le.type.value}, ${S}>;\n          var output_indices = ${le.offsetToIndices("global_idx")};\n          var col = ${le.indicesGet("output_indices",ue-1)};\n          var row = ${le.indicesGet("output_indices",ue-2)};\n          var a_indices: ${ee.type.indices} = output_indices;\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${ie?`\n          var zero_point_abs_offset = col * ${R} * ((${a} + 1) / 2);\n          var zero_point_index: u32 = zero_point_abs_offset / 4;\n          var zero_point_word: u32 = ${ie.getByOffset("zero_point_index")};\n          var zero_point_offset: u32 = (zero_point_abs_offset % 4) * 8;`:""}\n          var scale_index = col * ${a*R};\n          var b_indices: ${ae.type.indices};\n          for (var c: u32 = 0; c < ${R}; c++) {\n            ${ae.indicesSet("b_indices","0",`col * ${R} + c`)};\n            var block_offset: u32 = 0;\n            for (var block: u32 = 0; block < ${a}; block++) {\n              // The scale and zero points are computed per block.\n              let scale = ${Ae.getByOffset("scale_index")};\n              // The default zero point is 8 for unsigned 4-bit quantization.\n              let zero_point = ${G}(${ie?"extractBits(zero_point_word, zero_point_offset, 4)":8});\n              ${ae.indicesSet("b_indices","1","block")};\n              var word_offset: u32 = block_offset;\n              ${xe}\n              scale_index++;\n              ${Ke}\n              block_offset += uniforms.block_size / ${I};\n            }\n            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.\n            ${ie?`if (zero_point_offset % 8 > 0) {\n                ${Ke}\n              }`:""}\n            }\n            for (var k: u32 = 0u; k < ${S}u; k++) {\n              ${le.indicesSet("output_indices",ue-2,`${S} * row + k`)};\n              ${le.setByIndices("output_indices","output_values[k]")}\n            }\n        }`};return{name:O?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${c};${v};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:H,dataType:v}],name:O?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:O?{x:1,y:Math.ceil(h/R),z:y}:{x:Math.ceil(N/64)},programUniforms:K}),getShaderSource:se}},Wu=(e,t)=>{np(e.inputs,t);let r=e.getMaxComputeWorkgroupSizes(),o=e.getMaxComputeWorkgroupStoragesize();e.compute(op(e.inputs,t,r,o))},Nu=e=>ve(e)});var it,ip,Lu,Hu,ap,Ko,Fu,qu=Y(()=>{"use strict";ye();Se();Ze();_n();Ro();_e();Sr();it=(e,t)=>e.length>t&&e[t].dims.length>0&&M.size(e[t].dims)>0?e[t]:void 0,ip=(e,t)=>{let r=e[0],o=it(e,1),i=it(e,2),u=it(e,3),a=it(e,4),c=it(e,5),p=it(e,6),h=it(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,y=r.dims[0],w=r.dims[1],_=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],v=w,S=0,I=0,A=Math.floor(_/t.numHeads);if(p&&h){if(p.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(p.dims[0]!==y||p.dims[1]!==t.numHeads||p.dims[3]!==A)throw new Error(\'Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)\');if(h.dims[0]!==y||h.dims[1]!==t.numHeads||h.dims[3]!==A)throw new Error(\'Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)\');if(p.dims[2]!==h.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)\');if(h.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');S=p.dims[2],I=p.dims[2]}else if(p||h)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let x;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');x=2,v=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==A)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(i)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');x=5,v=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==A)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');x=0,v=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');x=3}if(u){if(u.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let E=0;if(a){E=8;let N=a.dims;throw N.length===1?N[0]===y?E=1:N[0]===3*y+2&&(E=3):N.length===2&&N[0]===y&&N[1]===v&&(E=5),E===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let P=!1,O=_;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==i.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(i.dims.length===3){if(v!==i.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');O=i.dims[2]}else{if(v!==i.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');O=i.dims[1]*i.dims[3],P=!0}}let R=S+v,H=!1;if(a)throw new Error("Key padding mask is not supported");if(c){if(c.dims.length!==4)throw new Error(\'Input "relative_position_bias" is expected to have 4 dimensions\');if(c.dims[0]!==y&&c.dims[0]!==1||c.dims[1]!==t.numHeads||c.dims[2]!==w||c.dims[3]!==R)throw new Error(\'Input "relative_position_bias" shape (batch_size, 1, sequence_length, kv_sequence_length)\')}return{batchSize:y,sequenceLength:w,pastSequenceLength:S,kvSequenceLength:v,totalSequenceLength:R,maxSequenceLength:I,inputHiddenSize:0,hiddenSize:_,vHiddenSize:O,headSize:A,vHeadSize:Math.floor(O/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:E,scale:t.scale,broadcastResPosBias:H,passPastInKv:P,qkvFormat:x}},Lu=e=>ve({...e}),Hu=ve({perm:[0,2,1,3]}),ap=(e,t,r,o,i,u,a)=>{let c=[o,i,u],p=M.size(c),h=[{type:12,data:p},{type:12,data:a},{type:12,data:u}],d=y=>{let w=j("qkv_with_bias",t.dataType,c),_=U("qkv",t.dataType,c),v=U("bias",r.dataType,c),S=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${y.registerUniforms(S).declareVariables(_,v,w)}\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:d},{inputs:[t,r],outputs:[-1]})[0]},Ko=(e,t,r,o,i,u,a,c)=>{let p=u;if(a){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return p=ap(e,u,a,t,o,r*i,c),p=p.reshape([t,o,r,i]),e.compute(yt(p,Hu.perm),{inputs:[p],outputs:[-1]})[0]}else return u.dims.length===3&&(p=u.reshape([t,o,r,i])),e.compute(yt(p,Hu.perm),{inputs:[p],outputs:[-1]})[0]},Fu=(e,t)=>{let r=ip(e.inputs,t),o=e.inputs[0],i=it(e.inputs,1),u=it(e.inputs,2),a=it(e.inputs,3),c=it(e.inputs,4),p=it(e.inputs,5),h=it(e.inputs,6),d=it(e.inputs,7);if(o.dims.length===5)throw new Error("Packed QKV is not implemented");if(i?.dims.length===5)throw new Error("Packed KV is not implemented");let y=i&&u&&i.dims.length===4&&u.dims.length===4,w=Ko(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,o,a,0);if(y)return Pn(e,w,i,u,c,void 0,h,d,p,r,t);if(!i||!u)throw new Error("key and value must be provided");let _=Ko(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,a,r.hiddenSize),v=Ko(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,u,a,2*r.hiddenSize);Pn(e,w,_,v,c,void 0,h,d,p,r,t)}});var sp,up,dp,lp,cp,pp,mp,fp,ju,Ku=Y(()=>{"use strict";ye();Se();_e();sp=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},up=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n            k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n              break;\n            }\n            offset += k * i32(${fe("uniforms.x_strides",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},dp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${fe("uniforms.x_shape",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},lp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                  k = i32(${fe("uniforms.x_shape",i,t)}) - 1;\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},cp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0)  {\n                  k += i32(${fe("uniforms.x_shape",i,t)}]);\n                }\n                if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                  k -= i32(${fe("uniforms.x_shape",i,t)});\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},pp=(e,t,r)=>{switch(r.mode){case 0:return up(e,t,r.pads.length);case 1:return dp(e,t,r.pads.length);case 2:return lp(e,t,r.pads.length);case 3:return cp(e,t,r.pads.length);default:throw new Error("Invalid mode")}},mp=(e,t)=>{let r=M.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,i=M.size(r),u=[{type:12,data:i},{type:6,data:t.pads}];t.mode===0&&u.push({type:e[0].dataType,data:t.value}),u.push(...Z(e[0].dims,r));let a=["rank"],c=p=>{let h=j("output",e[0].dataType,r.length),d=U("x",e[0].dataType,o.length),y=d.type.value,w=pp(h,o.length,t),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&_.push({name:"constant_value",type:y}),`\n            ${p.registerUniforms(_).declareVariables(d,h)}\n            ${p.mainStart()}\n            ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${h.offsetToIndices("global_idx")};\n\n            var value = ${y}(0);\n            ${w}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(r)/64)},programUniforms:u}),getShaderSource:c}},fp=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,u=new Int32Array(2*i).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let p=0;p<c.length;p++)u[Number(c[p])]=Number(r[p]),u[Number(c[p])+i]=Number(r[p+c.length])}else r.forEach((c,p)=>u[Number(p)]=Number(c));let a=[];return u.forEach(c=>a.push(c)),{mode:t.mode,value:o,pads:a}}else return t},ju=(e,t)=>{sp(e.inputs);let r=fp(e.inputs,t);e.compute(mp(e.inputs,r),{inputs:[0]})}});var Nn,Yu,Zu,Xu,Qu,hp,gp,Ju,ed,td,rd,nd,od,id,ad,sd,ud,dd,ld,cd=Y(()=>{"use strict";$r();ye();Se();_e();Nn=e=>{if(vr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Yu=(e,t,r)=>{let o=t.format==="NHWC",i=e.dims.slice();o&&i.splice(1,0,i.pop());let u=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),c=t.strides.slice(),p=u?t.dilations.slice():[],h=t.pads.slice();nr.adjustPoolAttributes(r,i,a,c,p,h);let d=nr.computePoolOutputShape(r,i,c,p,a,h,t.autoPad),y=Object.assign({},t);u?Object.assign(y,{kernelShape:a,strides:c,pads:h,dilations:p,cacheKey:t.cacheKey}):Object.assign(y,{kernelShape:a,strides:c,pads:h,cacheKey:t.cacheKey});let w=d.slice();return w.push(w.splice(1,1)[0]),[y,o?w:d]},Zu=(e,t)=>{let r=t.format==="NHWC",o=M.size(e),i=M.size(t.kernelShape),u=[{type:12,data:o},{type:12,data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let c=t.kernelShape[t.kernelShape.length-1],p=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],d=t.pads[t.pads.length-1],y=!!(h+d);u.push({type:12,data:c},{type:12,data:p},{type:12,data:h},{type:12,data:d}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let w=!1;if(t.kernelShape.length===2){let _=t.kernelShape[t.kernelShape.length-2],v=t.strides[t.strides.length-2],S=t.pads[t.pads.length/2-2],I=t.pads[t.pads.length-2];w=!!(S+I),u.push({type:12,data:_},{type:12,data:v},{type:12,data:S},{type:12,data:I}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,a,!0,y,w]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let c=M.computeStrides(t.kernelShape);u.push({type:12,data:c},{type:12,data:t.pads},{type:12,data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:c.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let p=t.pads.reduce((h,d)=>h+d);return[u,a,!!p,!1,!1]}},Xu=(e,t,r,o,i,u,a,c,p,h,d,y)=>{let w=i.format==="NHWC",_=t.type.value,v=j("output",t.type.tensor,o);if(i.kernelShape.length<=2){let S="",I="",A="",x=r-(w?2:1);if(d?S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${x}] < 0 || xIndices[${x}]\n                      >= uniforms.x_shape[${x}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`:S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`,i.kernelShape.length===2){let P=r-(w?3:2);y?I=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${P}] < 0 || xIndices[${P}] >= uniforms.x_shape[${P}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:I=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;\n                `,A=`\n              }\n            `}return`\n            ${e.registerUniforms(p).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var value = ${_}(${c});\n              var pad = 0;\n              ${I}\n              ${S}\n              ${A}\n              ${a}\n\n              output[global_idx] = value;\n            }`}else{if(w)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let S=i.kernelShape.length,I=i.pads.length,A="";return h?A=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${u}\n              }`:A=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${u}\n            `,`\n            ${e.registerUniforms(p).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${S}>;\n\n              var value = ${_}(${c});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${S-1}u; j++) {\n                  offsets[j] = offset / ${fe("uniforms.kernelStrides","j",S)};\n                  offset -= offsets[j] * ${fe("uniforms.kernelStrides","j",S)};\n                }\n                offsets[${S-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-S}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${fe("uniforms.strides",`j - ${r-S}u`,S)}\n                    + offsets[j - ${r-S}u] - ${fe("uniforms.pads","j - 2u",I)};\n                  ${A}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Qu=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,hp=e=>`${Qu(e)};${e.countIncludePad}`,gp=e=>`${Qu(e)};${e.storageOrder};${e.dilations}`,Ju=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),ed=(e,t,r,o)=>{let[i,u]=Yu(t,o,r),a=U("x",t.dataType,t.dims.length),c=a.type.value,p="value += x_val;",h="";i.countIncludePad?h+=`value /= ${c}(uniforms.kernelSize);`:h+=`value /= ${c}(i32(uniforms.kernelSize) - pad);`;let[d,y,w,_,v]=Zu(u,i);d.push(...Z(t.dims,u));let S=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:d}),getShaderSource:I=>Xu(I,a,t.dims.length,u.length,i,p,h,0,y,w,_,v)}},td=e=>{let t=e.count_include_pad!==0,r=Ju(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:hp(o)}},rd=(e,t)=>{Nn(e.inputs),e.compute(ed("AveragePool",e.inputs[0],!1,t))},nd={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},od=e=>{let t=e.format;return{format:t,...nd,cacheKey:t}},id=(e,t)=>{Nn(e.inputs),e.compute(ed("GlobalAveragePool",e.inputs[0],!0,t))},ad=(e,t,r,o)=>{let[i,u]=Yu(t,o,r),a=`\n      value = max(x_val, value);\n    `,c="",p=U("x",t.dataType,t.dims.length),h=["rank"],[d,y,w,_,v]=Zu(u,i);return d.push(...Z(t.dims,u)),{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:d}),getShaderSource:S=>Xu(S,p,t.dims.length,u.length,i,a,c,t.dataType===10?-65504:-1e5,y,w,_,v)}},sd=(e,t)=>{Nn(e.inputs),e.compute(ad("MaxPool",e.inputs[0],!1,t))},ud=e=>{let t=e.storage_order,r=e.dilations,o=Ju(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...o,cacheKey:""};return{...i,cacheKey:gp(i)}},dd=e=>{let t=e.format;return{format:t,...nd,cacheKey:t}},ld=(e,t)=>{Nn(e.inputs),e.compute(ad("GlobalMaxPool",e.inputs[0],!0,t))}});var bp,wp,pd,md=Y(()=>{"use strict";$r();ye();_e();bp=(e,t,r)=>{let o=e===t,i=e<t&&r<0,u=e>t&&r>0;if(o||i||u)throw new Error("Range these inputs\' contents are invalid.")},wp=(e,t,r,o)=>{let i=Math.abs(Math.ceil((t-e)/r)),u=[i],a=i,c=[{type:12,data:a},{type:o,data:e},{type:o,data:r},...Z(u)],p=h=>{let d=j("output",o,u.length),y=d.type.value,w=[{name:"outputSize",type:"u32"},{name:"start",type:y},{name:"delta",type:y}];return`\n        ${h.registerUniforms(w).declareVariables(d)}\n        ${h.mainStart()}\n        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${y}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:p,getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:c})}},pd=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),vr.webgpu.validateInputContent&&bp(t,r,o),e.compute(wp(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var vp,$p,_p,Sp,xp,Cp,Ap,Ip,Tp,Ep,Pp,fd,kp,Op,Rp,Bp,Dp,hd,gd,yd=Y(()=>{"use strict";ye();Se();Ze();_e();vp=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},$p=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((i,u)=>o[i]=e[u]),o},_p=(e,t,r,o,i,u)=>{let[a,c,p]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(d=>u.push(d));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length>0){if(e[c].getFloat32Array().forEach(d=>o.push(d)),o.length!==0&&o.length!==h&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");vp(o,t),t.axes.length>0&&$p(o,t.axes,h).forEach((d,y)=>o[y]=d)}if(p>0&&e.length>p&&(e[p].getBigInt64Array().forEach(d=>i.push(Number(d))),i.length!==h||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(i.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof i<"u"&&o.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Sp=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",xp=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Cp=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?o:e.slice();return t.length>0?(t.forEach((u,a)=>{o[u]=i[a],o[a+r]=i[t.length+a]}),o):i},Ap=(e,t,r,o)=>{let i=[];if(r.length>0)if(o.length>0){if(e.forEach(u=>i.push(u)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((u,a)=>i[u]=r[a])}else r.forEach(u=>i.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((u,a)=>Math.round(u*t[a]))}return i},Ip=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=o),r.axes.forEach(u=>i[u]=Math.round(e[u]*t[u]))):(t.fill(o,0,t.length),i.forEach((u,a)=>i[a]=Math.round(u*t[a]))),i},Tp=(e,t,r,o,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${fe("uniforms.scales","i",o)};\n        var roi_low = ${fe("uniforms.roi","i",i)};\n        var roi_hi = ${fe("uniforms.roi",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${fe("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Ep=(e,t,r,o,i,u,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${fe("uniforms.scales","i",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${fe("uniforms.roi","i",u)};\n          var roi_hi = ${fe("uniforms.roi",`i + ${r.length}`,u)};\n          var input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Pp=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${fe("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,fd=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",kp=(e,t,r,o,i)=>{let[a,c,p,h]=r.length===2?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(row, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(col, ${r[p]} - 1))`)};\n      ${fd(e,h,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${d} = originalIndices[${c}];\n      var col:${d} = originalIndices[${p}];\n      ${o?`if (row < 0 || row > (${r[c]} - 1) || col < 0 || col > (${r[p]} - 1)) {\n        return ${i};\n      }`:""};\n      row = max(0, min(row, ${r[c]} - 1));\n      col = max(0, min(col, ${r[p]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${h}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${d} = getInputValue(batch, channel, row1, col1);\n      var x12: ${d} = getInputValue(batch, channel, row1, col2);\n      var x21: ${d} = getInputValue(batch, channel, row2, col1);\n      var x22: ${d} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${d} = abs(row - ${d}(row1));\n      var dx2: ${d} = abs(${d}(row2) - row);\n      var dy1: ${d} = abs(col - ${d}(col1));\n      var dy2: ${d} = abs(${d}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Op=(e,t,r,o,i,u,a,c,p,h)=>{let d=r.length===2,y=!0,[w,_]=d?[0,1]:y?[2,3]:[1,2],v=e.type.value,S=I=>{let A=I===w?"row":"col";return`\n      fn ${A}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${v} {\n        var output_index = ${t.indicesGet("output_indices",I)};\n        var originalIdx: ${v} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[I]},\n        ${o[I]}, ${r[I]}, ${u[I]}, ${u[I]} + ${r.length});\n        var fractOriginalIdx: ${v} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${c} && (originalIdx < 0 || originalIdx > (${r[I]} - 1))) {\n          return ${p};\n        }\n        var data: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${A}: ${v} = originalIdx + ${v}(i);\n          if (${A} < 0 || ${A} >= ${r[I]}) {\n            ${(()=>h?`coefs[i + 1] = 0.0;\n                        continue;`:c?`return ${p};`:`${A} = max(0, min(${A}, ${r[I]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",I,`u32(${A})`)};\n          data[i + 1] = ${I===w?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${S(w)};\n    ${S(_)};\n  fn getCubicInterpolationCoefs(s: ${v}) -> array<${v}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${v} = 1.0 - absS;\n    var twoMinusAbsS: ${v} = 2.0 - absS;\n    var onePlusAbsS: ${v} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${v}, 4>, coefs: array<${v}, 4>) -> ${v} {\n    var coefsSum: ${v} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${v} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Rp=(e,t,r,o,i)=>{let[a,c,p,h,d]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(depth, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(height, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",h,`max(0, min(width, ${r[h]} - 1))`)};\n      ${fd(e,d,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${y} = originalIndices[${c}];\n      var height:${y} = originalIndices[${p}];\n      var width:${y} = originalIndices[${h}];\n      ${o?`if (depth < 0 || depth > (${r[c]} - 1) || height < 0 || height > (${r[p]} - 1) || width < 0 || (width > ${r[h]} - 1)) {\n      return ${i};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[c]} - 1));\n      height = max(0, min(height, ${r[p]} - 1));\n      width = max(0, min(width, ${r[h]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${d}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${y} = abs(depth - ${y}(depth1));\n      var dx2: ${y} = abs(${y}(depth2) - depth);\n      var dy1: ${y} = abs(height - ${y}(height1));\n      var dy2: ${y} = abs(${y}(height2) - height);\n      var dz1: ${y} = abs(width - ${y}(width1));\n      var dz2: ${y} = abs(${y}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Bp=(e,t,r,o,i,u)=>{let a=e.dims,c=Cp(u,t.axes,a.length),p=Ap(a,o,i,t.axes),h=o.slice();o.length===0&&(h=a.map((x,E)=>x===0?1:p[E]/x),t.keepAspectRatioPolicy!=="stretch"&&(p=Ip(a,h,t)));let d=j("output",e.dataType,p.length),y=U("input",e.dataType,a.length),w=M.size(p),_=a.length===p.length&&a.every((x,E)=>x===p[E]),v=t.coordinateTransformMode==="tf_crop_and_resize",S=t.extrapolationValue,I=y.type.value,A=x=>`\n      ${_?"":`\n      ${Sp(t.coordinateTransformMode,I)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Pp(y,a)};\n              ${xp(t.nearestMode,r,I)};\n              ${Ep(y,d,a,p,h.length,c.length,v)};\n              `;case"linear":return`\n              ${Tp(d,a,p,h.length,c.length)};\n              ${(()=>{if(a.length===2||a.length===4)return`${kp(y,d,a,v,S)}`;if(a.length===3||a.length===5)return`${Rp(y,d,a,v,S)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(a.length===2||a.length===4)return`${Op(y,d,a,p,h,c,t.cubicCoeffA,v,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${x.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",c.length).declareVariables(y,d)}\n      ${x.mainStart()}\n        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${_?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${y.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${y.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${c.length>0?c:""}|${_}|${a}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[{dims:p,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:12,data:w},{type:1,data:h},{type:1,data:c},...Z(a,p)]})}},Dp=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},hd=(e,t)=>{let r=[],o=[],i=[],u=Dp(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");_p(e.inputs,t,u,r,o,i),e.compute(Bp(e.inputs[0],t,u,r,o,i),{inputs:[0]})},gd=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,i=e.cubicCoeffA,u=e.excludeOutside!==0,a=e.extrapolationValue,c=e.keepAspectRatioPolicy,p=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return ve({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:i,excludeOutside:u,extrapolationValue:a,keepAspectRatioPolicy:c,mode:p,nearestMode:h})}});var zp,Mp,bd,wd=Y(()=>{"use strict";ye();Se();Ze();_e();zp=(e,t)=>{let[r,o,i,u]=e,{numHeads:a,rotaryEmbeddingDim:c}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input \'x\' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!M.areEqual(o.dims,[])&&!M.areEqual(o.dims,[1])&&o.dims.length!==2)throw new Error(`Input \'position_ids\' is expected to have 0, 1, or 2 dimensions, got ${o.dims.length}`);if(i.dims.length!==2)throw new Error(`Input \'cos_cache\' is expected to have 2 dimensions, got ${i.dims.length}`);if(u.dims.length!==2)throw new Error(`Input \'sin_cache\' is expected to have 2 dimensions, got ${u.dims.length}`);if(!M.areEqual(i.dims,u.dims))throw new Error("Inputs \'cos_cache\' and \'sin_cache\' are expected to have the same shape");if(c>0&&a===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let p=r.dims[0],h=r.dims[r.dims.length-2],d=i.dims[0],y=M.sizeFromDimension(r.dims,1)/h,w=c===0?i.dims[1]*2:y/a;if(c>w)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(o.dims.length===2){if(p!==o.dims[0])throw new Error(`Input \'position_ids\' dimension 0 should be of size batch_size, got ${o.dims[0]}`);if(h!==o.dims[1])throw new Error(`Input \'position_ids\' dimension 1 should be of size sequence_length, got ${o.dims[1]}`)}if(w/2!==i.dims[1]&&c/2!==i.dims[1])throw new Error(`Input \'cos_cache\' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(h>d)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Mp=(e,t)=>{let{interleaved:r,numHeads:o,rotaryEmbeddingDim:i,scale:u}=t,a=e[0].dims[0],c=M.sizeFromDimension(e[0].dims,1),p=e[0].dims[e[0].dims.length-2],h=c/p,d=e[2].dims[1],y=i===0?d*2:h/o,w=new Array(a,p,h/y,y-d),_=M.computeStrides(w),v=[{type:1,data:u},{type:12,data:w},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[c,h,y,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[c,y,p*y,1]}):[],...Z(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],S=I=>{let A=U("input",e[0].dataType,e[0].dims.length),x=U("position_ids",e[1].dataType,e[1].dims.length),E=U("cos_cache",e[2].dataType,e[2].dims.length),P=U("sin_cache",e[3].dataType,e[3].dims.length),O=j("output",e[0].dataType,e[0].dims.length);return I.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:w.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`\n        ${I.declareVariables(A,x,E,P,O)}\n\n        ${I.mainStart(or)}\n          let half_rotary_emb_dim = uniforms.${E.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${I.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${x.broadcastedIndicesToOffset("bsnh.xy",j("",x.type.tensor,2))};\n            let position_id =\n                u32(${x.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});\n            let j = i + select(half_rotary_emb_dim, 1, ${r});\n            let re = ${A.getByOffset("i")} * ${E.get("position_id","bsnh[3]")} -\n                ${A.getByOffset("j")} * ${P.get("position_id","bsnh[3]")};\n            ${O.setByOffset("i","re")}\n            let im = ${A.getByOffset("i")} * ${P.get("position_id","bsnh[3]")} +\n                ${A.getByOffset("j")} * ${E.get("position_id","bsnh[3]")};\n            ${O.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${O.setByOffset("k",A.getByOffset("k"))}\n          }\n        }`};return{name:"RotaryEmbedding",shaderCache:{hint:ve({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(w)/or)},programUniforms:v})}},bd=(e,t)=>{zp(e.inputs,t),e.compute(Mp(e.inputs,t))}});var Up,Vp,vd,$d=Y(()=>{"use strict";ye();Se();_e();Up=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},Vp=(e,t,r,o)=>{let i=t.simplified,u=e[0].dims,a=M.size(u),c=u,p=a,h=u.slice(-1)[0],d=o?u.slice(0,-1).concat(1):[],y=!i&&e.length>3,w=e.length>4,_=o&&r>1,v=o&&r>2,S=r>3,I=64,A=Me(h),x=[{type:12,data:p},{type:12,data:A},{type:12,data:h},{type:1,data:t.epsilon}],E=O=>{let R=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],H=[U("x",e[0].dataType,e[0].dims,A),U("skip",e[1].dataType,e[1].dims,A),U("gamma",e[2].dataType,e[2].dims,A)];y&&H.push(U("beta",e[3].dataType,e[3].dims,A)),w&&H.push(U("bias",e[4].dataType,e[4].dims,A)),H.push(j("output",e[0].dataType,c,A)),_&&H.push(j("mean_output",1,d)),v&&H.push(j("inv_std_output",1,d)),S&&H.push(j("input_skip_bias_sum",e[0].dataType,c,A));let N=Be(e[0].dataType),K=Be(1,A);return`\n\n      ${O.registerUniforms(R).declareVariables(...H)}\n      var<workgroup> sum_shared : array<${K}, ${I}>;\n      var<workgroup> sum_squared_shared : array<${K}, ${I}>;\n\n      ${O.mainStart([I,1,1])}\n        let ix = local_id.x;\n        let iy = global_id.x / ${I};\n\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        var stride = hidden_size_vectorized / ${I};\n        let offset = ix * stride + iy * hidden_size_vectorized;\n        let offset1d = stride * ix;\n        if (ix == ${I-1}) {\n          stride = hidden_size_vectorized - stride * ix;\n        }\n        for (var i: u32 = 0; i < stride; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${w?"bias[offset1d + i]":N+"(0.0)"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${S?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${ir(N,A,"value")};\n          sum_shared[ix] += f32_value;\n          sum_squared_shared[ix] += f32_value * f32_value;\n        }\n        workgroupBarrier();\n\n        var reduce_size : u32 = ${I};\n        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {\n          reduce_size = curr_size + (reduce_size & 1);\n          if (ix < curr_size) {\n            sum_shared[ix] += sum_shared[ix + reduce_size];\n            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];\n          }\n          workgroupBarrier();\n        }\n\n        let sum = sum_shared[0];\n        let square_sum = sum_squared_shared[0];\n        let mean = ${$t("sum",A)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${$t("square_sum",A)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);\n        ${_?"mean_output[global_idx] = mean;":""}\n        ${v?"inv_std_output[global_idx] = inv_std_dev;":""}\n\n        for (var i: u32 = 0; i < stride; i++) {\n          output[offset + i] = (output[offset + i] ${i?"":`- ${N}(mean)`}) *\n            ${N}(inv_std_dev) * gamma[offset1d + i]\n            ${y?"+ beta[offset1d + i]":""};\n        }\n      }`},P=[{dims:c,dataType:e[0].dataType}];return r>1&&P.push({dims:d,dataType:1}),r>2&&P.push({dims:d,dataType:1}),r>3&&P.push({dims:u,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${A};${_};${v};${S}`,inputDependencies:e.map((O,R)=>"type")},getShaderSource:E,getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(p/h)},programUniforms:x})}},vd=(e,t)=>{Up(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(Vp(e.inputs,t,e.outputCount,!1),{outputs:o})}});var Wp,Gn,Np,_d,Gp,Hp,Sd,xd,Cd=Y(()=>{"use strict";ye();Se();Ze();_e();Wp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Gn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Np=(e,t)=>{if(e.length>1){let r=Gn(e,1),o=Gn(e,2),i=Gn(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),ve({starts:r,ends:o,axes:i})}else return t},_d=(e,t,r,o,i)=>{let u=e;return e<0&&(u+=r[o[t]]),i[t]<0?Math.max(0,Math.min(u,r[o[t]]-1)):Math.max(0,Math.min(u,r[o[t]]))},Gp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n            let steps_i = ${fe("uniforms.steps","i",r.length)};\n            let signs_i = ${fe("uniforms.signs","i",r.length)};\n            let starts_i = ${fe("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Hp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=t.axes.length>0?M.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=Gn(e,4);u.forEach(A=>A!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(i.length).fill(1));let a=t.starts.map((A,x)=>_d(A,x,r,i,u)),c=t.ends.map((A,x)=>_d(A,x,r,i,u));if(i.length!==a.length||i.length!==c.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let A=0;A<r.length;++A)i.includes(A)||(a.splice(A,0,0),c.splice(A,0,r[A]),u.splice(A,0,1));let p=u.map(A=>Math.sign(A));u.forEach((A,x,E)=>{if(A<0){let P=(c[x]-a[x])/A,O=a[x],R=O+P*u[x];a[x]=R,c[x]=O,E[x]=-A}});let h=r.slice(0);i.forEach((A,x)=>{h[A]=Math.ceil((c[A]-a[A])/u[A])});let d={dims:h,dataType:e[0].dataType},y=j("output",e[0].dataType,h.length),w=U("input",e[0].dataType,e[0].dims.length),_=M.size(h),v=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:p.length},{name:"steps",type:"u32",length:u.length}],S=[{type:12,data:_},{type:12,data:a},{type:6,data:p},{type:12,data:u},...Z(e[0].dims,h)],I=A=>`\n      ${A.registerUniforms(v).declareVariables(w,y)}\n        ${Gp(w,y,r)}\n        ${A.mainStart()}\n          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${y.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${y.setByOffset("global_idx",w.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${p.length}_${a.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:S})}},Sd=(e,t)=>{Wp(e.inputs,t);let r=Np(e.inputs,t);e.compute(Hp(e.inputs,r),{inputs:[0]})},xd=e=>{let t=e.starts,r=e.ends,o=e.axes;return ve({starts:t,ends:r,axes:o})}});var Lp,Fp,Ad,Id,Td=Y(()=>{"use strict";ye();Se();Ze();_e();Lp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Fp=(e,t)=>{let r=e.dims,o=M.size(r),i=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let a=r[u],c=o/a,p=Me(a),h=a/p,d=(I,A)=>A===4?`max(max(${I}.x, ${I}.y), max(${I}.z, ${I}.w))`:A===2?`max(${I}.x, ${I}.y)`:A===3?`max(max(${I}.x, ${I}.y), ${I}.z)`:I,y=U("x",e.dataType,e.dims,p),w=j("result",e.dataType,e.dims,p),_=y.type.value,v=Be(e.dataType)==="f32"?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,S=I=>`\n      var<workgroup> rowMaxShared : ${_};\n      var<workgroup> rowSumShared : ${_};\n      var<workgroup> threadShared : array<${_}, ${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${I.registerUniform("packedCols","i32").declareVariables(y,w)}\n      ${I.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${i};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${v}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${_}(${d("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${_}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${_}(${$t("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${p}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:c},programUniforms:[{type:6,data:h}]}),getShaderSource:S}},Ad=(e,t)=>{Lp(e.inputs),e.compute(Fp(e.inputs[0],t))},Id=e=>ve({axis:e.axis})});var qp,jp,Kp,Yp,Zp,Ed,Pd,kd=Y(()=>{"use strict";ye();Se();Ze();_e();qp=e=>{if(!e||e.length<1)throw new Error("too few inputs")},jp=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),o=r.length),ve({numOutputs:o,axis:t.axis,splitSizes:r})},Kp=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${fe("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Yp=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let i=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(i):o===0?r.push(`if (output_number == ${o}u) { ${i} }`):o===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${o}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Zp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=e[0].dataType,u=M.normalizeAxis(t.axis,r.length),a=new Array(t.numOutputs),c=U("input",i,r.length),p=new Array(t.numOutputs),h=[],d=[],y=0,w=[{type:12,data:o}];for(let v=0;v<t.numOutputs;v++){y+=t.splitSizes[v],p[v]=y;let S=r.slice();S[t.axis]=t.splitSizes[v],d.push(S),a[v]=j(`output${v}`,i,S.length),h.push({dims:d[v],dataType:e[0].dataType})}w.push({type:12,data:p},...Z(r,...d));let _=v=>`\n  ${v.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",p.length).declareVariables(c,...a)}\n  ${Kp(p.length)}\n  ${Yp(a)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n    var index = ${c.indicesGet("indices",u)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${fe("uniforms.size_in_split_axis","output_number - 1u",p.length)};\n      ${c.indicesSet("indices",u,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:w})}},Ed=(e,t)=>{qp(e.inputs);let r=e.inputs.length===1?t:jp(e.inputs,t);e.compute(Zp(e.inputs,r),{inputs:[0]})},Pd=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ve({axis:t,numOutputs:o,splitSizes:r})}});var Od,Xp,Qp,Jp,Rd,Bd=Y(()=>{"use strict";ye();Se();_e();Od=e=>Array.from(e.getBigInt64Array(),Number),Xp=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Od(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Qp=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},Jp=e=>{let t=e[0].dims,r=Od(e[1]),o=Qp(t,r),i=M.size(o),u=e[0].dataType,a=U("input",u,t.length),c=j("output",u,o.length),p=h=>`\n      const inputShape = ${a.indices(...t)};\n      ${h.registerUniform("output_size","u32").declareVariables(a,c)}\n      ${h.mainStart()}\n      ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${c.offsetToIndices("global_idx")};\n      var input_indices: ${a.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${a.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${c.setByOffset("global_idx",a.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...Z(e[0].dims,o)]}),getShaderSource:p}},Rd=e=>{Xp(e.inputs),e.compute(Jp(e.inputs),{inputs:[0]})}});var em,tm,Dd,zd=Y(()=>{"use strict";ye();Se();_e();em=(e,t,r,o,i)=>{let u=j("output_data",i,r.length,4),a=U("a_data",t[1].dataType,t[1].dims.length,4),c=U("b_data",t[2].dataType,t[2].dims.length,4),p=U("c_data",t[0].dataType,t[0].dims.length,4),h,d=(y,w,_)=>`select(${w}, ${y}, ${_})`;if(!o)h=u.setByOffset("global_idx",d(a.getByOffset("global_idx"),c.getByOffset("global_idx"),p.getByOffset("global_idx")));else{let y=(w,_,v="")=>{let S=`a_data[index_a${_}][component_a${_}]`,I=`b_data[index_b${_}][component_b${_}]`,A=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`\n            let output_indices${_} = ${u.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offset_a${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_b${_} = ${c.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_c${_} = ${p.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let index_a${_} = offset_a${_} / 4u;\n            let index_b${_} = offset_b${_} / 4u;\n            let index_c${_} = offset_c${_} / 4u;\n            let component_a${_} = offset_a${_} % 4u;\n            let component_b${_} = offset_b${_} % 4u;\n            let component_c${_} = offset_c${_} % 4u;\n            ${w}[${_}] = ${v}(${d(S,I,A)});\n          `};i===9?h=`\n            var data = vec4<u32>(0);\n            ${y("data",0,"u32")}\n            ${y("data",1,"u32")}\n            ${y("data",2,"u32")}\n            ${y("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`\n            ${y("output_data[global_idx]",0)}\n            ${y("output_data[global_idx]",1)}\n            ${y("output_data[global_idx]",2)}\n            ${y("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(p,a,c,u)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${h}\n      }`},tm=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,i=e[1].dataType,u=!(M.areEqual(t,r)&&M.areEqual(r,o)),a=t,c=M.size(t);if(u){let h=At.calcShape(At.calcShape(t,r,!1),o,!1);if(!h)throw new Error("Can\'t perform where op on the given tensors");a=h,c=M.size(a)}let p=Math.ceil(c/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>em(h,e,a,u,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:p},...Z(o,t,r,a)]})}},Dd=e=>{e.compute(tm(e.inputs))}});var Md,Ud=Y(()=>{"use strict";Ka();Ro();Ja();ts();Vs();Zs();Oo();Uo();lu();mu();gu();$u();xu();Au();Eu();Ou();Du();Mu();Vu();Wo();Gu();qu();Ku();cd();md();In();yd();wd();$d();Cd();Td();kd();Bd();Sr();Rn();zd();Md=new Map([["Abs",[rs]],["Acos",[ns]],["Acosh",[os]],["Add",[Ws]],["ArgMax",[ja,ko]],["ArgMin",[qa,ko]],["Asin",[is]],["Asinh",[as]],["Atan",[ss]],["Atanh",[us]],["Attention",[Xa]],["AveragePool",[rd,td]],["BatchNormalization",[Qa]],["BiasAdd",[es]],["BiasSplitGelu",[Us]],["Cast",[ls,ds]],["Ceil",[ps]],["Clip",[cs]],["Concat",[Ya,Za]],["Conv",[Ho,Go]],["ConvTranspose",[du,uu]],["Cos",[ms]],["Cosh",[fs]],["CumSum",[cu,pu]],["DepthToSpace",[fu,hu]],["Div",[Ns]],["Einsum",[wu,vu]],["Elu",[hs,kn]],["Equal",[Gs]],["Erf",[gs]],["Exp",[ys]],["Expand",[Su]],["FastGelu",[Cu]],["Floor",[bs]],["FusedConv",[Ho,Go]],["Gather",[Tu,Iu]],["GatherElements",[ku,Pu]],["Gelu",[ws]],["Gemm",[Bu,Ru]],["GlobalAveragePool",[id,od]],["GlobalMaxPool",[ld,dd]],["Greater",[qs]],["GreaterOrEqual",[Ks]],["HardSigmoid",[Is,As]],["InstanceNormalization",[zu]],["LayerNormalization",[Uu]],["LeakyRelu",[vs,kn]],["Less",[js]],["LessOrEqual",[Ys]],["Log",[zs]],["MatMul",[ru]],["MatMulNBits",[Wu,Nu]],["MaxPool",[sd,ud]],["Mul",[Hs]],["MultiHeadAttention",[Fu,Lu]],["Neg",[_s]],["Not",[$s]],["Pad",[ju]],["Pow",[Ls]],["Range",[pd]],["Reciprocal",[Ss]],["ReduceMin",[Wa]],["ReduceMean",[Da]],["ReduceMax",[Va]],["ReduceSum",[Ga]],["ReduceProd",[Na]],["ReduceL1",[za]],["ReduceL2",[Ma]],["ReduceLogSum",[La]],["ReduceLogSumExp",[Ua]],["ReduceSumSquare",[Ha]],["Relu",[xs]],["Resize",[hd,gd]],["RotaryEmbedding",[bd]],["Sigmoid",[Cs]],["Sin",[Ts]],["Sinh",[Es]],["Slice",[Sd,xd]],["SkipLayerNormalization",[vd]],["Split",[Ed,Pd]],["Sqrt",[Ps]],["Softmax",[Ad,Id]],["Sub",[Fs]],["Tan",[ks]],["Tanh",[Rs]],["ThresholdedRelu",[Ds,kn]],["Tile",[Rd]],["Transpose",[_a,Sa]],["Where",[Dd]]])});var Hn,Vd=Y(()=>{"use strict";$r();Ht();_e();Hn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,i,u){rr(t.programInfo.name);let a=this.backend.device,c=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let p=[];for(let d of r)p.push({binding:p.length,resource:{buffer:d.buffer}});for(let d of o)p.push({binding:p.length,resource:{buffer:d.buffer}});u&&p.push({binding:p.length,resource:u});let h=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:p,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:h,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}c.setPipeline(t.computePipeline),c.setBindGroup(0,h),c.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Gt(t.programInfo.name)}dispose(){}build(t,r){rr(t.name);let o=this.backend.device,i=[];o.features.has("shader-f16")&&i.push("enable f16;");let u=va(r,this.backend.device.limits),a=t.getShaderSource(u),c=`${i.join(`\n`)}\n${u.additionalImplementations}\n${a}`,p=o.createShaderModule({code:c,label:t.name});Ve("verbose",()=>`[WebGPU] ${t.name} shader code: ${c}`);let h=o.createComputePipeline({compute:{module:p,entryPoint:"main"},layout:"auto",label:t.name});return Gt(t.name),{programInfo:t,computePipeline:h,uniformVariablesInfo:u.variablesInfo}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&o<=u&&i<=u)return[r,o,i];let a=r*o*i,c=Math.ceil(Math.sqrt(a));if(c>u){if(c=Math.ceil(Math.cbrt(a)),c>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}});var rm,nm,Yo,Ln,Wd=Y(()=>{"use strict";$r();ye();Ht();fa();wa();Ud();Vd();rm=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let i=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let u=e[o].dims.length;r.push(`${i};${u}`);break}case"dims":{let u=e[o].dims.join(",");r.push(`${i};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},nm=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${rm(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Yo=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},Ln=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(i),this.adapterInfo=new Yo(await r.requestAdapterInfo()),this.gpuDataManager=ba(this),this.programManager=new Hn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,pa(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;rr(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let u=o[i],a=u.kernelId,c=this.kernels.get(a),p=c.kernelType,h=c.kernelName,d=u.programName,y=u.inputTensorViews,w=u.outputTensorViews,_=r[i*2],v=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let S=Number(_-this.queryTimeBase),I=Number(v-this.queryTimeBase);if(!Number.isSafeInteger(S)||!Number.isSafeInteger(I))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(A=>({dims:A.dims,dataType:Nt(A.dataType)})),outputsMetadata:w.map(A=>({dims:A.dims,dataType:Nt(A.dataType)})),kernelId:a,kernelType:p,kernelName:h,programName:d,startTime:S,endTime:I});else{let A="";y.forEach((E,P)=>{A+=`input[${P}]: [${E.dims}] | ${Nt(E.dataType)}, `});let x="";w.forEach((E,P)=>{x+=`output[${P}]: [${E.dims}] | ${Nt(E.dataType)}, `}),console.log(`[profiling] kernel "${a}|${p}|${h}|${d}" ${A}${x}execution time: ${I-S} ns`)}wo("GPU",`${d}::${_}::${v}`)}t.unmap(),this.pendingQueries.delete(t)}),Gt()}run(t,r,o,i,u,a){rr(t.name);let c=[];for(let E=0;E<r.length;++E){let P=r[E].data;if(P===0)continue;let O=this.gpuDataManager.get(P);if(!O)throw new Error(`no GPU data for input: ${P}`);c.push(O)}let{outputs:p,dispatchGroup:h,programUniforms:d}=t.getRunData(r),y=o.length===0?p.map((E,P)=>P):o;if(y.length!==p.length)throw new Error(`Output size ${y.length} must be equal to ${p.length}.`);let w=[],_=[];for(let E=0;E<p.length;++E){if(!Number.isInteger(y[E])||y[E]<-3||y[E]>=a)throw new Error(`Invalid output index: ${y[E]}`);if(y[E]===-3)continue;let P=y[E]===-1,O=y[E]===-2,R=P||O?u(p[E].dataType,p[E].dims):i(y[E],p[E].dataType,p[E].dims);if(w.push(R),R.data===0)continue;let H=this.gpuDataManager.get(R.data);if(!H)throw new Error(`no GPU data for output: ${R.data}`);if(P&&this.temporaryData.push(H),O){let N=this.kernelPersistentData.get(this.currentKernelId);N||(N=[],this.kernelPersistentData.set(this.currentKernelId,N)),N.push(H)}_.push(H)}if(c.length!==r.length||_.length!==w.length){if(_.length===0)return Gt(t.name),w;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let v;if(d){let E=0,P=[];d.forEach(N=>{let K=typeof N.data=="number"?[N.data]:N.data;if(K.length===0)return;let Q=N.type===10?2:4,he,W;N.type===10?(W=K.length>4?16:K.length>2?8:K.length*Q,he=K.length>4?16:Q*K.length):(W=K.length<=2?K.length*Q:16,he=16),E=Math.ceil(E/W)*W,P.push(E);let se=N.type===10?8:4;E+=K.length>4?Math.ceil(K.length/se)*he:K.length*Q});let O=16;E=Math.ceil(E/O)*O;let R=new ArrayBuffer(E);d.forEach((N,K)=>{let Q=P[K],he=typeof N.data=="number"?[N.data]:N.data;if(N.type===6)new Int32Array(R,Q,he.length).set(he);else if(N.type===12)new Uint32Array(R,Q,he.length).set(he);else if(N.type===10)new Uint16Array(R,Q,he.length).set(he);else if(N.type===1)new Float32Array(R,Q,he.length).set(he);else throw new Error(`Unsupported uniform type: ${Nt(N.type)}`)});let H=this.gpuDataManager.create(E,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(H.buffer,0,R,0,E),this.gpuDataManager.release(H.id),v={offset:0,size:E,buffer:H.buffer}}let S=this.programManager.normalizeDispatchGroupSize(h),I=S[1]===1&&S[2]===1,A=nm(t,r,I),x=this.programManager.getArtifact(A);if(x||(x=this.programManager.build(t,S),this.programManager.setArtifact(A,x),Ve("info",()=>`[artifact] key: ${A}, programName: ${t.name}`)),d&&x.uniformVariablesInfo){if(d.length!==x.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${x.uniformVariablesInfo.length}, got ${d.length} in program "${x.programInfo.name}".`);for(let E=0;E<d.length;E++){let P=d[E],O=P.type,R=typeof P.data=="number"?1:P.data.length,[H,N]=x.uniformVariablesInfo[E];if(O!==H||R!==N)throw new Error(`Uniform variable ${E} mismatch: expect type ${H} with size ${N}, got type ${O} with size ${R} in program "${x.programInfo.name}".`)}}if(Ve("info",()=>`[ProgramManager] run "${t.name}" (key=${A}) with ${S[0]}x${S[1]}x${S[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let E={kernelId:this.currentKernelId,programName:x.programInfo.name,inputTensorViews:r,outputTensorViews:w};this.pendingKernels.push(E),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(E)}return this.programManager.run(x,c,_,S,v),Gt(t.name),w}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,i){let u=Md.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:u[0],attributes:[u[1],o]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let u=i.kernelType,a=i.kernelName,c=i.kernelEntry,p=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,p[0]&&(p[1]=p[0](p[1]),p[0]=void 0),Ve("info",()=>`[WebGPU] Start to run kernel "[${u}] ${a}"...`);let h=this.env.debug;this.temporaryData=[];try{return h&&this.device.pushErrorScope("validation"),c(r,p[1]),0}catch(d){return o.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${a}" failed. ${d}`)),1}finally{h&&o.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${u}] ${a}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,i){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let a=u.get(r),c=this.gpuDataManager.registerExternalBuffer(o,i,a?.[1]);return u.set(r,[c,o]),c}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let i=await xo(this,t,r);return ma(i.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ve("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ve("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ve("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let i=0;i<o;i++){let u=this.getComputePassEncoder(),a=t[i];this.writeTimestamp(this.pendingDispatchNumber*2),u.setPipeline(a.computePipeline),u.setBindGroup(0,a.bindGroup),u.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var Nd={};gn(Nd,{init:()=>om});var qr,Zo,om,Gd=Y(()=>{"use strict";ye();Wd();Ht();Se();qr=class e{constructor(t,r,o,i){this.module=t;this.dataType=r;this.data=o;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(M.size(t)!==M.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Zo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=r.adapterInfo;let i=t.HEAPU32,u=o>>>2;this.opKernelContext=i[u++];let a=i[u++];this.outputCount=i[u++],this.customDataOffset=i[u++],this.customDataSize=i[u++];let c=[];for(let p=0;p<a;p++){let h=i[u++],d=i[u++],y=i[u++],w=[];for(let _=0;_<y;_++)w.push(i[u++]);c.push(new qr(t,h,d,w))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(t,r){let o=r?.inputs?.map(c=>typeof c=="number"?this.inputs[c]:c)??this.inputs,i=r?.outputs??[],u=(c,p,h)=>new qr(this.module,p,this.output(c,h),h),a=(c,p)=>{let h=tr(c);if(!h)throw new Error(`Unsupported data type: ${c}`);let d=h*M.size(p),y=d>0?this.backend.gpuDataManager.create(d).id:0;return new qr(this.module,c,y,p)};return this.backend.run(t,o,i,u,a,this.outputCount)}output(t,r){let o=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),u=i>>2;this.module.HEAPU32[u++]=r.length;for(let a=0;a<r.length;a++)this.module.HEAPU32[u++]=r[a];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(o)}}},om=async(e,t,r,o)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let u=new Ln;await u.initialize(r,o),i("webgpu",[u,a=>u.alloc(a),a=>u.free(a),(a,c,p,h=!1)=>{if(h)Ve("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${a}, dst=${c}, size=${p}`),u.memcpy(a,c);else{Ve("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${a}, gpuDataId=${c}, size=${p}`);let d=t.HEAPU8.subarray(a>>>0,(a>>>0)+p);u.upload(c,d)}},async(a,c,p)=>{Ve("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${c}, size=${p}`),await u.download(a,()=>t.HEAPU8.subarray(c>>>0,(c>>>0)+p))},(a,c,p)=>u.createKernel(a,c,p,t.UTF8ToString(t._JsepGetNodeName(c))),a=>u.releaseKernel(a),(a,c,p,h)=>{Ve("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${a}, contextDataOffset=${c}`);let d=new Zo(t,u,c);return u.computeKernel(a,d,h)},()=>u.captureBegin(),()=>u.captureEnd(),()=>u.replay()])}else i("webnn")}});var Vi;Vi=Ei();var pl=zi(),fo,ho=!1,yn=!1,Ui=!1,ml=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},fl=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},hl=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Wi=async e=>{if(ho)return Promise.resolve();if(yn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Ui)throw new Error("previous call to \'initializeWebAssembly()\' failed.");yn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,i=ml(r),u=o&&fl(),a=e.wasmPaths,c=typeof a=="string"?a:void 0,p=hl(u,i),h=typeof a=="object"?a[p]:void 0,d=!1,y=[];if(t>0&&y.push(new Promise(w=>{setTimeout(()=>{d=!0,w()},t)})),y.push(new Promise((w,_)=>{let v=i?pl:Vi,S={locateFile:(I,A)=>{if(i&&I.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Mi()],{type:"text/javascript"}));if(I.endsWith(".wasm")){if(h)return h;let x=c??A;return p==="ort-wasm-simd.wasm"?x+"ort-wasm-simd.jsep.wasm":p==="ort-wasm-simd-threaded.wasm"?x+"ort-wasm-simd-threaded.jsep.wasm":x+p}return A+I}};if(i)if(S.numThreads=r,typeof Blob>"u")S.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let I=`var ortWasmThreaded=${v.toString()};`;S.mainScriptUrlOrBlob=new Blob([I],{type:"text/javascript"})}v(S).then(I=>{yn=!1,ho=!0,fo=I,w()},I=>{yn=!1,Ui=!0,_(I)})})),await Promise.race(y),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Le=()=>{if(ho&&fo)return fo;throw new Error("WebAssembly is not initialized yet.")};var Fe=(e,t)=>{let r=Le(),o=r.lengthBytesUTF8(e)+1,i=r._malloc(o);return r.stringToUTF8(e,i,o),t.push(i),i},Nr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,u])=>{let a=t?t+i:i;if(typeof u=="object")Nr(u,a+".",r,o);else if(typeof u=="string"||typeof u=="number")o(a,u.toString());else if(typeof u=="boolean")o(a,u?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof u}`)})},Ue=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let i=t.HEAP32[o/4],u=t.HEAPU32[o/4+1],a=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(r)}};var Ni=e=>{let t=Le(),r=0,o=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let u=0;return e?.tag!==void 0&&(u=Fe(e.tag,o)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,u),r===0&&Ue("Can\'t create run options."),e?.extra!==void 0&&Nr(e.extra,"",new WeakSet,(a,c)=>{let p=Fe(a,o),h=Fe(c,o);t._OrtAddRunConfigEntry(r,p,h)!==0&&Ue(`Can\'t set a run config entry: ${a} - ${c}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(a=>t._free(a)),u}};var gl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},yl=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},bl=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},wl=(e,t,r)=>{for(let o of t){let i=typeof o=="string"?o:o.name;switch(i){case"webnn":if(i="WEBNN",typeof o!="string"){let a=o;if(a?.deviceType){let c=Fe("deviceType",r),p=Fe(a.deviceType,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'deviceType\' - ${a.deviceType}.`)}if(a?.numThreads){let c=a.numThreads;(typeof c!="number"||!Number.isInteger(c)||c<0)&&(c=0);let p=Fe("numThreads",r),h=Fe(c.toString(),r);Le()._OrtAddSessionConfigEntry(e,p,h)!==0&&Ue(`Can\'t set a session config entry: \'numThreads\' - ${a.numThreads}.`)}if(a?.powerPreference){let c=Fe("powerPreference",r),p=Fe(a.powerPreference,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'powerPreference\' - ${a.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof o!="string"){let a=o;if(a?.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${a.preferredLayout}`);let c=Fe("preferredLayout",r),p=Fe(a.preferredLayout,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'preferredLayout\' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let u=Fe(i,r);Le()._OrtAppendExecutionProvider(e,u)!==0&&Ue(`Can\'t append execution provider: ${i}.`)}},Gi=e=>{let t=Le(),r=0,o=[],i=e||{};bl(i);try{let u=gl(i.graphOptimizationLevel??"all"),a=yl(i.executionMode??"sequential"),c=typeof i.logId=="string"?Fe(i.logId,o):0,p=i.logSeverityLevel??2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let d=typeof i.optimizedModelFilePath=="string"?Fe(i.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(u,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,c,p,h,d),r===0&&Ue("Can\'t create session options."),i.executionProviders&&wl(r,i.executionProviders,o),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let y=Fe("enableGraphCapture",o),w=Fe(i.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,y,w)!==0&&Ue(`Can\'t set a session config entry: \'enableGraphCapture\' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[y,w]of Object.entries(i.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof w!="number"||!Number.isInteger(w)||w<0)throw new Error(`free dimension override value must be a non-negative integer: ${w}`);let _=Fe(y,o);t._OrtAddFreeDimensionOverride(r,_,w)!==0&&Ue(`Can\'t set a free dimension override: ${y} - ${w}.`)}return i.extra!==void 0&&Nr(i.extra,"",new WeakSet,(y,w)=>{let _=Fe(y,o),v=Fe(w,o);t._OrtAddSessionConfigEntry(r,_,v)!==0&&Ue(`Can\'t set a session config entry: ${y} - ${w}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(a=>t._free(a)),u}};ye();var Li=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let i of r)o.push(i);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),u;try{u=new ArrayBuffer(o)}catch(c){if(c instanceof RangeError){let p=Math.ceil(o/65536);u=new WebAssembly.Memory({initial:p,maximum:p}).buffer}else throw c}let a=0;for(;;){let{done:c,value:p}=await i.read();if(c)break;let h=p.byteLength;new Uint8Array(u,a,h).set(p),a+=h}return new Uint8Array(u,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var im=(e,t)=>{Le()._OrtInit(e,t)!==0&&Ue("Can\'t initialize onnxruntime.")},Ld=async e=>{im(e.wasm.numThreads,Gr(e.logLevel))},Fd=async(e,t)=>{{let r=(Gd(),wr(Nd)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let o=e.webgpu.adapter;if(o){if(typeof o.limits!="object"||typeof o.features!="object"||typeof o.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let u=e.webgpu.forceFallbackAdapter;if(u!==void 0&&typeof u!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${u}"`);if(o=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:u}),!o)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\')}if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",Le(),e,o)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Le(),e)}}},ar=new Map,am=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Ue("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Xo=e=>{let t=Le(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},qd=async(e,t)=>{let r,o,i=Le();Array.isArray(e)?[r,o]=e:e.buffer===i.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Xo(e);let u=0,a=0,c=0,p=[],h=[],d=[];try{if([a,p]=Gi(t),t?.externalData&&i.mountExternalData){let x=[];for(let E of t.externalData){let P=typeof E=="string"?E:E.path;x.push(Li(typeof E=="string"?E:E.data).then(O=>{i.mountExternalData(P,O)}))}await Promise.all(x)}u=await i._OrtCreateSession(r,o,a),u===0&&Ue("Can\'t create a session.");let[y,w]=am(u),_=!!t?.enableGraphCapture,v=[],S=[],I=[];for(let x=0;x<y;x++){let E=i._OrtGetInputName(u,x);E===0&&Ue("Can\'t get an input name."),h.push(E),v.push(i.UTF8ToString(E))}for(let x=0;x<w;x++){let E=i._OrtGetOutputName(u,x);E===0&&Ue("Can\'t get an output name."),d.push(E);let P=i.UTF8ToString(E);S.push(P);{if(_&&t?.preferredOutputLocation===void 0){I.push("gpu-buffer");continue}let O=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[P]??"cpu";if(O!=="cpu"&&O!=="cpu-pinned"&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}.`);if(_&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);I.push(O)}}let A=null;return I.some(x=>x==="gpu-buffer")&&(c=i._OrtCreateBinding(u),c===0&&Ue("Can\'t create IO binding."),A={handle:c,outputPreferredLocations:I,outputPreferredLocationsEncoded:I.map(x=>yo(x))}),ar.set(u,[u,h,d,A,_,!1]),[u,v,S]}catch(y){throw h.forEach(w=>i._OrtFree(w)),d.forEach(w=>i._OrtFree(w)),c!==0&&i._OrtReleaseBinding(c),u!==0&&i._OrtReleaseSession(u),y}finally{i._free(r),a!==0&&i._OrtReleaseSessionOptions(a),p.forEach(y=>i._free(y)),i.unmountExternalData?.()}},jd=e=>{let t=Le(),r=ar.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,i,u,a,c]=r;a&&(c&&t._OrtClearBoundOutputs(a.handle),t._OrtReleaseBinding(a.handle)),t.jsepOnReleaseSession?.(e),i.forEach(p=>t._OrtFree(p)),u.forEach(p=>t._OrtFree(p)),t._OrtReleaseSession(o),ar.delete(e)},Hd=(e,t,r,o,i,u=!1)=>{if(!e){t.push(0);return}let a=Le(),c=e[0],p=e[1],h=e[3],d,y;if(c==="string"&&h==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let v=e[2].gpuBuffer,S=tr(go(c));y=p.reduce((A,x)=>A*x,1)*S;let I=a.jsepRegisterBuffer;if(!I)throw new Error(\'Tensor location "gpu-buffer" is not supported without using WebGPU.\');d=I(o,i,v,y)}else{let v=e[2];if(Array.isArray(v)){y=4*v.length,d=a._malloc(y),r.push(d);let S=d/4;for(let I=0;I<v.length;I++){if(typeof v[I]!="string")throw new TypeError(`tensor data at index ${I} is not a string`);a.HEAPU32[S++]=Fe(v[I],r)}}else y=v.byteLength,d=a._malloc(y),r.push(d),a.HEAPU8.set(new Uint8Array(v.buffer,v.byteOffset,y),d)}let w=a.stackSave(),_=a.stackAlloc(4*p.length);try{let v=_/4;p.forEach(I=>a.HEAP32[v++]=I);let S=a._OrtCreateTensor(go(c),d,y,_,p.length,yo(h));S===0&&Ue(`Can\'t create tensor for input/output. session=${o}, index=${i}.`),t.push(S)}finally{a.stackRestore(w)}},Kd=async(e,t,r,o,i,u)=>{let a=Le(),c=ar.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let p=c[0],h=c[1],d=c[2],y=c[3],w=c[4],_=c[5],v=t.length,S=o.length,I=0,A=[],x=[],E=[],P=[],O=a.stackSave(),R=a.stackAlloc(v*4),H=a.stackAlloc(v*4),N=a.stackAlloc(S*4),K=a.stackAlloc(S*4);try{[I,A]=Ni(u);for(let ee=0;ee<v;ee++)Hd(r[ee],x,P,e,t[ee],w);for(let ee=0;ee<S;ee++)Hd(i[ee],E,P,e,v+o[ee],w);let Q=R/4,he=H/4,W=N/4,se=K/4;for(let ee=0;ee<v;ee++)a.HEAPU32[Q++]=x[ee],a.HEAPU32[he++]=h[t[ee]];for(let ee=0;ee<S;ee++)a.HEAPU32[W++]=E[ee],a.HEAPU32[se++]=d[o[ee]];if(y&&!_){let{handle:ee,outputPreferredLocations:ae,outputPreferredLocationsEncoded:Ae}=y;if(h.length!==v)throw new Error(`input count from feeds (${v}) is expected to be always equal to model\'s input count (${h.length}).`);for(let me=0;me<v;me++){let ie=t[me];await a._OrtBindInput(ee,h[ie],x[me])!==0&&Ue(`Can\'t bind input[${me}] for session=${e}.`)}for(let me=0;me<S;me++){let ie=o[me];i[me]?.[3]?a._OrtBindOutput(ee,d[ie],E[me],0)!==0&&Ue(`Can\'t bind pre-allocated output[${me}] for session=${e}.`):a._OrtBindOutput(ee,d[ie],0,Ae[ie])!==0&&Ue(`Can\'t bind output[${me}] to ${ae[me]} for session=${e}.`)}ar.set(e,[p,h,d,y,w,!0])}a.jsepOnRunStart?.(p);let Ce;y?Ce=await a._OrtRunWithBinding(p,y.handle,S,N,I):Ce=await a._OrtRun(p,H,R,v,K,S,N,I),Ce!==0&&Ue("failed to call OrtRun().");let We=[];for(let ee=0;ee<S;ee++){let ae=a.HEAPU32[N/4+ee];if(ae===E[ee]){We.push(i[ee]);continue}let Ae=a.stackSave(),me=a.stackAlloc(4*4),ie=!1,ue,le=0;try{a._OrtGetTensorData(ae,me,me+4,me+8,me+12)!==0&&Ue(`Can\'t access output tensor data on index ${ee}.`);let G=me/4,ne=a.HEAPU32[G++];le=a.HEAPU32[G++];let xe=a.HEAPU32[G++],Ke=a.HEAPU32[G++],De=[];for(let Ne=0;Ne<Ke;Ne++)De.push(a.HEAPU32[xe/4+Ne]);a._OrtFree(xe);let Ge=De.reduce((Ne,Ye)=>Ne*Ye,1);ue=Nt(ne);let Mt=y?.outputPreferredLocations[o[ee]];if(ue==="string"){if(Mt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Ne=[],Ye=le/4;for(let mt=0;mt<Ge;mt++){let Ot=a.HEAPU32[Ye++],qt=mt===Ge-1?void 0:a.HEAPU32[Ye]-Ot;Ne.push(a.UTF8ToString(Ot,qt))}We.push([ue,De,Ne,"cpu"])}else if(Mt==="gpu-buffer"&&Ge>0){let Ne=a.jsepGetBuffer;if(!Ne)throw new Error(\'preferredLocation "gpu-buffer" is not supported without using WebGPU.\');let Ye=Ne(le),mt=tr(ne);if(mt===void 0||!Hi(ue))throw new Error(`Unsupported data type: ${ue}`);ie=!0,We.push([ue,De,{gpuBuffer:Ye,download:a.jsepCreateDownloader(Ye,Ge*mt,ue),dispose:()=>{a._OrtReleaseTensor(ae)}},"gpu-buffer"])}else{let Ne=bn(ue),Ye=new Ne(Ge);new Uint8Array(Ye.buffer,Ye.byteOffset,Ye.byteLength).set(a.HEAPU8.subarray(le,le+Ye.byteLength)),We.push([ue,De,Ye,"cpu"])}}finally{a.stackRestore(Ae),ue==="string"&&le&&a._free(le),ie||a._OrtReleaseTensor(ae)}}return y&&!w&&(a._OrtClearBoundOutputs(y.handle),ar.set(e,[p,h,d,y,w,!1])),We}finally{a.stackRestore(O),x.forEach(Q=>a._OrtReleaseTensor(Q)),E.forEach(Q=>a._OrtReleaseTensor(Q)),P.forEach(Q=>a._free(Q)),I!==0&&a._OrtReleaseRunOptions(I),A.forEach(Q=>a._free(Q))}},Yd=e=>{let t=Le(),r=ar.get(e);if(!r)throw new Error("invalid session id");let o=r[0],i=t._OrtEndProfiling(o);i===0&&Ue("Can\'t get an profile file name."),t._OrtFree(i)},Zd=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Wi(r.wasm).then(()=>{Ld(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:i}=r;Fd(i,o).then(()=>{postMessage({type:t})},u=>{postMessage({type:t,err:u})});break}case"copy-from":{let{buffer:o}=r,i=Xo(o);postMessage({type:t,out:i});break}case"create":{let{model:o,options:i}=r;qd(o,i).then(u=>{postMessage({type:t,out:u})},u=>{postMessage({type:t,err:u})});break}case"release":jd(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:i,inputs:u,outputIndices:a,options:c}=r;Kd(o,i,u,a,new Array(a.length).fill(null),c).then(p=>{p.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:p},Zd([...u,...p]))},p=>{postMessage({type:t,err:p})});break}case"end-profiling":Yd(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'}),Sr,bt,un,Un,Wn,co,ai,Vr,Gr,wf,Vn,bf,vf,$f,xf,Sf,kf,Ef,Cf=X(()=>{var t;Vt(),T_(),Rn(),Sr=()=>!!Ue.wasm.proxy&&typeof document<"u",un=!1,Un=!1,Wn=!1,ai=new Map,Vr=(e,r)=>{let n=ai.get(e);n?n.push(r):ai.set(e,[r])},Gr=()=>{if(un||!Un||Wn||!bt)throw new Error("worker not ready")},wf=e=>{switch(e.data.type){case"init-wasm":un=!1,e.data.err?(Wn=!0,co[1](e.data.err)):(Un=!0,co[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=ai.get(e.data.type);e.data.err?r.shift()[1](e.data.err):r.shift()[0](e.data.out);break}}},Vn=typeof document<"u"?(t=document==null?void 0:document.currentScript)==null?void 0:t.src:void 0,bf=async()=>{if(!Un){if(un)throw new Error("multiple calls to 'initWasm()' detected.");if(Wn)throw new Error("previous call to 'initWasm()' failed.");if(un=!0,Sr())return Ue.wasm.wasmPaths===void 0&&Vn&&Vn.indexOf("blob:")!==0&&(Ue.wasm.wasmPaths=Vn.substr(0,+Vn.lastIndexOf("/")+1)),new Promise((e,r)=>{bt==null||bt.terminate();let n=URL.createObjectURL(new Blob([I_()],{type:"text/javascript"}));bt=new Worker(n,{name:"ort-wasm-proxy-worker"}),bt.onerror=s=>r(s),bt.onmessage=wf,URL.revokeObjectURL(n),co=[e,r];let a={type:"init-wasm",in:Ue};bt.postMessage(a)});try{await Bu(Ue.wasm),await cf(Ue),Un=!0}catch(e){throw Wn=!0,e}finally{un=!1}}},vf=async e=>{if(Sr())return Gr(),new Promise((r,n)=>{Vr("init-ep",[r,n]);let a={type:"init-ep",in:{epName:e,env:Ue}};bt.postMessage(a)});await pf(Ue,e)},$f=async e=>Sr()?(Gr(),new Promise((r,n)=>{Vr("copy-from",[r,n]);let a={type:"copy-from",in:{buffer:e}};bt.postMessage(a,[e.buffer])})):uo(e),xf=async(e,r)=>{if(Sr()){if(r!=null&&r.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Gr(),new Promise((n,a)=>{Vr("create",[n,a]);let s={type:"create",in:{model:e,options:{...r}}},i=[];e instanceof Uint8Array&&i.push(e.buffer),bt.postMessage(s,i)})}else return ff(e,r)},Sf=async e=>{if(Sr())return Gr(),new Promise((r,n)=>{Vr("release",[r,n]);let a={type:"release",in:e};bt.postMessage(a)});mf(e)},kf=async(e,r,n,a,s,i)=>{if(Sr()){if(n.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(s.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return Gr(),new Promise((o,l)=>{Vr("run",[o,l]);let d=n,c={type:"run",in:{sessionId:e,inputIndices:r,inputs:d,outputIndices:a,options:i}};bt.postMessage(c,yf(d))})}else return gf(e,r,n,a,s,i)},Ef=async e=>{if(Sr())return Gr(),new Promise((r,n)=>{Vr("end-profiling",[r,n]);let a={type:"end-profiling",in:e};bt.postMessage(a)});_f(e)}}),po,Tf,If,A_=X(()=>{Vt(),Cf(),$e(),Vu(),po=(t,e)=>{switch(t.location){case"cpu":return[t.type,t.dims,t.data,"cpu"];case"gpu-buffer":return[t.type,t.dims,{gpuBuffer:t.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${t.location} for ${e()}`)}},Tf=t=>{switch(t[3]){case"cpu":return new ft(t[0],t[2],t[1]);case"gpu-buffer":{let e=t[0];if(!gs(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:r,download:n,dispose:a}=t[2];return ft.fromGpuBuffer(r,{dataType:e,dims:t[1],download:n,dispose:a})}default:throw new Error(`invalid data location: ${t[3]}`)}},If=class{async fetchModelAndCopyToWasmMemory(t){return $f(await Fa(t))}async loadModel(t,e){Wt();let r;typeof t=="string"?typeof process<"u"&&process.versions&&process.versions.node?r=await Fa(t):r=await this.fetchModelAndCopyToWasmMemory(t):r=t,[this.sessionId,this.inputNames,this.outputNames]=await xf(r,e),Dt()}async dispose(){return Sf(this.sessionId)}async run(t,e,r){Wt();let n=[],a=[];Object.entries(t).forEach(f=>{let g=f[0],y=f[1],p=this.inputNames.indexOf(g);if(p===-1)throw new Error(`invalid input '${g}'`);n.push(y),a.push(p)});let s=[],i=[];Object.entries(e).forEach(f=>{let g=f[0],y=f[1],p=this.outputNames.indexOf(g);if(p===-1)throw new Error(`invalid output '${g}'`);s.push(y),i.push(p)});let o=n.map((f,g)=>po(f,()=>`input "${this.inputNames[a[g]]}"`)),l=s.map((f,g)=>f?po(f,()=>`output "${this.outputNames[i[g]]}"`):null),d=await kf(this.sessionId,a,o,i,l,r),c={};for(let f=0;f<d.length;f++)c[this.outputNames[i[f]]]=s[f]??Tf(d[f]);return Dt(),c}startProfiling(){}endProfiling(){Ef(this.sessionId)}}}),Af,Of,O_=X(()=>{Vt(),Cf(),A_(),Af=()=>{if((typeof Ue.wasm.initTimeout!="number"||Ue.wasm.initTimeout<0)&&(Ue.wasm.initTimeout=0),typeof Ue.wasm.simd!="boolean"&&(Ue.wasm.simd=!0),typeof Ue.wasm.proxy!="boolean"&&(Ue.wasm.proxy=!1),typeof Ue.wasm.trace!="boolean"&&(Ue.wasm.trace=!1),typeof Ue.wasm.numThreads!="number"||!Number.isInteger(Ue.wasm.numThreads)||Ue.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(Ue.wasm.numThreads=1);let t=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;Ue.wasm.numThreads=Math.min(4,Math.ceil((t||1)/2))}},Of=class{async init(t){Af(),await bf(),await vf(t)}async createInferenceSessionHandler(t,e){let r=new If;return await r.loadModel(t,e),Promise.resolve(r)}}}),Mf={};nn(Mf,{wasmBackend:()=>zf});var zf,M_=X(()=>{O_(),zf=new Of});Vt(),Vt(),Vt();var z_="1.19.0-dev.20240509-69cfcba38a",R_=$u;{let t=(M_(),zr(Mf)).wasmBackend;Rr("webgpu",t,5),Rr("webnn",t,5),Rr("cpu",t,10),Rr("wasm",t,10)}Object.defineProperty(Ue.versions,"web",{value:z_,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var P_=Object.freeze({__proto__:null,get InferenceSession(){return os},get TRACE(){return Mn},get TRACE_FUNC_BEGIN(){return Wt},get TRACE_FUNC_END(){return Dt},get Tensor(){return ft},get TrainingSession(){return us},default:R_,get env(){return Ue},get registerBackend(){return Rr}});const B_=(t,e)=>{const r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=t.dims[3],r.height=t.dims[2];const n=r.getContext("2d");if(n!=null){let a,s;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(a=t.dims[2],s=t.dims[3]):(a=t.dims[3],s=t.dims[2]);const i=(e==null?void 0:e.format)!==void 0?e.format:"RGB",o=e==null?void 0:e.norm;let l,d;o===void 0||o.mean===void 0?l=[255,255,255,255]:typeof o.mean=="number"?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],o.mean[3]!==void 0&&(l[3]=o.mean[3])),o===void 0||o.bias===void 0?d=[0,0,0,0]:typeof o.bias=="number"?d=[o.bias,o.bias,o.bias,o.bias]:(d=[o.bias[0],o.bias[1],o.bias[2],0],o.bias[3]!==void 0&&(d[3]=o.bias[3]));const c=s*a;let f=0,g=c,y=c*2,p=-1;i==="RGBA"?(f=0,g=c,y=c*2,p=c*3):i==="RGB"?(f=0,g=c,y=c*2):i==="RBG"&&(f=0,y=c,g=c*2);for(let v=0;v<s;v++)for(let S=0;S<a;S++){const E=(t.data[f++]-d[0])*l[0],k=(t.data[g++]-d[1])*l[1],O=(t.data[y++]-d[2])*l[2],I=p===-1?255:(t.data[p++]-d[3])*l[3];n.fillStyle="rgba("+E+","+k+","+O+","+I+")",n.fillRect(S,v,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},D_=(t,e)=>{const r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let n;if(r!=null){let a,s,i;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(a=t.dims[2],s=t.dims[1],i=t.dims[3]):(a=t.dims[3],s=t.dims[2],i=t.dims[1]);const o=e!==void 0&&e.format!==void 0?e.format:"RGB",l=e==null?void 0:e.norm;let d,c;l===void 0||l.mean===void 0?d=[255,255,255,255]:typeof l.mean=="number"?d=[l.mean,l.mean,l.mean,l.mean]:(d=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(d[3]=l.mean[3])),l===void 0||l.bias===void 0?c=[0,0,0,0]:typeof l.bias=="number"?c=[l.bias,l.bias,l.bias,l.bias]:(c=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(c[3]=l.bias[3]));const f=s*a;if(e!==void 0&&(e.format!==void 0&&i===4&&e.format!=="RGBA"||i===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const g=4;let y=0,p=1,v=2,S=3,E=0,k=f,O=f*2,I=-1;o==="RGBA"?(E=0,k=f,O=f*2,I=f*3):o==="RGB"?(E=0,k=f,O=f*2):o==="RBG"&&(E=0,O=f,k=f*2),n=r.createImageData(a,s);for(let T=0;T<s*a;y+=g,p+=g,v+=g,S+=g,T++)n.data[y]=(t.data[E++]-c[0])*d[0],n.data[p]=(t.data[k++]-c[1])*d[1],n.data[v]=(t.data[O++]-c[2])*d[2],n.data[S]=I===-1?255:(t.data[I++]-c[3])*d[3]}else throw new Error("Can not access image data");return n},ho=(t,e)=>{if(t===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:r,width:n}=e,a=e.norm??{mean:255,bias:0};let s,i;typeof a.mean=="number"?s=[a.mean,a.mean,a.mean,a.mean]:s=[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],typeof a.bias=="number"?i=[a.bias,a.bias,a.bias,a.bias]:i=[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];const o=e.format!==void 0?e.format:"RGBA",l=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",d=r*n,c=l==="RGBA"?new Float32Array(d*4):new Float32Array(d*3);let f=4,g=0,y=1,p=2,v=3,S=0,E=d,k=d*2,O=-1;o==="RGB"&&(f=3,g=0,y=1,p=2,v=-1),l==="RGBA"?O=d*3:l==="RBG"?(S=0,k=d,E=d*2):l==="BGR"&&(k=0,E=d,S=d*2);for(let T=0;T<d;T++,g+=f,p+=f,y+=f,v+=f)c[S++]=(t[g]+i[0])/s[0],c[E++]=(t[y]+i[1])/s[1],c[k++]=(t[p]+i[2])/s[2],O!==-1&&v!==-1&&(c[O++]=(t[v]+i[3])/s[3]);return l==="RGBA"?new sr("float32",c,[1,4,r,n]):new sr("float32",c,[1,3,r,n])},N_=async(t,e)=>{const r=typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement,n=typeof ImageData<"u"&&t instanceof ImageData,a=typeof ImageBitmap<"u"&&t instanceof ImageBitmap,s=typeof t=="string";let i,o=e??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},d=c=>c instanceof HTMLCanvasElement||c instanceof OffscreenCanvas?c.getContext("2d"):null;if(r){const c=l();c.width=t.width,c.height=t.height;const f=d(c);if(f!=null){let g=t.height,y=t.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(g=e.resizedHeight,y=e.resizedWidth),e!==void 0){if(o=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=g,o.width=y}else o.tensorFormat="RGBA",o.height=g,o.width=y;f.drawImage(t,0,0),i=f.getImageData(0,0,y,g).data}else throw new Error("Can not access image data")}else if(n){let c,f;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(c=e.resizedHeight,f=e.resizedWidth):(c=t.height,f=t.width),e!==void 0&&(o=e),o.format="RGBA",o.height=c,o.width=f,e!==void 0){const g=l();g.width=f,g.height=c;const y=d(g);if(y!=null)y.putImageData(t,0,0),i=y.getImageData(0,0,f,c).data;else throw new Error("Can not access image data")}else i=t.data}else if(a){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");const c=l();c.width=t.width,c.height=t.height;const f=d(c);if(f!=null){const g=t.height,y=t.width;return f.drawImage(t,0,0,y,g),i=f.getImageData(0,0,y,g).data,o.height=g,o.width=y,ho(i,o)}else throw new Error("Can not access image data")}else{if(s)return new Promise((c,f)=>{const g=l(),y=d(g);if(!t||!y)return f();const p=new Image;p.crossOrigin="Anonymous",p.src=t,p.onload=()=>{g.width=p.width,g.height=p.height,y.drawImage(p,0,0,g.width,g.height);const v=y.getImageData(0,0,g.width,g.height);o.height=g.height,o.width=g.width,c(ho(v.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return ho(i,o);throw new Error("Input data provided is not supported - aborted tensor creation")},F_=(t,e)=>{const{width:r,height:n,download:a,dispose:s}=e,i=[1,n,r,4];return new sr({location:"texture",type:"float32",texture:t,dims:i,download:a,dispose:s})},L_=(t,e)=>{const{dataType:r,dims:n,download:a,dispose:s}=e;return new sr({location:"gpu-buffer",type:r??"float32",gpuBuffer:t,dims:n,download:a,dispose:s})},U_=(t,e,r)=>new sr({location:"cpu-pinned",type:t,data:e,dims:r??[e.length]}),ii=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),fo=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let Rf=!1;const W_=()=>{if(!Rf){Rf=!0;const t=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",e=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";t&&(ii.set("int64",BigInt64Array),fo.set(BigInt64Array,"int64")),e&&(ii.set("uint64",BigUint64Array),fo.set(BigUint64Array,"uint64"))}},V_=t=>{let e=1;for(let r=0;r<t.length;r++){const n=t[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);e*=n}return e},G_=(t,e)=>{switch(t.location){case"cpu":return new sr(t.type,t.data,e);case"cpu-pinned":return new sr({location:"cpu-pinned",data:t.data,type:t.type,dims:e});case"texture":return new sr({location:"texture",texture:t.texture,type:t.type,dims:e});case"gpu-buffer":return new sr({location:"gpu-buffer",gpuBuffer:t.gpuBuffer,type:t.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${t.location} is not supported`)}};let sr=class{constructor(e,r,n){W_();let a,s;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,a=e.type,s=e.dims,e.location){case"cpu-pinned":{const o=ii.get(a);if(!o)throw new TypeError(`unsupported type "${a}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(a!=="float32")throw new TypeError(`unsupported type "${a}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(a!=="float32"&&a!=="float16"&&a!=="int32"&&a!=="int64"&&a!=="uint32"&&a!=="bool")throw new TypeError(`unsupported type "${a}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,l;if(typeof e=="string")if(a=e,l=n,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");o=r}else{const d=ii.get(e);if(d===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?o=d.from(r,BigInt):o=d.from(r)}else if(r instanceof d)o=r;else throw new TypeError(`A ${a} tensor's data must be type of ${d}`)}else if(l=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const d=typeof e[0];if(d==="string")a="string",o=e;else if(d==="boolean")a="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${d}.`)}else{const d=fo.get(e.constructor);if(d===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);a=d,o=e}if(l===void 0)l=[o.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");s=l,this.cpuData=o,this.dataLocation="cpu"}const i=V_(s);if(this.cpuData&&i!==this.cpuData.length)throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=a,this.dims=s,this.size=i}static async fromImage(e,r){return N_(e,r)}static fromTexture(e,r){return F_(e,r)}static fromGpuBuffer(e,r){return L_(e,r)}static fromPinnedBuffer(e,r,n){return U_(e,r,n)}toDataURL(e){return B_(this,e)}toImageData(e){return D_(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return G_(this,e)}};const H_=sr,Gn=[];let mo,Hr;Ar.IS_NODE_ENV?(Hr=Ve??cr,Gn.push("cpu"),mo=["cpu"]):(Hr=P_,Ar.IS_WEBGPU_AVAILABLE&&Gn.push("webgpu"),Gn.push("wasm"),mo=["wasm"]);const q_=Hr.InferenceSession;function j_(t){let e=mo;if(t){if(!Gn.includes(t))throw new Error(`Unsupported device: "${t}". Should be one of: ${Gn.join(", ")}.`);e=[t]}return e}async function Pf(t,e){return await q_.create(t,e)}function Bf(t){return t instanceof Hr.Tensor}const Yt=Hr==null?void 0:Hr.env;Yt!=null&&Yt.wasm&&(Yt.wasm.wasmPaths="https://cdn.jsdelivr.net/npm/onnxruntime-web@1.19.0-dev.20240509-69cfcba38a/dist/",Yt.wasm.proxy=!Ar.IS_WEBWORKER_ENV,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(Yt.wasm.numThreads=1),typeof navigator<"u"&&/iP(hone|od|ad).+16_4.+AppleWebKit/.test(navigator.userAgent)&&(Yt.wasm.simd=!1));function K_(){var t;return(t=Yt==null?void 0:Yt.wasm)==null?void 0:t.proxy}Ct.backends.onnx=Yt;const go=async(t,e,r)=>{const n=await Pf(t,e);return async a=>{const s=Object.fromEntries(Object.entries(a).map(([o,l])=>[o,l.ort_tensor])),i=await n.run(s);return console.log("outputs",i),new ke(i[r])}};class Df{static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=go(new Uint8Array([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20]),this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=go(new Uint8Array([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20]),this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=go(new Uint8Array([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20]),this.session_options,"c")),this._matmul}}W(Df,"session_options",{});const Nf=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array});class ke{constructor(...e){W(this,"ort_tensor");return Bf(e[0])?this.ort_tensor=e[0]:this.ort_tensor=new H_(e[0],e[1],e[2]),new Proxy(this,{get:(r,n)=>{if(typeof n=="string"){let a=Number(n);if(Number.isInteger(a))return r._getitem(a)}return r[n]},set:(r,n,a)=>r[n]=a})}get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[e,...r]=this.dims;if(r.length>0){const n=r.reduce((a,s)=>a*s);for(let a=0;a<e;++a)yield this._subarray(a,n,r)}else yield*this.data}_getitem(e){const[r,...n]=this.dims;if(e=or(e,r),n.length>0){const a=n.reduce((s,i)=>s*i);return this._subarray(e,a,n)}else return new ke(this.type,[this.data[e]],n)}indexOf(e){const r=this.data;for(let n=0;n<r.length;++n)if(r[n]==e)return n;return-1}_subarray(e,r,n){const a=e*r,s=(e+1)*r,i="subarray"in this.data?this.data.subarray(a,s):this.data.slice(a,s);return new ke(this.type,i,n)}item(){const e=this.data;if(e.length!==1)throw new Error(`a Tensor with ${e.length} elements cannot be converted to Scalar`);return e[0]}tolist(){return Y_(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const e=this.data;for(let r=0;r<e.length;++r)e[r]=1/(1+Math.exp(-e[r]));return this}mul(e){return this.clone().mul_(e)}mul_(e){const r=this.data;for(let n=0;n<r.length;++n)r[n]*=e;return this}div(e){return this.clone().div_(e)}div_(e){const r=this.data;for(let n=0;n<r.length;++n)r[n]/=e;return this}add(e){return this.clone().add_(e)}add_(e){const r=this.data;for(let n=0;n<r.length;++n)r[n]+=e;return this}clone(){return new ke(this.type,this.data.slice(),this.dims.slice())}slice(...e){let r=[],n=[];for(let d=0;d<this.dims.length;++d){let c=e[d];if(c==null)n.push([0,this.dims[d]]),r.push(this.dims[d]);else if(typeof c=="number")c=or(c,this.dims[d],d),n.push([c,c+1]);else if(Array.isArray(c)&&c.length===2){let[f,g]=c;if(f=f===null?0:or(f,this.dims[d],d,!1),g=g===null?this.dims[d]:or(g,this.dims[d],d,!1),f>g)throw new Error(`Invalid slice: ${c}`);let y=[Math.max(f,0),Math.min(g,this.dims[d])];n.push(y),r.push(y[1]-y[0])}else throw new Error(`Invalid slice: ${c}`)}let a=n.map(([d,c])=>c-d),s=a.reduce((d,c)=>d*c);const i=this.data;let o=new i.constructor(s);const l=this.stride();for(let d=0;d<s;++d){let c=0;for(let f=a.length-1,g=d;f>=0;--f){const y=a[f];c+=(g%y+n[f][0])*l[f],g=Math.floor(g/y)}o[d]=i[c]}return new ke(this.type,o,r)}permute(...e){return Q_(this,e)}transpose(...e){return this.permute(...e)}sum(e=null,r=!1){return this.norm(1,e,r)}norm(e="fro",r=null,n=!1){if(e==="fro")e=2;else if(typeof e=="string")throw Error(`Unsupported norm: ${e}`);const a=this.data;if(r===null){let o=a.reduce((l,d)=>l+d**e,0)**(1/e);return new ke(this.type,[o],[])}r=or(r,this.dims.length);const s=this.dims.slice();s[r]=1;const i=new a.constructor(a.length/this.dims[r]);for(let o=0;o<a.length;++o){let l=0;for(let d=this.dims.length-1,c=o,f=1;d>=0;--d){const g=this.dims[d];if(d!==r){const y=c%g;l+=y*f,f*=s[d]}c=Math.floor(c/g)}i[l]+=a[o]**e}if(e!==1)for(let o=0;o<i.length;++o)i[o]=i[o]**(1/e);return n||s.splice(r,1),new ke(this.type,i,s)}normalize_(e=2,r=1){r=or(r,this.dims.length);const n=this.norm(e,r,!0),a=this.data;for(let s=0;s<a.length;++s){let i=0;for(let o=this.dims.length-1,l=s,d=1;o>=0;--o){const c=this.dims[o];if(o!==r){const f=l%c;i+=f*d,d*=this.dims[o]}l=Math.floor(l/c)}a[s]/=n.data[i]}return this}normalize(e=2,r=1){return this.clone().normalize_(e,r)}stride(){return ey(this.dims)}squeeze(e=null){return new ke(this.type,this.data,Ff(this.dims,e))}squeeze_(e=null){return this.dims=Ff(this.dims,e),this}unsqueeze(e=null){return new ke(this.type,this.data,Lf(this.dims,e))}unsqueeze_(e=null){return this.dims=Lf(this.dims,e),this}flatten_(e=0,r=-1){r=(r+this.dims.length)%this.dims.length;let n=this.dims.slice(0,e),a=this.dims.slice(e,r+1),s=this.dims.slice(r+1);return this.dims=[...n,a.reduce((i,o)=>i*o,1),...s],this}flatten(e=0,r=-1){return this.clone().flatten_(e,r)}view(...e){let r=-1;for(let n=0;n<e.length;++n)if(e[n]===-1){if(r!==-1)throw new Error("Only one dimension can be inferred");r=n}if(r!==-1){const n=e.reduce((a,s,i)=>i!==r?a*s:a,1);e[r]=this.data.length/n}return new ke(this.type,this.data,e)}neg_(){const e=this.data;for(let r=0;r<e.length;++r)e[r]=-e[r];return this}neg(){return this.clone().neg_()}clamp_(e,r){const n=this.data;for(let a=0;a<n.length;++a)n[a]=Math.min(Math.max(n[a],e),r);return this}clamp(e,r){return this.clone().clamp_(e,r)}round_(){const e=this.data;for(let r=0;r<e.length;++r)e[r]=Math.round(e[r]);return this}round(){return this.clone().round_()}mean(e=null,r=!1){return yo(this,e,r)}to(e){if(this.type===e)return this;if(!Nf.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);return new ke(e,Nf[e].from(this.data),this.dims)}}function Y_(t,e){const r=t.length,n=e.reduce((s,i)=>s*i);if(r!==n)throw Error(`cannot reshape array of size ${r} into shape (${e})`);let a=t;for(let s=e.length-1;s>=0;s--)a=a.reduce((i,o)=>{let l=i[i.length-1];return l.length<e[s]?l.push(o):i.push([o]),i},[[]]);return a[0]}function Q_(t,e){const[r,n]=p0(t.data,t.dims,e);return new ke(t.type,r,n)}async function X_(t,e){return await(await Df.matmul)({a:t,b:e})}function Ff(t,e){return t=t.slice(),e===null?t=t.filter(r=>r!==1):typeof e=="number"?t[e]===1&&t.splice(e,1):Array.isArray(e)&&(t=t.filter((r,n)=>r!==1||!e.includes(n))),t}function Lf(t,e){return e=or(e,t.length+1),t=t.slice(),t.splice(e,0,1),t}function or(t,e,r=null,n=!0){if(n&&(t<-e||t>=e))throw new Error(`IndexError: index ${t} is out of bounds for dimension${r===null?"":" "+r} with size ${e}`);return t<0&&(t=(t%e+e)%e),t}function Qt(t,e=0){e=or(e,t[0].dims.length);const r=t[0].dims.slice();r[e]=t.reduce((i,o)=>i+o.dims[e],0);const n=r.reduce((i,o)=>i*o,1),a=new t[0].data.constructor(n),s=t[0].type;if(e===0){let i=0;for(let o of t)a.set(o.data,i),i+=o.data.length}else{let i=0;for(let o=0;o<t.length;++o){let l=t[o];for(let d=0;d<l.data.length;++d){let c=0;for(let f=l.dims.length-1,g=d,y=1;f>=0;--f){const p=l.dims[f];let v=g%p;f===e&&(v+=i),c+=v*y,y*=r[f],g=Math.floor(g/p)}a[c]=l.data[d]}i+=l.dims[e]}}return new ke(s,a,r)}function _o(t,e=0){return Qt(t.map(r=>r.unsqueeze(e)),e)}function J_(t,e=null,r=1,n=!1){if(e===null){const d=t.data.reduce((y,p)=>y+p,0)/t.data.length,c=Math.sqrt(t.data.reduce((y,p)=>y+(p-d)**2,0)/(t.data.length-r)),f=new ke(t.type,[d],[]);return[new ke(t.type,[c],[]),f]}e=or(e,t.dims.length);const a=yo(t,e,n),s=t.dims.slice();s[e]=1;const i=new t.data.constructor(t.data.length/t.dims[e]);for(let l=0;l<t.data.length;++l){let d=0;for(let c=t.dims.length-1,f=l,g=1;c>=0;--c){const y=t.dims[c];if(c!==e){const p=f%y;d+=p*g,g*=s[c]}f=Math.floor(f/y)}i[d]+=(t.data[l]-a.data[d])**2}for(let l=0;l<i.length;++l)i[l]=Math.sqrt(i[l]/(t.dims[e]-r));return n||s.splice(e,1),[new ke(t.type,i,s),a]}function yo(t,e=null,r=!1){if(e===null){let s=t.data.reduce((i,o)=>i+o,0);return new ke(t.type,[s/t.data.length],[])}e=or(e,t.dims.length);const n=t.dims.slice();n[e]=1;const a=new t.data.constructor(t.data.length/t.dims[e]);for(let s=0;s<t.data.length;++s){let i=0;for(let o=t.dims.length-1,l=s,d=1;o>=0;--o){const c=t.dims[o];if(o!==e){const f=l%c;i+=f*d,d*=n[o]}l=Math.floor(l/c)}a[i]+=t.data[s]}if(t.dims[e]!==1)for(let s=0;s<a.length;++s)a[s]=a[s]/t.dims[e];return r||n.splice(e,1),new ke(t.type,a,n)}function Z_(t){const[e,r]=t.dims,n=[e+1,r+1],a=new ke("float32",new Float32Array(n[0]*n[1]).fill(1/0),n),s=new ke("float32",new Float32Array(n[0]*n[1]).fill(-1),n);a[0].data[0]=0;for(let c=1;c<r+1;++c)for(let f=1;f<e+1;++f){const g=a[f-1][c-1].item(),y=a[f-1][c].item(),p=a[f][c-1].item();let v,S;g<y&&g<p?(v=g,S=0):y<g&&y<p?(v=y,S=1):(v=p,S=2),a[f].data[c]=t[f-1][c-1].item()+v,s[f].data[c]=S}let i=e,o=r;s.data.fill(2,0,n[1]);for(let c=0;c<n[0];++c)s[c].data[0]=1;let l=[],d=[];for(;i>0||o>0;)switch(l.push(i-1),d.push(o-1),s[i][o].item()){case 0:--i,--o;break;case 1:--i;break;case 2:--o;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${i}, ${o}]. Please file a bug report.`)}return l.reverse(),d.reverse(),[l,d]}function ey(t){const e=new Array(t.length);for(let r=t.length-1,n=1;r>=0;--r)e[r]=n,n*=t[r];return e}function wo(t,e,r,n){const a=t.reduce((s,i)=>s*i,1);return new ke(r,new n(a).fill(e),t)}function ty(t,e){let r,n;return r="float32",n=Float32Array,wo(t,e,r,n)}function ry(t,e){return ty(t.dims,e)}function ln(t){return wo(t,1n,"int64",BigInt64Array)}function ny(t){return ln(t.dims)}function ay(t){return wo(t,0n,"int64",BigInt64Array)}function iy(t){return ay(t.dims)}class sy{constructor(e=(r,n)=>r>n){this._heap=[],this._comparator=e}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const r of e)this._heap.push(r),this._siftUp();return this.size}pop(){const e=this.peek(),r=this.size-1;return r>0&&this._swap(0,r),this._heap.pop(),this._siftDown(),e}replace(e){const r=this.peek();return this._heap[0]=e,this._siftDown(),r}_parent(e){return(e+1>>>1)-1}_left(e){return(e<<1)+1}_right(e){return e+1<<1}_greater(e,r){return this._comparator(this._heap[e],this._heap[r])}_swap(e,r){const n=this._heap[e];this._heap[e]=this._heap[r],this._heap[r]=n}_siftUp(){let e=this.size-1;for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const r=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,r),e=r}}}class oy{constructor(){this.root=si.default()}extend(e){for(let r of e)this.push(r)}push(e){let r=this.root;for(let n of e){let a=r.children.get(n);a===void 0&&(a=si.default(),r.children.set(n,a)),r=a}r.isLeaf=!0}*commonPrefixSearch(e){let r=this.root,n="";for(let a=0;a<e.length&&r!==void 0;++a){const s=e[a];n+=s,r=r.children.get(s),r!==void 0&&r.isLeaf&&(yield n)}}}class si{constructor(e,r){this.isLeaf=e,this.children=r}static default(){return new si(!1,new Map)}}class uy{constructor(e,r,n){this.sentence=e,this.len=e.length,this.bosTokenId=r,this.eosTokenId=n,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const a=new Hn(this.bosTokenId,0,0,0,0),s=new Hn(this.eosTokenId,1,this.len,0,0);this.nodes.push(a.clone()),this.nodes.push(s.clone()),this.beginNodes[this.len].push(s),this.endNodes[0].push(a)}insert(e,r,n,a){const s=this.nodes.length,i=new Hn(a,s,e,r,n);this.beginNodes[e].push(i),this.endNodes[e+r].push(i),this.nodes.push(i)}viterbi(){const e=this.len;let r=0;for(;r<=e;){if(this.beginNodes[r].length==0)return[];for(let o of this.beginNodes[r]){o.prev=null;let l=0,d=null;for(let c of this.endNodes[r]){const f=c.backtraceScore+o.score;(d===null||f>l)&&(d=c.clone(),l=f)}if(d!==null)o.prev=d,o.backtraceScore=l;else return[]}++r}const n=[],s=this.beginNodes[e][0].prev;if(s===null)return[];let i=s.clone();for(;i.prev!==null;)n.push(i.clone()),i=i.clone().prev.clone();return n.reverse(),n}piece(e){return this.sentence.slice(e.pos,e.pos+e.length)}tokens(){return this.viterbi().map(r=>this.piece(r))}tokenIds(){return this.viterbi().map(r=>r.tokenId)}}class Hn{constructor(e,r,n,a,s){this.tokenId=e,this.nodeId=r,this.pos=n,this.length=a,this.score=s,this.prev=null,this.backtraceScore=0}clone(){const e=new Hn(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}var L=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator"}),Uf=Object.freeze({set:L.Set,for:L.For,in:L.In,is:L.Is,if:L.If,else:L.Else,endif:L.EndIf,elif:L.ElseIf,endfor:L.EndFor,and:L.And,or:L.Or,not:L.Not,"not in":L.NotIn,true:L.BooleanLiteral,false:L.BooleanLiteral}),qr=class{constructor(t,e){this.value=t,this.type=e}};function Wf(t){return/\w/.test(t)}function bo(t){return/[0-9]/.test(t)}var ly=[["{%",L.OpenStatement],["%}",L.CloseStatement],["{{",L.OpenExpression],["}}",L.CloseExpression],["(",L.OpenParen],[")",L.CloseParen],["{",L.OpenCurlyBracket],["}",L.CloseCurlyBracket],["[",L.OpenSquareBracket],["]",L.CloseSquareBracket],[",",L.Comma],[".",L.Dot],[":",L.Colon],["|",L.Pipe],["<=",L.ComparisonBinaryOperator],[">=",L.ComparisonBinaryOperator],["==",L.ComparisonBinaryOperator],["!=",L.ComparisonBinaryOperator],["<",L.ComparisonBinaryOperator],[">",L.ComparisonBinaryOperator],["+",L.AdditiveBinaryOperator],["-",L.AdditiveBinaryOperator],["*",L.MultiplicativeBinaryOperator],["/",L.MultiplicativeBinaryOperator],["%",L.MultiplicativeBinaryOperator],["=",L.Equals]],dy=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function cy(t,e={}){return t.endsWith(`
`)&&(t=t.slice(0,-1)),t=t.replace(/{#.*?#}/gs,"{##}"),e.lstrip_blocks&&(t=t.replace(/^[ \t]*({[#%])/gm,"$1")),e.trim_blocks&&(t=t.replace(/([#%]})\n/g,"$1")),t.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function py(t,e={}){var i,o,l;const r=[],n=cy(t,e);let a=0;const s=d=>{let c="";for(;d(n[a]);){if(n[a]==="\\"){if(++a,a>=n.length)throw new SyntaxError("Unexpected end of input");const f=n[a++],g=dy.get(f);if(g===void 0)throw new SyntaxError(`Unexpected escaped character: ${f}`);c+=g;continue}if(c+=n[a++],a>=n.length)throw new SyntaxError("Unexpected end of input")}return c};e:for(;a<n.length;){const d=(i=r.at(-1))==null?void 0:i.type;if(d===void 0||d===L.CloseStatement||d===L.CloseExpression){let f="";for(;a<n.length&&!(n[a]==="{"&&(n[a+1]==="%"||n[a+1]==="{"));)f+=n[a++];if(f.length>0){r.push(new qr(f,L.Text));continue}}s(f=>/\s/.test(f));const c=n[a];if(c==="-"||c==="+"){const f=(o=r.at(-1))==null?void 0:o.type;if(f===L.Text||f===void 0)throw new SyntaxError(`Unexpected character: ${c}`);switch(f){case L.Identifier:case L.NumericLiteral:case L.BooleanLiteral:case L.StringLiteral:case L.CloseParen:case L.CloseSquareBracket:break;default:{++a;const g=s(bo);r.push(new qr(`${c}${g}`,g.length>0?L.NumericLiteral:L.UnaryOperator));continue}}}for(const[f,g]of ly)if(n.slice(a,a+f.length)===f){r.push(new qr(f,g)),a+=f.length;continue e}if(c==="'"||c==='"'){++a;const f=s(g=>g!==c);r.push(new qr(f,L.StringLiteral)),++a;continue}if(bo(c)){const f=s(bo);r.push(new qr(f,L.NumericLiteral));continue}if(Wf(c)){const f=s(Wf),g=Object.hasOwn(Uf,f)?Uf[f]:L.Identifier;g===L.In&&((l=r.at(-1))==null?void 0:l.type)===L.Not?(r.pop(),r.push(new qr("not in",L.NotIn))):r.push(new qr(f,g));continue}throw new SyntaxError(`Unexpected character: ${c}`)}return r}var qn=class{constructor(){W(this,"type","Statement")}},hy=class extends qn{constructor(e){super();W(this,"type","Program");this.body=e}},Vf=class extends qn{constructor(e,r,n){super();W(this,"type","If");this.test=e,this.body=r,this.alternate=n}},fy=class extends qn{constructor(e,r,n){super();W(this,"type","For");this.loopvar=e,this.iterable=r,this.body=n}},my=class extends qn{constructor(e,r){super();W(this,"type","Set");this.assignee=e,this.value=r}},ur=class extends qn{constructor(){super(...arguments);W(this,"type","Expression")}},gy=class extends ur{constructor(e,r,n){super();W(this,"type","MemberExpression");this.object=e,this.property=r,this.computed=n}},_y=class extends ur{constructor(e,r){super();W(this,"type","CallExpression");this.callee=e,this.args=r}},dn=class extends ur{constructor(e){super();W(this,"type","Identifier");this.value=e}},cn=class extends ur{constructor(e){super();W(this,"type","Literal");this.value=e}},yy=class extends cn{constructor(){super(...arguments);W(this,"type","NumericLiteral")}},Gf=class extends cn{constructor(){super(...arguments);W(this,"type","StringLiteral")}},Hf=class extends cn{constructor(){super(...arguments);W(this,"type","BooleanLiteral")}},wy=class extends cn{constructor(){super(...arguments);W(this,"type","ArrayLiteral")}},qf=class extends cn{constructor(){super(...arguments);W(this,"type","TupleLiteral")}},by=class extends cn{constructor(){super(...arguments);W(this,"type","ObjectLiteral")}},jn=class extends ur{constructor(e,r,n){super();W(this,"type","BinaryExpression");this.operator=e,this.left=r,this.right=n}},vy=class extends ur{constructor(e,r){super();W(this,"type","FilterExpression");this.operand=e,this.filter=r}},$y=class extends ur{constructor(e,r,n){super();W(this,"type","TestExpression");this.operand=e,this.negate=r,this.test=n}},xy=class extends ur{constructor(e,r){super();W(this,"type","UnaryExpression");this.operator=e,this.argument=r}},Sy=class extends ur{constructor(e=void 0,r=void 0,n=void 0){super();W(this,"type","SliceExpression");this.start=e,this.stop=r,this.step=n}},ky=class extends ur{constructor(e,r){super();W(this,"type","KeywordArgumentExpression");this.key=e,this.value=r}};function Ey(t){const e=new hy([]);let r=0;function n(D,z){const q=t[r++];if(!q||q.type!==D)throw new Error(`Parser Error: ${z}. ${q.type} !== ${D}.`);return q}function a(){switch(t[r].type){case L.Text:return o();case L.OpenStatement:return l();case L.OpenExpression:return d();default:throw new SyntaxError(`Unexpected token type: ${t[r].type}`)}}function s(...D){return r+D.length<=t.length&&D.some((z,q)=>z!==t[r+q].type)}function i(...D){return r+D.length<=t.length&&D.every((z,q)=>z===t[r+q].type)}function o(){return new Gf(n(L.Text,"Expected text token").value)}function l(){n(L.OpenStatement,"Expected opening statement token");let D;switch(t[r].type){case L.Set:++r,D=c(),n(L.CloseStatement,"Expected closing statement token");break;case L.If:++r,D=f(),n(L.OpenStatement,"Expected {% token"),n(L.EndIf,"Expected endif token"),n(L.CloseStatement,"Expected %} token");break;case L.For:++r,D=y(),n(L.OpenStatement,"Expected {% token"),n(L.EndFor,"Expected endfor token"),n(L.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${t[r].type}`)}return D}function d(){n(L.OpenExpression,"Expected opening expression token");const D=p();return n(L.CloseExpression,"Expected closing expression token"),D}function c(){const D=p();if(i(L.Equals)){++r;const z=c();return new my(D,z)}return D}function f(){var te,ye,he,R,ie,le,Ae,Me;const D=p();n(L.CloseStatement,"Expected closing statement token");const z=[],q=[];for(;!(((te=t[r])==null?void 0:te.type)===L.OpenStatement&&(((ye=t[r+1])==null?void 0:ye.type)===L.ElseIf||((he=t[r+1])==null?void 0:he.type)===L.Else||((R=t[r+1])==null?void 0:R.type)===L.EndIf));)z.push(a());if(((ie=t[r])==null?void 0:ie.type)===L.OpenStatement&&((le=t[r+1])==null?void 0:le.type)!==L.EndIf)if(++r,i(L.ElseIf))n(L.ElseIf,"Expected elseif token"),q.push(f());else for(n(L.Else,"Expected else token"),n(L.CloseStatement,"Expected closing statement token");!(((Ae=t[r])==null?void 0:Ae.type)===L.OpenStatement&&((Me=t[r+1])==null?void 0:Me.type)===L.EndIf);)q.push(a());return new Vf(D,z,q)}function g(D=!1){const z=D?de:p,q=[z()],te=i(L.Comma);for(;te&&(++r,q.push(z()),!!i(L.Comma)););return te?new qf(q):q[0]}function y(){const D=g(!0);if(!(D instanceof dn||D instanceof qf))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${D.type} instead`);n(L.In,"Expected `in` keyword following loop variable");const z=p();n(L.CloseStatement,"Expected closing statement token");const q=[];for(;s(L.OpenStatement,L.EndFor);)q.push(a());return new fy(D,z,q)}function p(){return v()}function v(){const D=S();if(i(L.If)){++r;const z=S();n(L.Else,"Expected else token");const q=S();return new Vf(z,[D],[q])}return D}function S(){let D=E();for(;i(L.Or);){const z=t[r];++r;const q=E();D=new jn(z,D,q)}return D}function E(){let D=k();for(;i(L.And);){const z=t[r];++r;const q=k();D=new jn(z,D,q)}return D}function k(){let D;for(;i(L.Not);){const z=t[r];++r;const q=k();D=new xy(z,q)}return D??O()}function O(){let D=I();for(;i(L.ComparisonBinaryOperator)||i(L.In)||i(L.NotIn);){const z=t[r];++r;const q=I();D=new jn(z,D,q)}return D}function I(){let D=pe();for(;i(L.AdditiveBinaryOperator);){const z=t[r];++r;const q=pe();D=new jn(z,D,q)}return D}function T(){const D=Z();return i(L.OpenParen)?F(D):D}function F(D){let z=new _y(D,B());return i(L.OpenParen)&&(z=F(z)),z}function B(){n(L.OpenParen,"Expected opening parenthesis for arguments list");const D=G();return n(L.CloseParen,"Expected closing parenthesis for arguments list"),D}function G(){const D=[];for(;!i(L.CloseParen);){let z=p();if(i(L.Equals)){if(++r,!(z instanceof dn))throw new SyntaxError("Expected identifier for keyword argument");const q=p();z=new ky(z,q)}D.push(z),i(L.Comma)&&++r}return D}function H(){const D=[];let z=!1;for(;!i(L.CloseSquareBracket);)i(L.Colon)?(D.push(void 0),++r,z=!0):(D.push(p()),i(L.Colon)&&(++r,z=!0));if(D.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(z){if(D.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new Sy(...D)}return D[0]}function Z(){let D=de();for(;i(L.Dot)||i(L.OpenSquareBracket);){const z=t[r];++r;let q;const te=z.type!==L.Dot;if(te)q=H(),n(L.CloseSquareBracket,"Expected closing square bracket");else if(q=de(),q.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");D=new gy(D,q,te)}return D}function pe(){let D=oe();for(;i(L.MultiplicativeBinaryOperator);){const z=t[r];++r;const q=oe();D=new jn(z,D,q)}return D}function oe(){let D=ne();for(;i(L.Is);){++r;const z=i(L.Not);z&&++r;let q=de();if(q instanceof Hf&&(q=new dn(q.value.toString())),!(q instanceof dn))throw new SyntaxError("Expected identifier for the test");D=new $y(D,z,q)}return D}function ne(){let D=T();for(;i(L.Pipe);){++r;let z=de();if(!(z instanceof dn))throw new SyntaxError("Expected identifier for the filter");i(L.OpenParen)&&(z=F(z)),D=new vy(D,z)}return D}function de(){const D=t[r];switch(D.type){case L.NumericLiteral:return++r,new yy(Number(D.value));case L.StringLiteral:return++r,new Gf(D.value);case L.BooleanLiteral:return++r,new Hf(D.value==="true");case L.Identifier:return++r,new dn(D.value);case L.OpenParen:{++r;const z=g();if(t[r].type!==L.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${t[r].type} instead`);return++r,z}case L.OpenSquareBracket:{++r;const z=[];for(;!i(L.CloseSquareBracket);)z.push(p()),i(L.Comma)&&++r;return++r,new wy(z)}case L.OpenCurlyBracket:{++r;const z=new Map;for(;!i(L.CloseCurlyBracket);){const q=p();n(L.Colon,"Expected colon between key and value in object literal");const te=p();z.set(q,te),i(L.Comma)&&++r}return++r,new by(z)}default:throw new SyntaxError(`Unexpected token: ${D.type}`)}}for(;r<t.length;)e.body.push(a());return e}function Cy(t,e,r=1){e===void 0&&(e=t,t=0);const n=[];for(let a=t;a<e;a+=r)n.push(a);return n}function jf(t,e,r,n=1){const a=Math.sign(n);a>=0?(e=(e??(e=0))<0?Math.max(t.length+e,0):Math.min(e,t.length),r=(r??(r=t.length))<0?Math.max(t.length+r,0):Math.min(r,t.length)):(e=(e??(e=t.length-1))<0?Math.max(t.length+e,-1):Math.min(e,t.length-1),r=(r??(r=-1))<-1?Math.max(t.length+r,-1):Math.min(r,t.length-1));const s=[];for(let i=e;a*i<a*r;i+=n)s.push(t[i]);return s}function Kf(t){return t.replace(/\b\w/g,e=>e.toUpperCase())}var fr=class{constructor(t=void 0){W(this,"type","RuntimeValue");W(this,"value");W(this,"builtins",new Map);this.value=t}__bool__(){return new Je(!!this.value)}},qe=class extends fr{constructor(){super(...arguments);W(this,"type","NumericValue")}},Re=class extends fr{constructor(){super(...arguments);W(this,"type","StringValue");W(this,"builtins",new Map([["upper",new mr(()=>new Re(this.value.toUpperCase()))],["lower",new mr(()=>new Re(this.value.toLowerCase()))],["strip",new mr(()=>new Re(this.value.trim()))],["title",new mr(()=>new Re(Kf(this.value)))],["length",new qe(this.value.length)]]))}},Je=class extends fr{constructor(){super(...arguments);W(this,"type","BooleanValue")}},Xt=class extends fr{constructor(){super(...arguments);W(this,"type","ObjectValue");W(this,"builtins",new Map([["get",new mr(([e,r])=>{if(!(e instanceof Re))throw new Error(`Object key must be a string: got ${e.type}`);return this.value.get(e.value)??r??new Kn})],["items",new mr(()=>new Ye(Array.from(this.value.entries()).map(([e,r])=>new Ye([new Re(e),r]))))]]))}__bool__(){return new Je(this.value.size>0)}},Ye=class extends fr{constructor(){super(...arguments);W(this,"type","ArrayValue");W(this,"builtins",new Map([["length",new qe(this.value.length)]]))}__bool__(){return new Je(this.value.length>0)}},Ty=class extends Ye{constructor(){super(...arguments);W(this,"type","TupleValue")}},mr=class extends fr{constructor(){super(...arguments);W(this,"type","FunctionValue")}},Kn=class extends fr{constructor(){super(...arguments);W(this,"type","NullValue")}},Jt=class extends fr{constructor(){super(...arguments);W(this,"type","UndefinedValue")}},vo=class{constructor(t){W(this,"variables",new Map([["namespace",new mr(t=>{if(t.length===0)return new Xt(new Map);if(t.length!==1||!(t[0]instanceof Xt))throw new Error("`namespace` expects either zero arguments or a single object argument");return t[0]})]]));W(this,"tests",new Map([["boolean",t=>t.type==="BooleanValue"],["callable",t=>t instanceof mr],["odd",t=>{if(t.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${t.type}`);return t.value%2!==0}],["even",t=>{if(t.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${t.type}`);return t.value%2===0}],["false",t=>t.type==="BooleanValue"&&!t.value],["true",t=>t.type==="BooleanValue"&&t.value],["number",t=>t.type==="NumericValue"],["integer",t=>t.type==="NumericValue"&&Number.isInteger(t.value)],["iterable",t=>t instanceof Ye||t instanceof Re],["lower",t=>{const e=t.value;return t.type==="StringValue"&&e===e.toLowerCase()}],["upper",t=>{const e=t.value;return t.type==="StringValue"&&e===e.toUpperCase()}],["none",t=>t.type==="NullValue"],["defined",t=>t.type!=="UndefinedValue"],["undefined",t=>t.type==="UndefinedValue"],["equalto",(t,e)=>t.value===e.value]]));this.parent=t}set(t,e){return this.declareVariable(t,oi(e))}declareVariable(t,e){if(this.variables.has(t))throw new SyntaxError(`Variable already declared: ${t}`);return this.variables.set(t,e),e}setVariable(t,e){return this.variables.set(t,e),e}resolve(t){if(this.variables.has(t))return this;if(this.parent)return this.parent.resolve(t);throw new Error(`Unknown variable: ${t}`)}lookupVariable(t){try{return this.resolve(t).variables.get(t)??new Jt}catch{return new Jt}}},Iy=class{constructor(t){W(this,"global");this.global=t??new vo}run(t){return this.evaluate(t,this.global)}evaluateBinaryExpression(t,e){const r=this.evaluate(t.left,e);switch(t.operator.value){case"and":return r.__bool__().value?this.evaluate(t.right,e):r;case"or":return r.__bool__().value?r:this.evaluate(t.right,e)}const n=this.evaluate(t.right,e);switch(t.operator.value){case"==":return new Je(r.value==n.value);case"!=":return new Je(r.value!=n.value)}if(r instanceof Jt||n instanceof Jt)throw new Error("Cannot perform operation on undefined values");if(r instanceof Kn||n instanceof Kn)throw new Error("Cannot perform operation on null values");if(r instanceof qe&&n instanceof qe)switch(t.operator.value){case"+":return new qe(r.value+n.value);case"-":return new qe(r.value-n.value);case"*":return new qe(r.value*n.value);case"/":return new qe(r.value/n.value);case"%":return new qe(r.value%n.value);case"<":return new Je(r.value<n.value);case">":return new Je(r.value>n.value);case">=":return new Je(r.value>=n.value);case"<=":return new Je(r.value<=n.value)}else if(r instanceof Ye&&n instanceof Ye)switch(t.operator.value){case"+":return new Ye(r.value.concat(n.value))}else if(n instanceof Ye){const a=n.value.find(s=>s.value===r.value)!==void 0;switch(t.operator.value){case"in":return new Je(a);case"not in":return new Je(!a)}}if(r instanceof Re||n instanceof Re)switch(t.operator.value){case"+":return new Re(r.value.toString()+n.value.toString())}if(r instanceof Re&&n instanceof Re)switch(t.operator.value){case"in":return new Je(n.value.includes(r.value));case"not in":return new Je(!n.value.includes(r.value))}if(r instanceof Re&&n instanceof Xt)switch(t.operator.value){case"in":return new Je(n.value.has(r.value));case"not in":return new Je(!n.value.has(r.value))}throw new SyntaxError(`Unknown operator "${t.operator.value}" between ${r.type} and ${n.type}`)}evaluateFilterExpression(t,e){const r=this.evaluate(t.operand,e);if(t.filter.type==="Identifier"){const n=t.filter;if(r instanceof Ye)switch(n.value){case"list":return r;case"first":return r.value[0];case"last":return r.value[r.value.length-1];case"length":return new qe(r.value.length);case"reverse":return new Ye(r.value.reverse());case"sort":return new Ye(r.value.sort((a,s)=>{if(a.type!==s.type)throw new Error(`Cannot compare different types: ${a.type} and ${s.type}`);switch(a.type){case"NumericValue":return a.value-s.value;case"StringValue":return a.value.localeCompare(s.value);default:throw new Error(`Cannot compare type: ${a.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${n.value}`)}else if(r instanceof Re)switch(n.value){case"length":return new qe(r.value.length);case"upper":return new Re(r.value.toUpperCase());case"lower":return new Re(r.value.toLowerCase());case"title":return new Re(Kf(r.value));case"capitalize":return new Re(r.value.charAt(0).toUpperCase()+r.value.slice(1));case"trim":return new Re(r.value.trim());default:throw new Error(`Unknown StringValue filter: ${n.value}`)}else if(r instanceof qe)switch(n.value){case"abs":return new qe(Math.abs(r.value));default:throw new Error(`Unknown NumericValue filter: ${n.value}`)}else if(r instanceof Xt)switch(n.value){case"items":return new Ye(Array.from(r.value.entries()).map(([a,s])=>new Ye([new Re(a),s])));case"length":return new qe(r.value.size);default:throw new Error(`Unknown ObjectValue filter: ${n.value}`)}throw new Error(`Cannot apply filter "${n.value}" to type: ${r.type}`)}else if(t.filter.type==="CallExpression"){const n=t.filter;if(n.callee.type!=="Identifier")throw new Error(`Unknown filter: ${n.callee.type}`);const a=n.callee.value;if(r instanceof Ye){switch(a){case"selectattr":{if(r.value.some(c=>!(c instanceof Xt)))throw new Error("`selectattr` can only be applied to array of objects");if(n.args.some(c=>c.type!=="StringLiteral"))throw new Error("arguments of `selectattr` must be strings");const[s,i,o]=n.args.map(c=>this.evaluate(c,e));let l;if(i){const c=e.tests.get(i.value);if(!c)throw new Error(`Unknown test: ${i.value}`);l=c}else l=(...c)=>c[0].__bool__().value;const d=r.value.filter(c=>{const f=c.value.get(s.value);return f?l(f,o):!1});return new Ye(d)}}throw new Error(`Unknown ArrayValue filter: ${a}`)}else throw new Error(`Cannot apply filter "${a}" to type: ${r.type}`)}throw new Error(`Unknown filter: ${t.filter.type}`)}evaluateTestExpression(t,e){const r=this.evaluate(t.operand,e),n=e.tests.get(t.test.value);if(!n)throw new Error(`Unknown test: ${t.test.value}`);const a=n(r);return new Je(t.negate?!a:a)}evaluateUnaryExpression(t,e){const r=this.evaluate(t.argument,e);switch(t.operator.value){case"not":return new Je(!r.value);default:throw new SyntaxError(`Unknown operator: ${t.operator.value}`)}}evalProgram(t,e){return this.evaluateBlock(t.body,e)}evaluateBlock(t,e){let r="";for(const n of t){const a=this.evaluate(n,e);a.type!=="NullValue"&&a.type!=="UndefinedValue"&&(r+=a.value)}return new Re(r)}evaluateIdentifier(t,e){return e.lookupVariable(t.value)}evaluateCallExpression(t,e){const r=[],n=new Map;for(const s of t.args)if(s.type==="KeywordArgumentExpression"){const i=s;n.set(i.key.value,this.evaluate(i.value,e))}else r.push(this.evaluate(s,e));n.size>0&&r.push(new Xt(n));const a=this.evaluate(t.callee,e);if(a.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${a.type}`);return a.value(r,e)}evaluateSliceExpression(t,e,r){if(!(t instanceof Ye||t instanceof Re))throw new Error("Slice object must be an array or string");const n=this.evaluate(e.start,r),a=this.evaluate(e.stop,r),s=this.evaluate(e.step,r);if(!(n instanceof qe||n instanceof Jt))throw new Error("Slice start must be numeric or undefined");if(!(a instanceof qe||a instanceof Jt))throw new Error("Slice stop must be numeric or undefined");if(!(s instanceof qe||s instanceof Jt))throw new Error("Slice step must be numeric or undefined");return t instanceof Ye?new Ye(jf(t.value,n.value,a.value,s.value)):new Re(jf(Array.from(t.value),n.value,a.value,s.value).join(""))}evaluateMemberExpression(t,e){const r=this.evaluate(t.object,e);let n;if(t.computed){if(t.property.type==="SliceExpression")return this.evaluateSliceExpression(r,t.property,e);n=this.evaluate(t.property,e)}else n=new Re(t.property.value);let a;if(r instanceof Xt){if(!(n instanceof Re))throw new Error(`Cannot access property with non-string: got ${n.type}`);a=r.value.get(n.value)??r.builtins.get(n.value)}else if(r instanceof Ye||r instanceof Re)if(n instanceof qe)a=r.value.at(n.value),r instanceof Re&&(a=new Re(r.value.at(n.value)));else if(n instanceof Re)a=r.builtins.get(n.value);else throw new Error(`Cannot access property with non-string/non-number: got ${n.type}`);else{if(!(n instanceof Re))throw new Error(`Cannot access property with non-string: got ${n.type}`);a=r.builtins.get(n.value)}return a instanceof fr?a:new Jt}evaluateSet(t,e){const r=this.evaluate(t.value,e);if(t.assignee.type==="Identifier"){const n=t.assignee.value;e.setVariable(n,r)}else if(t.assignee.type==="MemberExpression"){const n=t.assignee,a=this.evaluate(n.object,e);if(!(a instanceof Xt))throw new Error("Cannot assign to member of non-object");if(n.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");a.value.set(n.property.value,r)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(t.assignee)}`);return new Kn}evaluateIf(t,e){const r=this.evaluate(t.test,e);return this.evaluateBlock(r.__bool__().value?t.body:t.alternate,e)}evaluateFor(t,e){const r=new vo(e),n=this.evaluate(t.iterable,r);if(!(n instanceof Ye))throw new Error(`Expected iterable type in for loop: got ${n.type}`);let a="";for(let s=0;s<n.value.length;++s){const i=new Map([["index",new qe(s+1)],["index0",new qe(s)],["revindex",new qe(n.value.length-s)],["revindex0",new qe(n.value.length-s-1)],["first",new Je(s===0)],["last",new Je(s===n.value.length-1)],["length",new qe(n.value.length)],["previtem",s>0?n.value[s-1]:new Jt],["nextitem",s<n.value.length-1?n.value[s+1]:new Jt]]);r.setVariable("loop",new Xt(i));const o=n.value[s];if(t.loopvar.type==="Identifier")r.setVariable(t.loopvar.value,o);else if(t.loopvar.type==="TupleLiteral"){const d=t.loopvar;if(o.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${o.type}`);const c=o;if(d.value.length!==c.value.length)throw new Error(`Too ${d.value.length>c.value.length?"few":"many"} items to unpack`);for(let f=0;f<d.value.length;++f){if(d.value[f].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${d.value[f].type}`);r.setVariable(d.value[f].value,c.value[f])}}const l=this.evaluateBlock(t.body,r);a+=l.value}return new Re(a)}evaluate(t,e){if(t===void 0)return new Jt;switch(t.type){case"Program":return this.evalProgram(t,e);case"Set":return this.evaluateSet(t,e);case"If":return this.evaluateIf(t,e);case"For":return this.evaluateFor(t,e);case"NumericLiteral":return new qe(Number(t.value));case"StringLiteral":return new Re(t.value);case"BooleanLiteral":return new Je(t.value);case"ArrayLiteral":return new Ye(t.value.map(r=>this.evaluate(r,e)));case"TupleLiteral":return new Ty(t.value.map(r=>this.evaluate(r,e)));case"ObjectLiteral":{const r=new Map;for(const[n,a]of t.value){const s=this.evaluate(n,e);if(!(s instanceof Re))throw new Error(`Object keys must be strings: got ${s.type}`);r.set(s.value,this.evaluate(a,e))}return new Xt(r)}case"Identifier":return this.evaluateIdentifier(t,e);case"CallExpression":return this.evaluateCallExpression(t,e);case"MemberExpression":return this.evaluateMemberExpression(t,e);case"UnaryExpression":return this.evaluateUnaryExpression(t,e);case"BinaryExpression":return this.evaluateBinaryExpression(t,e);case"FilterExpression":return this.evaluateFilterExpression(t,e);case"TestExpression":return this.evaluateTestExpression(t,e);default:throw new SyntaxError(`Unknown node type: ${t.type}`)}}};function oi(t){switch(typeof t){case"number":return new qe(t);case"string":return new Re(t);case"boolean":return new Je(t);case"object":return t===null?new Kn:Array.isArray(t)?new Ye(t.map(oi)):new Xt(new Map(Object.entries(t).map(([e,r])=>[e,oi(r)])));case"function":return new mr((e,r)=>{const n=t(...e.map(a=>a.value))??null;return oi(n)});default:throw new Error(`Cannot convert to runtime value: ${t}`)}}var Ay=class{constructor(t){W(this,"parsed");const e=py(t,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=Ey(e)}render(t){const e=new vo;e.set("false",!1),e.set("true",!0),e.set("raise_exception",a=>{throw new Error(a)}),e.set("range",Cy);for(const[a,s]of Object.entries(t))e.set(a,s);return new Iy(e).run(this.parsed).value}};async function Yf(t,e){const r=await Promise.all([Mr(t,"tokenizer.json",!0,e),Mr(t,"tokenizer_config.json",!0,e)]);return e.legacy!==null&&(r[1].legacy=e.legacy),r}function Oy(t,e){const r=[];let n=0;for(const a of t.matchAll(e)){const s=a[0];n<a.index&&r.push(t.slice(n,a.index)),s.length>0&&r.push(s),n=a.index+s.length}return n<t.length&&r.push(t.slice(n)),r}function ui(t,e=!0){if(t.Regex!==void 0){let r=t.Regex.replace(/\\([#&~])/g,"$1");for(const[n,a]of Py)r=r.replaceAll(n,a);return new RegExp(r,"gu")}else if(t.String!==void 0){const r=tu(t.String);return new RegExp(e?r:`(${r})`,"gu")}else return console.warn("Unknown pattern type:",t),null}function $o(t){return new Map(Object.entries(t))}function Qf(t){const e=t.dims;switch(e.length){case 1:return t.tolist();case 2:if(e[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return t.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${e.length}.`)}}function xo(t){return t.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function Xf(t){return t.replace(/[\u0300-\u036f]/g,"")}function My(t){return Xf(t.toLowerCase())}function Jf(t){return t>=19968&&t<=40959||t>=13312&&t<=19903||t>=131072&&t<=173791||t>=173824&&t<=177983||t>=177984&&t<=178207||t>=178208&&t<=183983||t>=63744&&t<=64255||t>=194560&&t<=195103}function zy(t,e,r){const n=[];let a=0;for(;a<t.length;){if(n.push(t[a]),(r.get(t[a])??e)!==e){++a;continue}for(;a<t.length&&(r.get(t[a])??e)===e;)++a}return n}function Ry(t){return t.match(/\S+/g)||[]}const Yn="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",Py=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"]]);class By{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class Qn extends Tt{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...r){switch(e.type){case"WordPiece":return new Dy(e);case"Unigram":return new Ny(e,...r);case"BPE":return new Ly(e);default:if(e.vocab)return new Uy(e,...r);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){let r=this.encode(e);return this.fuse_unk&&(r=zy(r,this.unk_token_id,this.tokens_to_ids)),r}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map(r=>this.tokens_to_ids.get(r)??this.unk_token_id)}convert_ids_to_tokens(e){return e.map(r=>this.vocab[r]??this.unk_token)}}class Dy extends Qn{constructor(e){super(e),this.tokens_to_ids=$o(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[r,n]of this.tokens_to_ids)this.vocab[n]=r}encode(e){const r=[];for(const n of e){const a=[...n];if(a.length>this.max_input_chars_per_word){r.push(this.unk_token);continue}let s=!1,i=0;const o=[];for(;i<a.length;){let l=a.length,d=null;for(;i<l;){let c=a.slice(i,l).join("");if(i>0&&(c=this.config.continuing_subword_prefix+c),this.tokens_to_ids.has(c)){d=c;break}--l}if(d===null){s=!0;break}o.push(d),i=l}s?r.push(this.unk_token):r.push(...o)}return r}}class Ny extends Qn{constructor(e,r){super(e);const n=e.vocab.length;this.vocab=new Array(n),this.scores=new Array(n);for(let a=0;a<n;++a){const s=e.vocab[a];this.vocab[a]=s[0],this.scores[a]=s[1]}this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map((a,s)=>[a,s])),this.bosToken=" ",this.bosTokenId=this.tokens_to_ids.get(this.bosToken),this.eosToken=r.eos_token,this.eosTokenId=this.tokens_to_ids.get(this.eosToken),this.unkToken=this.vocab[this.unk_token_id],this.minScore=h0(this.scores)[0],this.unkScore=this.minScore-10,this.scores[this.unk_token_id]=this.unkScore,this.trie=new oy,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const r=e.sentence,n=r.length;let a=0;for(;a<n;){let i=!1;for(let o of this.trie.commonPrefixSearch(r.slice(a))){const l=this.tokens_to_ids.get(o),d=this.scores[l],c=o.length;e.insert(a,c,d,l),!i&&c===1&&(i=!0)}i||e.insert(a,1,this.unkScore,this.unk_token_id),a+=1}}tokenize(e){const r=new uy(e,this.bosTokenId,this.eosTokenId);return this.populateNodes(r),r.tokens()}encode(e){const r=[];for(const n of e){const a=this.tokenize(n);r.push(...a)}return r}}const Zf=(()=>{const t=[...Array.from({length:94},(a,s)=>s+33),...Array.from({length:12},(a,s)=>s+161),...Array.from({length:82},(a,s)=>s+174)],e=t.slice();let r=0;for(let a=0;a<256;++a)t.includes(a)||(t.push(a),e.push(256+r),r+=1);const n=e.map(a=>String.fromCharCode(a));return Object.fromEntries(t.map((a,s)=>[a,n[s]]))})(),Fy=s0(Zf);class Ly extends Qn{constructor(e){super(e),this.BPE_SPLIT_TOKEN=" ",this.tokens_to_ids=$o(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[r,n]of this.tokens_to_ids)this.vocab[n]=r;this.bpe_ranks=new Map(e.merges.map((r,n)=>[r,n])),this.merges=e.merges.map(r=>r.split(this.BPE_SPLIT_TOKEN)),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.cache=new Map}bpe(e){if(e.length===0)return[];const r=this.cache.get(e);if(r!==void 0)return r;const n=Array.from(e);this.end_of_word_suffix&&(n[n.length-1]+=this.end_of_word_suffix);let a=[];if(n.length>1){const s=new sy((l,d)=>l.score<d.score);let i={token:n[0],bias:0,prev:null,next:null},o=i;for(let l=1;l<n.length;++l){const d={bias:l/n.length,token:n[l],prev:o,next:null};o.next=d,this._add_node(s,o),o=d}for(;!s.isEmpty();){const l=s.pop();if(l.deleted||!l.next||l.next.deleted)continue;if(l.deleted=!0,l.next.deleted=!0,l.prev){const c={...l.prev};l.prev.deleted=!0,l.prev=c,c.prev?c.prev.next=c:i=c}const d={token:l.token+l.next.token,bias:l.bias,prev:l.prev,next:l.next.next};d.prev?(d.prev.next=d,this._add_node(s,d.prev)):i=d,d.next&&(d.next.prev=d,this._add_node(s,d))}for(let l=i;l!==null;l=l.next)a.push(l.token)}else a=n;if(this.continuing_subword_suffix)for(let s=0;s<a.length-1;++s)a[s]+=this.continuing_subword_suffix;return this.cache.set(e,a),a}_add_node(e,r){const n=this.bpe_ranks.get(r.token+this.BPE_SPLIT_TOKEN+r.next.token);n!==void 0&&(r.score=n+r.bias,e.push(r))}encode(e){const r=[];for(const n of e){const a=this.bpe(n);for(const s of a)this.tokens_to_ids.has(s)?r.push(s):this.byte_fallback?r.push(...Array.from(this.text_encoder.encode(s)).map(i=>`<0x${i.toString(16).toUpperCase().padStart(2,"0")}>`)):r.push(this.unk_token)}return r}}class Uy extends Qn{constructor(e,r){super(e),this.tokens_to_ids=$o(r.target_lang?e.vocab[r.target_lang]:e.vocab),this.bos_token=r.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=r.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=r.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=r.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[n,a]of this.tokens_to_ids)this.vocab[a]=n}encode(e){return e}}class It extends Tt{constructor(e){super(),this.config=e}static fromConfig(e){if(e===null)return null;switch(e.type){case"BertNormalizer":return new Xy(e);case"Precompiled":return new gw(e);case"Sequence":return new Qy(e);case"Replace":return new Wy(e);case"NFC":return new Vy(e);case"NFKC":return new Gy(e);case"NFKD":return new Hy(e);case"Strip":return new qy(e);case"StripAccents":return new jy(e);case"Lowercase":return new Ky(e);case"Prepend":return new Yy(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class Wy extends It{normalize(e){const r=ui(this.config.pattern);return r===null?e:e.replaceAll(r,this.config.content)}}class Vy extends It{normalize(e){return e=e.normalize("NFC"),e}}class Gy extends It{normalize(e){return e=e.normalize("NFKC"),e}}class Hy extends It{normalize(e){return e=e.normalize("NFKD"),e}}class qy extends It{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class jy extends It{normalize(e){return e=Xf(e),e}}class Ky extends It{normalize(e){return e=e.toLowerCase(),e}}class Yy extends It{normalize(e){return e=this.config.prepend+e,e}}class Qy extends It{constructor(e){super(e),this.normalizers=e.normalizers.map(r=>It.fromConfig(r))}normalize(e){return this.normalizers.reduce((r,n)=>n.normalize(r),e)}}class Xy extends It{_tokenize_chinese_chars(e){const r=[];for(let n=0;n<e.length;++n){const a=e[n],s=a.charCodeAt(0);Jf(s)?(r.push(" "),r.push(a),r.push(" ")):r.push(a)}return r.join("")}stripAccents(e){return e.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}_is_control(e){switch(e){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(e)}}_clean_text(e){const r=[];for(const n of e){const a=n.charCodeAt(0);a===0||a===65533||this._is_control(n)||(/^\s$/.test(n)?r.push(" "):r.push(n))}return r.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),this.config.strip_accents!==!1&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class Nt extends Tt{static fromConfig(e){if(e===null)return null;switch(e.type){case"BertPreTokenizer":return new Jy(e);case"Sequence":return new _w(e);case"Whitespace":return new yw(e);case"WhitespaceSplit":return new ww(e);case"Metaspace":return new rm(e);case"ByteLevel":return new Zy(e);case"Split":return new ew(e);case"Punctuation":return new tw(e);case"Digits":return new rw(e);case"Replace":return new bw(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,r){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,r){return(Array.isArray(e)?e.map(n=>this.pre_tokenize_text(n,r)):this.pre_tokenize_text(e,r)).flat()}_call(e,r){return this.pre_tokenize(e,r)}}class Jy extends Nt{constructor(e){super(),this.pattern=new RegExp(`[^\\s${Yn}]+|[${Yn}]`,"gu")}pre_tokenize_text(e,r){return e.trim().match(this.pattern)||[]}}class Zy extends Nt{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=Zf,this.text_encoder=new TextEncoder}pre_tokenize_text(e,r){return this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e),(this.use_regex?e.match(this.pattern)||[]:[e]).map(a=>Array.from(this.text_encoder.encode(a),s=>this.byte_encoder[s]).join(""))}}class ew extends Nt{constructor(e){super(),this.config=e,this.pattern=ui(this.config.pattern,this.config.invert)}pre_tokenize_text(e,r){return this.pattern===null?[]:this.config.invert?e.match(this.pattern)||[]:Oy(e,this.pattern)}}class tw extends Nt{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${Yn}]+|[${Yn}]+`,"gu")}pre_tokenize_text(e,r){return e.match(this.pattern)||[]}}class rw extends Nt{constructor(e){super(),this.config=e;const r=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(r,"gu")}pre_tokenize_text(e,r){return e.match(this.pattern)||[]}}class li extends Tt{constructor(e){super(),this.config=e}static fromConfig(e){if(e===null)return null;switch(e.type){case"TemplateProcessing":return new nw(e);case"ByteLevel":return new aw(e);case"RobertaProcessing":return new tm(e);case"BertProcessing":return new em(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...r){throw Error("post_process should be implemented in subclass.")}_call(e,...r){return this.post_process(e,...r)}}class em extends li{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,r=null,{add_special_tokens:n=!0}={}){n&&(e=it([this.cls],e,[this.sep]));let a=new Array(e.length).fill(0);if(r!==null){const s=n&&this instanceof tm?[this.sep]:[],i=n?[this.sep]:[];e=it(e,s,r,i),a=it(a,new Array(r.length+s.length+i.length).fill(1))}return{tokens:e,token_type_ids:a}}}class tm extends em{}class nw extends li{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,r=null,{add_special_tokens:n=!0}={}){const a=r===null?this.single:this.pair;let s=[],i=[];for(const o of a)"SpecialToken"in o?n&&(s.push(o.SpecialToken.id),i.push(o.SpecialToken.type_id)):"Sequence"in o&&(o.Sequence.id==="A"?(s=it(s,e),i=it(i,new Array(e.length).fill(o.Sequence.type_id))):o.Sequence.id==="B"&&(s=it(s,r),i=it(i,new Array(r.length).fill(o.Sequence.type_id))));return{tokens:s,token_type_ids:i}}}class aw extends li{post_process(e,r=null){return r&&(e=it(e,r)),{tokens:e}}}class At extends Tt{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(e===null)return null;switch(e.type){case"WordPiece":return new lw(e);case"Metaspace":return new mw(e);case"ByteLevel":return new dw(e);case"Replace":return new iw(e);case"ByteFallback":return new sw(e);case"Fuse":return new ow(e);case"Strip":return new uw(e);case"Sequence":return new pw(e);case"CTC":return new cw(e);case"BPEDecoder":return new hw(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class iw extends At{decode_chain(e){const r=ui(this.config.pattern);return r===null?e:e.map(n=>n.replaceAll(r,this.config.content))}}class sw extends At{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const r=[];let n=[];for(const a of e){let s=null;if(a.length===6&&a.startsWith("<0x")&&a.endsWith(">")){const i=parseInt(a.slice(3,5),16);isNaN(i)||(s=i)}if(s!==null)n.push(s);else{if(n.length>0){const i=this.text_decoder.decode(Uint8Array.from(n));r.push(i),n=[]}r.push(a)}}if(n.length>0){const a=this.text_decoder.decode(Uint8Array.from(n));r.push(a),n=[]}return r}}class ow extends At{decode_chain(e){return[e.join("")]}}class uw extends At{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map(r=>{let n=0;for(let s=0;s<this.start&&r[s]===this.content;++s){n=s+1;continue}let a=r.length;for(let s=0;s<this.stop;++s){const i=r.length-s-1;if(r[i]===this.content){a=i;continue}else break}return r.slice(n,a)})}}class lw extends At{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map((r,n)=>(n!==0&&(r.startsWith(this.config.prefix)?r=r.replace(this.config.prefix,""):r=" "+r),this.cleanup&&(r=xo(r)),r))}}class dw extends At{constructor(e){super(e),this.byte_decoder=Fy,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const r=e.join(""),n=new Uint8Array([...r].map(s=>this.byte_decoder[s]));return this.text_decoder.decode(n)}decode_chain(e){const r=[];let n=[];for(const a of e)this.added_tokens.find(s=>s.content===a)!==void 0?(n.length>0&&(r.push(this.convert_tokens_to_string(n)),n=[]),r.push(a)):n.push(a);return n.length>0&&r.push(this.convert_tokens_to_string(n)),r}}class cw extends At{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(e.length===0)return"";const r=[e[0]];for(let s=1;s<e.length;++s)e[s]!==r.at(-1)&&r.push(e[s]);let a=r.filter(s=>s!==this.pad_token).join("");return this.cleanup&&(a=xo(a).replaceAll(this.word_delimiter_token," ").trim()),a}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class pw extends At{constructor(e){super(e),this.decoders=e.decoders.map(r=>At.fromConfig(r))}decode_chain(e){return this.decoders.reduce((r,n)=>n.decode_chain(r),e)}}class hw extends At{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map((r,n)=>r.replaceAll(this.suffix,n===e.length-1?"":" "))}}class fw extends At{decode_chain(e){let r="";for(let n=1;n<e.length;n+=2)r+=e[n];return[r]}}class rm extends Nt{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:r=void 0}={}){let n=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!n.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&r===0)&&(n=this.strRep+n),[n]}}class mw extends At{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const r=[];for(let n=0;n<e.length;++n){let a=e[n].replaceAll(this.replacement," ");this.addPrefixSpace&&n==0&&a.startsWith(" ")&&(a=a.substring(1)),r.push(a)}return r}}class gw extends It{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){return e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),e=e.replace(/[\u0009\u000A\u000C\u000D\u1680\u200B\u200C\u200E\u200F\u2028\u2029\u2581\uFEFF\uFFFD]/gm," "),e.includes("～")?e=e.split("～").map(n=>n.normalize("NFKC")).join("～"):e=e.normalize("NFKC"),e}}class _w extends Nt{constructor(e){super(),this.tokenizers=e.pretokenizers.map(r=>Nt.fromConfig(r))}pre_tokenize_text(e,r){return this.tokenizers.reduce((n,a)=>a.pre_tokenize(n,r),[e])}}class yw extends Nt{constructor(e){super()}pre_tokenize_text(e,r){return e.match(/\w+|[^\w\s]+/g)||[]}}class ww extends Nt{constructor(e){super()}pre_tokenize_text(e,r){return Ry(e)}}class bw extends Nt{constructor(e){super(),this.config=e,this.pattern=ui(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,r){return this.pattern===null?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const vw=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function $w(t,e,r,n){for(const a of Object.keys(t)){const s=e-t[a].length,i=r(a),o=new Array(s).fill(i);t[a]=n==="right"?it(t[a],o):it(o,t[a])}}function xw(t,e){for(const r of Object.keys(t))t[r].length=e}class Ee extends Tt{constructor(r,n){super();W(this,"return_token_type_ids",!1);W(this,"_default_chat_template",`{% for message in messages %}{{'<|im_start|>' + message['role'] + '
' + message['content'] + '<|im_end|>' + '
'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant
' }}{% endif %}`);W(this,"padding_side","right");this._tokenizer_config=n,this.normalizer=It.fromConfig(r.normalizer),this.pre_tokenizer=Nt.fromConfig(r.pre_tokenizer),this.model=Qn.fromConfig(r.model,n),this.post_processor=li.fromConfig(r.post_processor),this.decoder=At.fromConfig(r.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const a of r.added_tokens){const s=new By(a);this.added_tokens.push(s),this.model.tokens_to_ids.set(s.content,s.id),this.model.vocab[s.id]=s.content,s.special&&(this.special_tokens.push(s.content),this.all_special_ids.push(s.id))}if(this.additional_special_tokens=n.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.map(a=>`${a.lstrip?"\\s*":""}(${tu(a.content)})${a.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=n.model_max_length,this.remove_space=n.remove_space,this.clean_up_tokenization_spaces=n.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=n.do_lowercase_and_remove_accent??!1,n.padding_side&&(this.padding_side=n.padding_side),this.legacy=!1,this.chat_template=n.chat_template??null,Array.isArray(this.chat_template)){const a=Object.create(null);for(const{name:s,template:i}of this.chat_template){if(typeof s!="string"||typeof i!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');a[s]=i}this.chat_template=a}this._compiled_template_cache=new Map}getToken(...r){for(const n of r){const a=this._tokenizer_config[n];if(a)if(typeof a=="object"){if(a.__type==="AddedToken")return a.content;throw Error(`Unknown token: ${a}`)}else return a}return null}static async from_pretrained(r,{progress_callback:n=null,config:a=null,cache_dir:s=null,local_files_only:i=!1,revision:o="main",legacy:l=null}={}){const d=await Yf(r,{progress_callback:n,config:a,cache_dir:s,local_files_only:i,revision:o,legacy:l});return new this(...d)}_call(r,{text_pair:n=null,add_special_tokens:a=!0,padding:s=!1,truncation:i=null,max_length:o=null,return_tensor:l=!0}={}){const d=Array.isArray(r);let c;if(d){if(r.length===0)throw Error("text array must be non-empty");if(n!==null){if(Array.isArray(n)){if(r.length!==n.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");c=r.map((g,y)=>this._encode_plus(g,{text_pair:n[y],add_special_tokens:a}))}else c=r.map(g=>this._encode_plus(g,{add_special_tokens:a}))}else{if(r==null)throw Error("text may not be null or undefined");if(Array.isArray(n))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");c=[this._encode_plus(r,{text_pair:n,add_special_tokens:a})]}if(o===null?s==="max_length"?o=this.model_max_length:o=Ji(c.map(g=>g.input_ids.length))[0]:i||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),o=Math.min(o,this.model_max_length),s||i)for(let g=0;g<c.length;++g)c[g].input_ids.length!==o&&(c[g].input_ids.length>o?i&&xw(c[g],o):s&&$w(c[g],o,y=>y==="input_ids"?this.pad_token_id:0,this.padding_side));const f={};if(l){if(!(s&&i)&&c.some(y=>{var p;for(const v of Object.keys(y))if(y[v].length!==((p=c[0][v])==null?void 0:p.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const g=[c.length,c[0].input_ids.length];for(const y of Object.keys(c[0]))f[y]=new ke("int64",BigInt64Array.from(c.flatMap(p=>p[y]).map(BigInt)),g)}else{for(const g of Object.keys(c[0]))f[g]=c.map(y=>y[g]);if(!d)for(const g of Object.keys(f))f[g]=f[g][0]}return f}_encode_text(r){return r===null?null:(this.added_tokens_regex?r.split(this.added_tokens_regex).filter(s=>s):[r]).map((s,i)=>{if(this.added_tokens.find(l=>l.content===s)!==void 0)return s;{if(this.remove_space===!0&&(s=s.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(s=My(s)),this.normalizer!==null&&(s=this.normalizer(s)),s.length===0)return[];const l=this.pre_tokenizer!==null?this.pre_tokenizer(s,{section_index:i}):[s];return this.model(l)}}).flat()}_encode_plus(r,{text_pair:n=null,add_special_tokens:a=!0}={}){const{tokens:s,token_type_ids:i}=this._tokenize_helper(r,{pair:n,add_special_tokens:a}),o=this.model.convert_tokens_to_ids(s),l={input_ids:o,attention_mask:new Array(o.length).fill(1)};return this.return_token_type_ids&&i&&(l.token_type_ids=i),l}_tokenize_helper(r,{pair:n=null,add_special_tokens:a=!1}={}){const s=this._encode_text(r),i=this._encode_text(n);return this.post_processor?this.post_processor(s,i,{add_special_tokens:a}):{tokens:it(s??[],i??[])}}tokenize(r,{pair:n=null,add_special_tokens:a=!1}={}){return this._tokenize_helper(r,{pair:n,add_special_tokens:a}).tokens}encode(r,{text_pair:n=null,add_special_tokens:a=!0}={}){return this._encode_plus(r,{text_pair:n,add_special_tokens:a}).input_ids}batch_decode(r,n={}){return r instanceof ke&&(r=r.tolist()),r.map(a=>this.decode(a,n))}decode(r,n={}){if(r instanceof ke&&(r=Qf(r)),!Array.isArray(r)||r.length===0||!o0(r[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(r,n)}decode_single(r,{skip_special_tokens:n=!1,clean_up_tokenization_spaces:a=null}){let s=this.model.convert_ids_to_tokens(r);n&&(s=s.filter(o=>!this.special_tokens.includes(o)));let i=this.decoder?this.decoder(s):s.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(i=i.replaceAll(this.decoder.end_of_word_suffix," "),n&&(i=i.trim())),(a??this.clean_up_tokenization_spaces)&&(i=xo(i)),i}get default_chat_template(){return this._warned_about_chat_template||(console.warn("No chat template is defined for this tokenizer - using a default chat template that implements the ChatML format. If the default is not appropriate for your model, please set `tokenizer.chat_template` to an appropriate template. See https://huggingface.co/docs/transformers/main/chat_templating for more information."),this._warned_about_chat_template=!0),this._default_chat_template}apply_chat_template(r,{chat_template:n=null,add_generation_prompt:a=!1,tokenize:s=!0,padding:i=!1,truncation:o=!1,max_length:l=null,return_tensor:d=!0,return_dict:c=!1,tokenizer_kwargs:f={},...g}={}){if(this.chat_template&&typeof this.chat_template=="object"||this.chat_template===null&&this.default_chat_template&&typeof this.default_chat_template=="object"){const S=this.chat_template??this.default_chat_template;if(n!==null&&Object.hasOwn(S,n))n=S[n];else if(n===null&&"default"in S)n=S.default;else if(n===null)throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(S).sort()}.`)}else n??(n=this.chat_template??this.default_chat_template);if(typeof n!="string")throw Error(`chat_template must be a string, but got ${typeof n}`);let y=this._compiled_template_cache.get(n);y===void 0&&(y=new Ay(n),this._compiled_template_cache.set(n,y));const p=Object.create(null);for(const S of vw){const E=this.getToken(S);E&&(p[S]=E)}const v=y.render({messages:r,add_generation_prompt:a,...p,...g});if(s){const S=this._call(v,{add_special_tokens:!1,padding:i,truncation:o,max_length:l,return_tensor:d,...f});return c?S:S.input_ids}return v}}class Sw extends Ee{constructor(){super(...arguments);W(this,"return_token_type_ids",!0)}}class kw extends Ee{constructor(){super(...arguments);W(this,"return_token_type_ids",!0)}}class Ew extends Ee{constructor(){super(...arguments);W(this,"return_token_type_ids",!0)}}class Cw extends Ee{constructor(){super(...arguments);W(this,"return_token_type_ids",!0)}}class Tw extends Ee{constructor(){super(...arguments);W(this,"return_token_type_ids",!0)}}class Iw extends Ee{constructor(){super(...arguments);W(this,"return_token_type_ids",!0)}}class Aw extends Ee{constructor(){super(...arguments);W(this,"return_token_type_ids",!0)}}class Ow extends Ee{constructor(){super(...arguments);W(this,"return_token_type_ids",!0)}}class Mw extends Ee{constructor(){super(...arguments);W(this,"return_token_type_ids",!0)}}class zw extends Ee{}class Rw extends Ee{}class Pw extends Ee{constructor(r,n){super(r,n);W(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Bw extends Ee{constructor(){super(...arguments);W(this,"return_token_type_ids",!0)}}class Dw extends Ee{}class nm extends Ee{constructor(){super(...arguments);W(this,"_default_chat_template",'{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}')}}class Nw extends Ee{}class am extends Ee{constructor(e,r){super(e,r),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(n=>this.languageRegex.test(n)),this.lang_to_token=n=>n}_build_translation_inputs(e,r,n){return So(this,e,r,n)}}class Fw extends am{}class Lw extends Ee{}class Uw extends nm{constructor(e,r){var s,i;const n=".,!?…。，、।۔،",a=(i=(s=e.pre_tokenizer)==null?void 0:s.pretokenizers[0])==null?void 0:i.pattern;a&&a.Regex===` ?[^(\\s|[${n}])]+`&&(a.Regex=` ?[^\\s${n}]+`),super(e,r)}}const di="▁";class im extends Ee{constructor(r,n){super(r,n);W(this,"_default_chat_template",`{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% elif USE_DEFAULT_PROMPT == true and not '<<SYS>>' in messages[0]['content'] %}{% set loop_messages = messages %}{% set system_message = 'DEFAULT_SYSTEM_MESSAGE' %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>
' + system_message + '
<</SYS>>

' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' %}{{ bos_token + '[INST] ' + content.strip() + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>
' + content.strip() + '
<</SYS>>

' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content.strip() + ' ' + eos_token }}{% endif %}{% endfor %}`);W(this,"DEFAULT_SYSTEM_PROMPT",`You are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.

If a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.`);W(this,"padding_side","left");this.use_default_system_prompt=n.use_default_system_prompt??!1,this.legacy=n.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new rm({replacement:di,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(r){if(r===null)return null;if(this.legacy||r.length===0)return super._encode_text(r);let n=super._encode_text(di+r.replaceAll(di," "));return n.length>1&&n[0]===di&&this.special_tokens.includes(n[1])&&(n=n.slice(1)),n}get default_chat_template(){return super.default_chat_template.replaceAll("USE_DEFAULT_PROMPT",this.use_default_system_prompt?"true":"false").replaceAll("DEFAULT_SYSTEM_MESSAGE",this.DEFAULT_SYSTEM_PROMPT.replaceAll(`
`,"\\n").replaceAll("'","\\'"))}}class Ww extends im{}class Vw extends Ee{}class Gw extends Ee{}class Hw extends Ee{}class qw extends Ee{}class jw extends Ee{}class Kw extends Ee{}class Yw extends Ee{constructor(){super(...arguments);W(this,"_default_chat_template",`{% if messages[0]['role'] == 'system' %}{{ raise_exception('System role not supported') }}{% endif %}{% for message in messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if (message['role'] == 'assistant') %}{% set role = 'model' %}{% else %}{% set role = message['role'] %}{% endif %}{{ '<start_of_turn>' + role + '
' + message['content'] | trim + '<end_of_turn>
' }}{% endfor %}{% if add_generation_prompt %}{{'<start_of_turn>model
'}}{% endif %}`)}}class Qw extends Ee{}function So(t,e,r,n){if(!("language_codes"in t)||!Array.isArray(t.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in t)||!(t.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in t)||typeof t.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const a=n.src_lang,s=n.tgt_lang;if(!t.language_codes.includes(s))throw new Error(`Target language code "${s}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);if(a!==void 0){if(!t.language_codes.includes(a))throw new Error(`Source language code "${a}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);for(const i of t.post_processor.config.single)if("SpecialToken"in i&&t.languageRegex.test(i.SpecialToken.id)){i.SpecialToken.id=t.lang_to_token(a);break}}return n.forced_bos_token_id=t.model.convert_tokens_to_ids([t.lang_to_token(s)])[0],t._call(e,r)}class Xw extends Ee{constructor(e,r){super(e,r),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(n=>this.languageRegex.test(n)),this.lang_to_token=n=>n}_build_translation_inputs(e,r,n){return So(this,e,r,n)}}class Jw extends Ee{constructor(e,r){super(e,r),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(n=>this.languageRegex.test(n)).map(n=>n.slice(2,-2)),this.lang_to_token=n=>`__${n}__`}_build_translation_inputs(e,r,n){return So(this,e,r,n)}}const sm=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],ci=new Map(sm),Zw=new Map([...sm.map(([t,e])=>[e,t]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);class eb extends Ee{constructor(){super(...arguments);W(this,"_default_chat_template",'{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}')}_decode_asr(r,{return_timestamps:n=!1,return_language:a=!1,time_precision:s=null,force_full_sequences:i=!0}={}){if(s===null)throw Error("Must specify time_precision");let o=null;const l=n==="word";function d(){return{language:o,timestamp:[null,null],text:""}}const c=[];let f=d(),g=0;const y=this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1;let p=[],v=[],S=!1,E=null;const k=new Set(this.all_special_ids);for(const T of r){const F=T.tokens,B=l?T.token_timestamps:null;let G=null,H=y;if("stride"in T){const[oe,ne,de]=T.stride;if(g-=ne,E=oe-de,ne&&(H=ne/s+y),de)for(let D=F.length-1;D>=0;--D){const z=F[D];if(z>=y){if(G!==null&&(z-y)*s<E)break;G=z}}}let Z=[],pe=[];for(let oe=0;oe<F.length;++oe){const ne=F[oe];if(k.has(ne)){const de=this.decode([ne]),D=ci.get(de.slice(2,-2));if(D!==void 0){if(o!==null&&D!==o&&!n){p.push(Z);const z=this.findLongestCommonSequence(p)[0],q=this.decode(z);f.text=q,c.push(f),p=[],Z=[],f=d()}o=f.language=D}}else if(ne>=y){const de=(ne-y)*s+g,D=Ra(de,2);if(G!==null&&ne>=G)S=!0;else if(S||p.length>0&&ne<H)S=!1;else if(f.timestamp[0]===null)f.timestamp[0]=D;else if(D!==f.timestamp[0]){f.timestamp[1]=D,p.push(Z),l&&v.push(pe);const[z,q]=this.findLongestCommonSequence(p,v),te=this.decode(z);f.text=te,l&&(f.words=this.collateWordTimestamps(z,q,o)),c.push(f),p=[],Z=[],v=[],pe=[],f=d()}}else if(Z.push(ne),l){let de=Ra(B[oe]+g,2),D;oe+1<B.length?D=Ra(B[oe+1]+g,2):D=null,pe.push([de,D])}}if("stride"in T){const[oe,ne,de]=T.stride;g+=oe-de}Z.length>0?(p.push(Z),l&&v.push(pe)):p.every(oe=>oe.length===0)&&(f=d(),p=[],Z=[],v=[],pe=[])}if(p.length>0){if(i&&n)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[T,F]=this.findLongestCommonSequence(p,v),B=this.decode(T);f.text=B,l&&(f.words=this.collateWordTimestamps(T,F,o)),c.push(f)}let O=Object.create(null);const I=c.map(T=>T.text).join("");if(n||a){for(let T=0;T<c.length;++T){const F=c[T];n||delete F.timestamp,a||delete F.language}if(l){const T=[];for(const F of c)for(const B of F.words)T.push(B);O={chunks:T}}else O={chunks:c}}return[I,O]}findLongestCommonSequence(r,n=null){let a=r[0],s=a.length,i=[];const o=Array.isArray(n)&&n.length>0;let l=o?[]:null,d=o?n[0]:null;for(let c=1;c<r.length;++c){const f=r[c];let g=0,y=[s,s,0,0];const p=f.length;for(let T=1;T<s+p;++T){const F=T/1e4,B=Math.max(0,s-T),G=Math.min(s,s+p-T),H=a.slice(B,G),Z=Math.max(0,T-s),pe=Math.min(p,T),oe=f.slice(Z,pe);if(H.length!==oe.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");const ne=H.filter((D,z)=>D===oe[z]).length,de=ne/T+F;ne>1&&de>g&&(g=de,y=[B,G,Z,pe])}const[v,S,E,k]=y,O=Math.floor((S+v)/2),I=Math.floor((k+E)/2);i.push(...a.slice(0,O)),a=f.slice(I),s=a.length,o&&(l.push(...d.slice(0,O)),d=n[c].slice(I))}return i.push(...a),o?(l.push(...d),[i,l]):[i,[]]}collateWordTimestamps(r,n,a){const[s,i,o]=this.combineTokensIntoWords(r,a),l=[];for(let d=0;d<s.length;++d){const c=o[d];l.push({text:s[d],timestamp:[n[c.at(0)][0],n[c.at(-1)][1]]})}return l}combineTokensIntoWords(r,n,a=`"'“¡¿([{-`,s=`"'.。,，!！?？:：”)]}、`){n=n??"english";let i,o,l;return["chinese","japanese","thai","lao","myanmar"].includes(n)?[i,o,l]=this.splitTokensOnUnicode(r):[i,o,l]=this.splitTokensOnSpaces(r),this.mergePunctuations(i,o,l,a,s)}decode(r,n){let a;return n&&n.decode_with_timestamps?(r instanceof ke&&(r=Qf(r)),a=this.decodeWithTimestamps(r,n)):a=super.decode(r,n),a}decodeWithTimestamps(r,n){const a=(n==null?void 0:n.time_precision)??.02,s=Array.from(this.all_special_ids).at(-1)+1;let i=[[]];for(const o of r)if(o>=s){const l=Ra((Number(o)-s)*a,2);i.push(`<|${l}|>`),i.push([])}else i[i.length-1].push(o);return i=i.map(o=>typeof o=="string"?o:super.decode(o,n)),i.join("")}splitTokensOnUnicode(r){const n=this.decode(r,{decode_with_timestamps:!0}),a="�",s=[],i=[],o=[];let l=[],d=[],c=0;for(let f=0;f<r.length;++f){const g=r[f];l.push(g),d.push(f);const y=this.decode(l,{decode_with_timestamps:!0});(!y.includes(a)||n[c+y.indexOf(a)]===a)&&(s.push(y),i.push(l),o.push(d),l=[],d=[],c+=y.length)}return[s,i,o]}splitTokensOnSpaces(r){const[n,a,s]=this.splitTokensOnUnicode(r),i=[],o=[],l=[],d=new RegExp(`^[${Yn}]$`,"gu");for(let c=0;c<n.length;++c){const f=n[c],g=a[c],y=s[c],p=g[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),v=f.startsWith(" "),S=f.trim(),E=d.test(S);if(p||v||E||i.length===0)i.push(f),o.push(g),l.push(y);else{const k=i.length-1;i[k]+=f,o[k].push(...g),l[k].push(...y)}}return[i,o,l]}mergePunctuations(r,n,a,s,i){const o=structuredClone(r),l=structuredClone(n),d=structuredClone(a);let c=o.length-2,f=o.length-1;for(;c>=0;)o[c].startsWith(" ")&&s.includes(o[c].trim())?(o[f]=o[c]+o[f],l[f]=it(l[c],l[f]),d[f]=it(d[c],d[f]),o[c]="",l[c]=[],d[c]=[]):f=c,--c;for(c=0,f=1;f<o.length;)!o[c].endsWith(" ")&&i.includes(o[f])?(o[c]+=o[f],l[c]=it(l[c],l[f]),d[c]=it(d[c],d[f]),o[f]="",l[f]=[],d[f]=[]):c=f,++f;return[o.filter(g=>g),l.filter(g=>g.length>0),d.filter(g=>g.length>0)]}get_decoder_prompt_ids({language:r=null,task:n=null,no_timestamps:a=!0}={}){const s=[];if(r){r=r.toLowerCase();let i=Zw.get(r);if(i===void 0)if(ci.has(r))i=r;else{const d=r.length===2?ci.keys():ci.values();throw new Error(`Language "${r}" is not supported. Must be one of: ${JSON.stringify(d)}`)}const o=this.model.tokens_to_ids.get(`<|${i}|>`);if(o===void 0)throw new Error(`Unable to find language "${i}" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.`);s.push(o)}else s.push(null);if(n){if(n=n.toLowerCase(),n!=="transcribe"&&n!=="translate")throw new Error(`Task "${n}" is not supported. Must be one of: ["transcribe", "translate"]`);const i=this.model.tokens_to_ids.get(`<|${n}|>`);if(i===void 0)throw new Error(`Unable to find task "${n}" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.`);s.push(i)}else s.push(null);if(a){const i=this.model.tokens_to_ids.get("<|notimestamps|>");if(i===void 0)throw new Error('Unable to find "<|notimestamps|>" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.');s.push(i)}return s.map((i,o)=>[o+1,i]).filter(i=>i[1]!==null)}}class tb extends Ee{}class rb extends Ee{}class nb extends Ee{}class ab extends Ee{constructor(e,r){super(e,r),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(n=>this.languageRegex.test(n)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(e===null)return null;const[r,...n]=e.trim().split(this.languageRegex);if(n.length===0)return super._encode_text(r);if(n.length===2){const[a,s]=n;return this.supported_language_codes.includes(a)||console.warn(`Unsupported language code "${a}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),it([a],super._encode_text(s))}}}class ib extends Ee{}class om extends Ee{constructor(){super(...arguments);W(this,"_default_chat_template","{% for message in messages %}{% if message['role'] == 'user' %}{{ ' ' }}{% endif %}{{ message['content'] }}{% if not loop.last %}{{ '  ' }}{% endif %}{% endfor %}{{ eos_token }}")}}class sb extends om{}class ob extends Ee{}class ub extends Ee{}class lb extends Ee{constructor(e,r){super(e,r),this.decoder=new fw({})}}class db extends Ee{}class um{static async from_pretrained(e,{progress_callback:r=null,config:n=null,cache_dir:a=null,local_files_only:s=!1,revision:i="main",legacy:o=null}={}){var g;const[l,d]=await Yf(e,{progress_callback:r,config:n,cache_dir:a,local_files_only:s,revision:i,legacy:o}),c=((g=d.tokenizer_class)==null?void 0:g.replace(/Fast$/,""))??"PreTrainedTokenizer";let f=this.TOKENIZER_CLASS_MAPPING[c];return f||(console.warn(`Unknown tokenizer class "${c}", attempting to construct from base class.`),f=Ee),new f(l,d)}}W(um,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:Dw,DistilBertTokenizer:zw,CamembertTokenizer:Rw,DebertaTokenizer:Tw,DebertaV2Tokenizer:Iw,BertTokenizer:Sw,HerbertTokenizer:Aw,ConvBertTokenizer:Ow,RoFormerTokenizer:Mw,XLMTokenizer:Pw,ElectraTokenizer:Bw,MobileBertTokenizer:Ew,SqueezeBertTokenizer:Cw,AlbertTokenizer:kw,GPT2Tokenizer:nm,BartTokenizer:Nw,MBartTokenizer:am,MBart50Tokenizer:Fw,RobertaTokenizer:Lw,WhisperTokenizer:eb,CodeGenTokenizer:tb,CLIPTokenizer:rb,SiglipTokenizer:nb,MarianTokenizer:ab,BloomTokenizer:Uw,NllbTokenizer:Xw,M2M100Tokenizer:Jw,LlamaTokenizer:im,CodeLlamaTokenizer:Ww,XLMRobertaTokenizer:Vw,MPNetTokenizer:Gw,FalconTokenizer:Hw,GPTNeoXTokenizer:qw,EsmTokenizer:jw,Wav2Vec2CTCTokenizer:ib,BlenderbotTokenizer:om,BlenderbotSmallTokenizer:sb,SpeechT5Tokenizer:ob,NougatTokenizer:ub,VitsTokenizer:lb,Qwen2Tokenizer:Kw,GemmaTokenizer:Yw,Grok1Tokenizer:Qw,CohereTokenizer:db,PreTrainedTokenizer:Ee});async function cb(t,e){return await Mr(t,"config.json",!0,e)}function pi(t){const e={};let r={};switch(t.model_type){case"llava":case"paligemma":r=pi(t.text_config);break;case"moondream1":r=pi(t.phi_config);break;case"musicgen":r=pi(t.decoder);break;case"gpt2":case"gptj":case"codegen":case"gpt_bigcode":e.num_heads="n_head",e.num_layers="n_layer",e.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":e.num_heads="num_attention_heads",e.num_layers="num_hidden_layers",e.hidden_size="hidden_size";break;case"llama":case"mistral":case"starcoder2":case"qwen2":e.num_heads="num_key_value_heads",e.num_layers="num_hidden_layers",e.hidden_size="hidden_size",e.num_attention_heads="num_attention_heads";break;case"gemma":e.num_heads="num_key_value_heads",e.num_layers="num_hidden_layers",e.dim_kv="head_dim";break;case"openelm":e.num_heads="num_kv_heads",e.num_layers="num_transformer_layers",e.dim_kv="head_dim";break;case"gpt_neo":e.num_heads="num_heads",e.num_layers="num_layers",e.hidden_size="hidden_size";break;case"bloom":e.num_heads="n_head",e.num_layers="n_layer",e.hidden_size="hidden_size";break;case"mpt":e.num_heads="n_heads",e.num_layers="n_layers",e.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":e.num_decoder_layers="num_decoder_layers",e.num_decoder_heads="num_heads",e.decoder_dim_kv="d_kv",e.num_encoder_layers="num_layers",e.num_encoder_heads="num_heads",e.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":e.num_decoder_layers="decoder_layers",e.num_decoder_heads="decoder_attention_heads",e.decoder_hidden_size="d_model",e.num_encoder_layers="encoder_layers",e.num_encoder_heads="encoder_attention_heads",e.encoder_hidden_size="d_model";break;case"speecht5":e.num_decoder_layers="decoder_layers",e.num_decoder_heads="decoder_attention_heads",e.decoder_hidden_size="hidden_size",e.num_encoder_layers="encoder_layers",e.num_encoder_heads="encoder_attention_heads",e.encoder_hidden_size="hidden_size";break;case"trocr":e.num_encoder_layers=e.num_decoder_layers="decoder_layers",e.num_encoder_heads=e.num_decoder_heads="decoder_attention_heads",e.encoder_hidden_size=e.decoder_hidden_size="d_model";break;case"musicgen_decoder":e.num_encoder_layers=e.num_decoder_layers="num_hidden_layers",e.num_encoder_heads=e.num_decoder_heads="num_attention_heads",e.encoder_hidden_size=e.decoder_hidden_size="hidden_size";break}const n={...r,...Or(t,["model_type","multi_query","is_encoder_decoder"])};for(const a in e)n[a]=t[e[a]];return n}function lm(t,{prefix:e="past_key_values",encoder_add_pkv:r=!0}={}){const n={},a=t.normalized_config,s=1;if(a.is_encoder_decoder&&r){const i=a.encoder_dim_kv??a.encoder_hidden_size/a.num_encoder_heads,o=a.decoder_dim_kv??a.decoder_hidden_size/a.num_decoder_heads,l=[s,a.num_encoder_heads,0,i],d=[s,a.num_decoder_heads,0,o];for(let c=0;c<a.num_decoder_layers;++c)n[`${e}.${c}.encoder.key`]=l,n[`${e}.${c}.encoder.value`]=l,n[`${e}.${c}.decoder.key`]=d,n[`${e}.${c}.decoder.value`]=d}else{const i=a.num_heads,o=a.num_layers,l=a.dim_kv??a.hidden_size/(a.num_attention_heads??i);if(a.model_type==="falcon"){const d=[s*i,0,l];for(let c=0;c<o;++c)n[`${e}.${c}.key`]=d,n[`${e}.${c}.value`]=d}else if(a.multi_query){const d=[s*i,0,2*l];for(let c=0;c<o;++c)n[`${e}.${c}.key_value`]=d}else if(a.model_type==="bloom"){const d=[s*i,l,0],c=[s*i,0,l];for(let f=0;f<o;++f)n[`${e}.${f}.key`]=d,n[`${e}.${f}.value`]=c}else if(a.model_type==="openelm")for(let d=0;d<o;++d){const c=[s,i[d],0,l];n[`${e}.${d}.key`]=c,n[`${e}.${d}.value`]=c}else{const d=[s,i,0,l];for(let c=0;c<o;++c)n[`${e}.${c}.key`]=d,n[`${e}.${c}.value`]=d}}return n}class hi{constructor(e){W(this,"max_position_embeddings");this.model_type=null,this.is_encoder_decoder=!1,Object.assign(this,e),this.normalized_config=pi(this)}static async from_pretrained(e,{progress_callback:r=null,config:n=null,cache_dir:a=null,local_files_only:s=!1,revision:i="main"}={}){n&&!(n instanceof hi)&&(n=new hi(n));const o=n??await cb(e,{progress_callback:r,config:n,cache_dir:a,local_files_only:s,revision:i});return new this(o)}}class dm{static async from_pretrained(...e){return hi.from_pretrained(...e)}}const fi=Object.freeze({cpu:"cpu",gpu:"gpu",wasm:"wasm",webgpu:"webgpu"}),pb=function(){let t;return async function(){if(t===void 0)if(Ar.IS_NODE_ENV)t=!0;else if(!Ar.IS_WEBGPU_AVAILABLE)t=!1;else try{t=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{t=!1}return t}}(),vt=Object.freeze({fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),hb=Object.freeze({[fi.cpu]:vt.q8,[fi.gpu]:vt.fp32,[fi.wasm]:vt.q8,[fi.webgpu]:vt.fp32}),cm=Object.freeze({[vt.fp32]:"",[vt.fp16]:"_fp16",[vt.int8]:"_int8",[vt.uint8]:"_uint8",[vt.q8]:"_quantized",[vt.q4]:"_q4",[vt.q4f16]:"_q4f16",[vt.bnb4]:"_bnb4"});class gr extends Tt{_call(e,r){throw Error("`_call` should be implemented in a subclass")}}class ko extends Tt{_call(e,r){throw Error("`_call` should be implemented in a subclass")}}class pm extends Tt{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,r){let n=r;for(const a of this.processors)n=a(e,n);return n}[Symbol.iterator](){return this.processors.values()}}class fb extends gr{constructor(e){super(),this.bos_token_id=e}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length===1){const a=r[n];a.data.fill(-1/0),a.data[this.bos_token_id]=0}return r}}class mb extends gr{constructor(e,r){super(),this.max_length=e,this.forced_eos_token_id=r}_call(e,r){}}class gb extends gr{constructor(e,r){super(),this.begin_suppress_tokens=e,this.begin_index=r}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length===this.begin_index){const a=r[n];for(const s of this.begin_suppress_tokens)a.data[s]=-1/0}return r}}class _b extends gr{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const r=e.length,n=[];for(let s=0;s<r+1-this.no_repeat_ngram_size;++s){const i=[];for(let o=0;o<this.no_repeat_ngram_size;++o)i.push(e[s+o]);n.push(i)}const a=new Map;for(const s of n){const i=s.slice(0,s.length-1),o=JSON.stringify(i),l=a.get(o)??[];l.push(s[s.length-1]),a.set(o,l)}return a}getGeneratedNgrams(e,r){const n=r.slice(r.length+1-this.no_repeat_ngram_size,r.length);return e.get(JSON.stringify(n))??[]}calcBannedNgramTokens(e){const r=[];if(e.length+1<this.no_repeat_ngram_size)return r;{const n=this.getNgrams(e);return this.getGeneratedNgrams(n,e)}}_call(e,r){for(let n=0;n<e.length;++n){const a=r[n],s=this.calcBannedNgramTokens(e[n]);for(const i of s)a.data[i]=-1/0}return r}}class yb extends gr{constructor(e){super(),this.penalty=e}_call(e,r){for(let n=0;n<e.length;++n){const a=r[n];for(const s of e[n])a.data[s]<0?a.data[s]*=this.penalty:a.data[s]/=this.penalty}return r}}class wb extends gr{constructor(e,r){super(),this.min_length=e,this.eos_token_id=Array.isArray(r)?r:[r]}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length<this.min_length){const a=r[n];for(const s of this.eos_token_id)a.data[s]=-1/0}return r}}class bb extends gr{constructor(e,r,n){super(),this.prompt_length_to_skip=e,this.min_new_tokens=r,this.eos_token_id=Array.isArray(n)?n:[n]}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length-this.prompt_length_to_skip<this.min_new_tokens){const s=r[n];for(const i of this.eos_token_id)s[i]=-1/0}return r}}class vb extends gr{constructor(e,r){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(r)?r:[r]}_call(e,r){for(let n=0;n<e.length;++n){const a=r[n];for(const s of this.bad_words_ids){let i=!0;for(let o=1;o<=s.length-1&&s.length<e[o].length;++o)if(s.at(-o-1)!==e[o].at(-o)){i=!1;break}i&&(a[s.at(-1)]=-1/0)}}return r}}class $b extends gr{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,r){if(r.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${r.dims[0]} for the logits and ${e.length} for the input ids.`);const n=e.length,a=r.slice([0,n],null),s=r.slice([n,r.dims[0]],null);for(let i=0;i<s.data.length;++i)s.data[i]+=(a.data[i]-s.data[i])*this.guidance_scale;return s}}class xb extends ko{constructor(e){super(),this.temperature=e}_call(e,r){const n=r.data;for(let a=0;a<n.length;++a)n[a]/=this.temperature;return r}}class Sb extends ko{constructor(e,{filter_value:r=-1/0,min_tokens_to_keep:n=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(n)||n<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${n}`);this.top_p=e,this.filter_value=r,this.min_tokens_to_keep=n}}class kb extends ko{constructor(e,{filter_value:r=-1/0,min_tokens_to_keep:n=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,n),this.filter_value=r}}class Eb{constructor(e){W(this,"max_length",20);W(this,"max_new_tokens",null);W(this,"min_length",0);W(this,"min_new_tokens",null);W(this,"early_stopping",!1);W(this,"max_time",null);W(this,"do_sample",!1);W(this,"num_beams",1);W(this,"num_beam_groups",1);W(this,"penalty_alpha",null);W(this,"use_cache",!0);W(this,"temperature",1);W(this,"top_k",50);W(this,"top_p",1);W(this,"typical_p",1);W(this,"epsilon_cutoff",0);W(this,"eta_cutoff",0);W(this,"diversity_penalty",0);W(this,"repetition_penalty",1);W(this,"encoder_repetition_penalty",1);W(this,"length_penalty",1);W(this,"no_repeat_ngram_size",0);W(this,"bad_words_ids",null);W(this,"force_words_ids",null);W(this,"renormalize_logits",!1);W(this,"constraints",null);W(this,"forced_bos_token_id",null);W(this,"forced_eos_token_id",null);W(this,"remove_invalid_values",!1);W(this,"exponential_decay_length_penalty",null);W(this,"suppress_tokens",null);W(this,"begin_suppress_tokens",null);W(this,"forced_decoder_ids",null);W(this,"guidance_scale",null);W(this,"num_return_sequences",1);W(this,"output_attentions",!1);W(this,"output_hidden_states",!1);W(this,"output_scores",!1);W(this,"return_dict_in_generate",!1);W(this,"pad_token_id",null);W(this,"bos_token_id",null);W(this,"eos_token_id",null);W(this,"encoder_no_repeat_ngram_size",0);W(this,"decoder_start_token_id",null);W(this,"generation_kwargs",{});Object.assign(this,Or(e,Object.getOwnPropertyNames(this)))}}class mi extends Tt{_call(e,r){throw Error("StoppingCriteria needs to be subclassed")}}class Eo extends Tt{constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof Eo?e=e.criteria:e instanceof mi&&(e=[e]),this.criteria.push(...e)}_call(e,r){const n=new Array(e.length).fill(!1);for(const a of this.criteria){const s=a(e,r);for(let i=0;i<n.length;++i)n[i]||(n[i]=s[i])}return n}[Symbol.iterator](){return this.criteria.values()}}class Cb extends mi{constructor(e,r=null){super(),this.max_length=e,this.max_position_embeddings=r}_call(e){return e.map(r=>r.length>=this.max_length)}}class Tb extends mi{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,r){return e.map(n=>{const a=n.at(-1);return this.eos_token_id.some(s=>a==s)})}}class gi extends Tt{constructor(e){super(),this.generation_config=e}_call(e,r=-1){return this.sample(e,r)}sample(e,r){throw Error("sample should be implemented in subclasses.")}getLogits(e,r){let n=e.dims.at(-1),a=e.data;if(r===-1)a=a.slice(-n);else{let s=r*n;a=a.slice(s,s+n)}return a}randomSelect(e){let r=e.reduce((a,s)=>a+s,0),n=Math.random()*r;for(let a=0;a<e.length;++a)if(n-=e[a],n<=0)return a;return 0}static getSampler(e){if(e.do_sample)return new Ab(e);if(e.num_beams>1)return new Ob(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new Ib(e)}}class Ib extends gi{sample(e,r=-1){let n=this.getLogits(e,r);return[[Ji(n)[1],0]]}}class Ab extends gi{sample(e,r=-1){let n=e.dims.at(-1);this.generation_config.top_k>0&&(n=Math.min(this.generation_config.top_k,n));const a=this.getLogits(e,r),s=iu(a,n),i=au(s.map(o=>o[1]));return Array.from({length:this.generation_config.num_beams},()=>{const o=this.randomSelect(i);return[s[o][0],Math.log(i[o])]})}}class Ob extends gi{sample(e,r=-1){let n=e.dims.at(-1);this.generation_config.top_k>0&&(n=Math.min(this.generation_config.top_k,n));const a=this.getLogits(e,r),s=iu(a,n),i=au(s.map(o=>o[1]));return Array.from({length:this.generation_config.num_beams},(o,l)=>[s[l][0],Math.log(i[l])])}}const ve={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7},_i=new Map,hm=new Map,Xn=new Map;async function Mb(t,e,r){let n=r.device;n&&typeof n!="string"&&(n.hasOwnProperty(e)?n=n[e]:(console.warn(`Device not specified for ${e}. Using the default device.`),n=null));const a=j_(n);let s=r.dtype;if(typeof s!="string"&&(s&&s.hasOwnProperty(e)?s=s[e]:(s=hb[a[0]],console.warn(`Dtype not specified for ${e}. Using the default dtype: ${s}.`))),cm.hasOwnProperty(s)){if(s===vt.fp16&&!await pb())throw new Error("The device does not support fp16.")}else throw new Error(`Invalid dtype: ${s}. Should be one of: ${Object.keys(vt).join(", ")}`);const i=cm[s],o=`${r.subfolder??""}/${e}${i}.onnx`,l={...r.session_options};l.executionProviders??(l.executionProviders=a);const d=Ma(t,o,!0,r);let c=[];if(r.use_external_data_format){if(Ar.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const g=`${e}${i}.onnx_data`,y=`${r.subfolder??""}/${g}`;c.push(new Promise(async(p,v)=>{const S=await Ma(t,y,!0,r);p({path:g,data:S})}))}else l.externalData!==void 0&&(c=l.externalData.map(async g=>{if(typeof g.data=="string"){const y=await Ma(t,g.data,!0,r);return{...g,data:y}}return g}));if(c.length>0&&(l.externalData=await Promise.all(c)),n==="webgpu"){const g=lm(r.config,{prefix:"present"}),y={};for(const p in g)y[p]="gpu-buffer";l.preferredOutputLocation=y}return{buffer:await d,session_options:l}}async function jr(t,e,r){const n=Object.keys(e),a=await Promise.all(n.map(async i=>Mb(t,e[i],r))),s={};for(let i=0;i<n.length;++i){const{buffer:o,session_options:l}=a[i],d=await Pf(o,l);s[n[i]]=d}return s}function zb(t,e){const r=Object.create(null),n=[];for(const i of t.inputNames){const o=e[i];if(!(o instanceof ke)){n.push(i);continue}r[i]=K_()?o.clone():o}if(n.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${n.join(", ")}.`);const a=Object.keys(e).length,s=t.inputNames.length;if(a>s){let i=Object.keys(e).filter(o=>!t.inputNames.includes(o));console.warn(`WARNING: Too many inputs were provided (${a} > ${s}). The following inputs will be ignored: "${i.join(", ")}".`)}return r}async function kr(t,e){const r=zb(t,e);try{const n=Object.fromEntries(Object.entries(r).map(([s,i])=>[s,i.ort_tensor]));let a=await t.run(n);return a=fm(a),a}catch(n){throw console.error(`An error occurred during model execution: "${n}".`),console.error("Inputs given to model:",r),n}}function fm(t){for(let e in t)Bf(t[e])?t[e]=new ke(t[e]):typeof t[e]=="object"&&fm(t[e]);return t}function Rb(t){if(t instanceof ke)return t;if(t.length===0)throw Error("items must be non-empty");if(Array.isArray(t[0])){if(t.some(e=>e.length!==t[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new ke("int64",BigInt64Array.from(t.flat().map(e=>BigInt(e))),[t.length,t[0].length])}else return new ke("int64",BigInt64Array.from(t.map(e=>BigInt(e))),[1,t.length])}function mm(t){return new ke("bool",[t],[1])}async function gm(t,e){let{encoder_outputs:r,past_key_values:n}=e;if(!r){const l=Or(e,t.sessions.model.inputNames);r=(await Jn(t,l)).last_hidden_state}const{input_ids:a,decoder_input_ids:s,...i}=e;return i.input_ids=s,i.encoder_hidden_states=r,t.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(i.encoder_attention_mask=e.attention_mask),await Co(t,i,!0)}async function Jn(t,e){const r=t.sessions.model,n=Object.create(null);for(const a of r.inputNames)n[a]=e[a];return r.inputNames.includes("token_type_ids")&&!n.token_type_ids&&(n.token_type_ids=new ke("int64",new BigInt64Array(n.input_ids.data.length),n.input_ids.dims)),await kr(r,n)}async function Co(t,e,r=!1){const n=t.sessions[r?"decoder_model_merged":"model"],{past_key_values:a,...s}=e;if(n.inputNames.includes("use_cache_branch")&&(s.use_cache_branch=mm(!!a)),n.inputNames.includes("position_ids")&&s.attention_mask&&!s.position_ids&&(s.position_ids=Bb(s,a)),t.uses_4d_attention_mask){const o=new ke("float32",Float32Array.from(s.attention_mask.data,Number),s.attention_mask.dims),l=await X_(o.unsqueeze(1).unsqueeze(2),o.unsqueeze(1).unsqueeze(-1));s.attention_mask=l}t.addPastKeyValues(s,a);const i=Or(s,n.inputNames);return await kr(n,i)}async function Pb(t,{input_ids:e=null,attention_mask:r=null,pixel_values:n=null,position_ids:a=null,inputs_embeds:s=null,past_key_values:i=null,generation_config:o=null,logits_processor:l=null,...d}){if(!s){if(s=await t.encode_text({input_ids:e}),n&&e.dims[1]!==1){const f=await t.encode_image({pixel_values:n});({inputs_embeds:s,attention_mask:r}=t._merge_input_ids_with_image_features({image_features:f,inputs_embeds:s,input_ids:e,attention_mask:r}))}else if(i&&n&&e.dims[1]===1){const f=e.dims[1],g=Object.values(i)[0].dims.at(-2);r=Qt([ln([e.dims[0],g]),r.slice(null,[r.dims[1]-f,r.dims[1]])],1)}}return await Co(t,{inputs_embeds:s,past_key_values:i,attention_mask:r,position_ids:a,generation_config:o,logits_processor:l},!0)}function Bb(t,e=null){const{input_ids:r,inputs_embeds:n,attention_mask:a}=t,[s,i]=a.dims,o=new BigInt64Array(a.data.length);for(let d=0;d<s;++d){const c=d*i;let f=BigInt(0);for(let g=0;g<i;++g){const y=c+g;a.data[y]===0n?o[y]=BigInt(1):(o[y]=f,f+=a.data[y])}}let l=new ke("int64",o,a.dims);if(e){const d=-(r??n).dims.at(1);l=l.slice(null,[d,null])}return l}function _m(t,e,r,n){if(r.past_key_values){const a=Object.values(r.past_key_values)[0].dims.at(-2),{input_ids:s,attention_mask:i}=r;if(!(i&&i.dims[1]>s.dims[1])){if(a<s.dims[1])r.input_ids=s.slice(null,[a,null]);else if(t.config.image_token_index!=null&&s.data.some(o=>o==t.config.image_token_index)){const o=t.config.num_image_tokens;if(!o)throw new Error("`num_image_tokens` is missing in the model configuration.");const l=s.dims[1]-(a-o);r.input_ids=s.slice(null,[-l,null]),r.attention_mask=ln([1,a+l])}}}return r}function Db(t,e,r,n){const{...a}=r;return r.past_key_values&&(e=e.map(i=>[i.at(-1)])),a.decoder_input_ids=Rb(e),a}class ee extends Tt{constructor(r,n){super();W(this,"main_input_name","input_ids");W(this,"forward_params",["input_ids","attention_mask"]);this.config=r,this.sessions=n;const a=Xn.get(this.constructor),s=_i.get(a);this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,s===ve.DecoderOnly?(this.can_generate=!0,this._forward=Co,this._prepare_inputs_for_generation=_m):s===ve.Seq2Seq||s===ve.Vision2Seq||s===ve.Musicgen?(this.can_generate=!0,this._forward=gm,this._prepare_inputs_for_generation=Db):s===ve.EncoderDecoder?this._forward=gm:s===ve.ImageTextToText?(this.can_generate=!0,this._forward=Pb,this._prepare_inputs_for_generation=_m):this._forward=Jn,this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var n;const r=[];for(const a of Object.values(this.sessions))(n=a==null?void 0:a.handler)!=null&&n.dispose&&r.push(a.handler.dispose());return await Promise.all(r)}static async from_pretrained(r,{progress_callback:n=null,config:a=null,cache_dir:s=null,local_files_only:i=!1,revision:o="main",model_file_name:l=null,subfolder:d="onnx",device:c=null,dtype:f=null,use_external_data_format:g=null,session_options:y={}}={}){let p={progress_callback:n,config:a,cache_dir:s,local_files_only:i,revision:o,model_file_name:l,subfolder:d,device:c,dtype:f,use_external_data_format:g,session_options:y};const v=Xn.get(this),S=_i.get(v);p.config=await dm.from_pretrained(r,p);let E;return S===ve.DecoderOnly?E=await Promise.all([jr(r,{model:p.model_file_name??"model"},p),Mr(r,"generation_config.json",!1,p)]):S===ve.Seq2Seq||S===ve.Vision2Seq?E=await Promise.all([jr(r,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},p),Mr(r,"generation_config.json",!1,p)]):S===ve.MaskGeneration?E=await Promise.all([jr(r,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},p)]):S===ve.EncoderDecoder?E=await Promise.all([jr(r,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},p)]):S===ve.ImageTextToText?E=await Promise.all([jr(r,{embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"},p),Mr(r,"generation_config.json",!1,p)]):S===ve.Musicgen?E=await Promise.all([jr(r,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},p),Mr(r,"generation_config.json",!1,p)]):(S!==ve.EncoderOnly&&console.warn(`Model type for '${v??(a==null?void 0:a.model_type)}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`),E=await Promise.all([jr(r,{model:p.model_file_name??"model"},p)])),new this(p.config,...E)}async _call(r){return await this.forward(r)}async forward(r){return await this._forward(this,r)}_get_logits_warper(r){const n=new pm;return r.temperature!==null&&r.temperature!==1&&n.push(new xb(r.temperature)),r.top_k!==null&&r.top_k!==0&&n.push(new kb(r.top_k)),r.top_p!==null&&r.top_p<1&&n.push(new Sb(r.top_p)),n}_get_logits_processor(r,n,a=null){const s=new pm;if(r.repetition_penalty!==null&&r.repetition_penalty!==1&&s.push(new yb(r.repetition_penalty)),r.no_repeat_ngram_size!==null&&r.no_repeat_ngram_size>0&&s.push(new _b(r.no_repeat_ngram_size)),r.bad_words_ids!==null&&s.push(new vb(r.bad_words_ids,r.eos_token_id)),r.min_length!==null&&r.eos_token_id!==null&&r.min_length>0&&s.push(new wb(r.min_length,r.eos_token_id)),r.min_new_tokens!==null&&r.eos_token_id!==null&&r.min_new_tokens>0&&s.push(new bb(n,r.min_new_tokens,r.eos_token_id)),r.forced_bos_token_id!==null&&s.push(new fb(r.forced_bos_token_id)),r.forced_eos_token_id!==null&&s.push(new mb(r.max_length,r.forced_eos_token_id)),r.begin_suppress_tokens!==null){let i=n>1||r.forced_bos_token_id===null?n:n+1;r.forced_decoder_ids!==null&&(i+=r.forced_decoder_ids[r.forced_decoder_ids.length-1][0]),s.push(new gb(r.begin_suppress_tokens,i))}return r.guidance_scale!==null&&r.guidance_scale>1&&s.push(new $b(r.guidance_scale)),a!==null&&s.extend(a),s}_prepare_generation_config(r,n){const a=new Eb(this.config);return"generation_config"in this&&Object.assign(a,this.generation_config),r&&Object.assign(a,r),n&&Object.assign(a,Or(n,Object.getOwnPropertyNames(a))),a}_get_stopping_criteria(r,n=null){const a=new Eo;return r.max_length!==null&&a.push(new Cb(r.max_length,this.config.max_position_embeddings??null)),r.eos_token_id!==null&&a.push(new Tb(r.eos_token_id)),n&&a.extend(n),a}_validate_model_class(){if(!this.can_generate){const r=[Ro,yg,_g,gg],n=Xn.get(this.constructor),a=new Set,s=this.config.model_type;for(const o of r){const l=o.get(s);l&&a.add(l[0])}let i=`The current model class (${n}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw a.size>0&&(i+=` Please use the following class instead: ${[...a].join(", ")}`),Error(i)}}prepare_inputs_for_generation(...r){return this._prepare_inputs_for_generation(this,...r)}_update_model_kwargs_for_generation({generated_input_ids:r,outputs:n,model_inputs:a,is_encoder_decoder:s}){return a.past_key_values=this.getPastKeyValues(n,a.past_key_values),a.input_ids=new ke("int64",r.flat(),[r.length,1]),s||(a.attention_mask=Qt([a.attention_mask,ln([a.attention_mask.dims[0],1])],1)),a.position_ids=null,a}_prepare_model_inputs({inputs:r,bos_token_id:n,model_kwargs:a}){const s=Or(a,this.forward_params),i=this.main_input_name;if(i in s){if(r)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else s[i]=r;return{inputs_tensor:s[i],model_inputs:s,model_input_name:i}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:r,model_inputs:n,model_input_name:a,generation_config:s}){const i=Or(n,this.sessions.model.inputNames);let{last_hidden_state:o}=await Jn(this,i);return s.guidance_scale!==null&&s.guidance_scale>1&&(o=Qt([o,ry(o,0)],0),"attention_mask"in n&&(n.attention_mask=Qt([n.attention_mask,iy(n.attention_mask)],0))),n.encoder_outputs=o,n}_prepare_decoder_input_ids_for_generation({batch_size:r,model_input_name:n,model_kwargs:a,decoder_start_token_id:s,bos_token_id:i,generation_config:o}){s=s??i;let l;if(this.config.model_type==="musicgen")l=new Array(r*this.config.decoder.num_codebooks).fill(s);else if(Array.isArray(s)){if(s.length!==r)throw new Error(`\`decoder_start_token_id\` expcted to have length ${r} but got ${s.length}`);l=s}else l=new Array(r).fill(s);const c=new ke("int64",l,[l.length,1]);return a.decoder_attention_mask=ny(c),{input_ids:c,model_inputs:a}}async generate({inputs:r=null,generation_config:n=null,logits_processor:a=null,stopping_criteria:s=null,streamer:i=null,...o}){this._validate_model_class(),n=this._prepare_generation_config(n,o);let{inputs_tensor:l,model_inputs:d,model_input_name:c}=this._prepare_model_inputs({inputs:r,model_kwargs:o});const f=this.config.is_encoder_decoder;f&&("encoder_outputs"in d||(d=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:l,model_inputs:d,model_input_name:c,generation_config:n})));let g;f?{input_ids:g,model_inputs:d}=this._prepare_decoder_input_ids_for_generation({batch_size:d[c].dims.at(0),model_input_name:c,model_kwargs:d,decoder_start_token_id:n.decoder_start_token_id,bos_token_id:n.bos_token_id,generation_config:n}):g=d[c];let y=g.dims.at(-1);n.max_new_tokens!==null&&(n.max_length=y+n.max_new_tokens);const p=this._get_logits_processor(n,y,a),v=this._get_stopping_criteria(n,s),S=d[c].dims.at(0),E=gi.getSampler(n),k=new Array(S).fill(0),O=g.tolist();i&&i.put(O);let I=null;for(;;){d=this.prepare_inputs_for_generation(O,d,n);const F=await this.forward(d),B=F.logits.slice(null,-1,null),G=p(O,B),H=[];for(let pe=0;pe<G.dims.at(0);++pe){const oe=G[pe],ne=E(oe);for(const[de,D]of ne){const z=BigInt(de);k[pe]+=D,O[pe].push(z),H.push([z])}}if(i&&i.put(H),v(O).every(pe=>pe)){n.return_dict_in_generate&&(I=this.getPastKeyValues(F,d.past_key_values,!1));break}d=this._update_model_kwargs_for_generation({generated_input_ids:H,outputs:F,model_inputs:d,is_encoder_decoder:f})}i&&i.end();const T=new ke("int64",O.flat(),[O.length,O[0].length]);return n.return_dict_in_generate?{sequences:T,past_key_values:I}:T}addAttentionsToBeam(r,n){if(this.config.is_encoder_decoder){if(!n.cross_attentions||n.cross_attentions.length===0)throw Error("`output_attentions` is true, but the model did not produce cross-attentions. This is most likely because the model was not exported with `output_attentions=True`.");r.cross_attentions||(r.cross_attentions=[]),r.cross_attentions.push(n.cross_attentions)}if(!n.decoder_attentions||n.decoder_attentions.length===0)throw Error("`output_attentions` is true, but the model did not produce decoder-attentions. This is most likely because the model was not exported with `output_attentions=True`.");r.decoder_attentions||(r.decoder_attentions=[]),r.decoder_attentions.push(n.decoder_attentions)}groupBeams(r){const n=Object.create(null);for(const a of r)n[a.id]===void 0?n[a.id]=[a]:n[a.id].push(a);return Object.values(n)}getPastKeyValues(r,n,a=!0){const s=Object.create(null);for(const i in r)if(i.startsWith("present")){let o=i.replace("present","past_key_values");if(n&&i.includes("encoder"))s[o]=n[o];else{if(a&&n){const l=n[o];l.location==="gpu-buffer"&&l.dispose()}s[o]=r[i]}}return s}getAttentions(r){const n=Object.create(null);for(const a of["cross_attentions","decoder_attentions"]){const s=[];for(const i in r)if(i.startsWith(a)){const o=i.split(".").pop();s[o]=r[i]}n[a]=s}return n}addPastKeyValues(r,n){if(n)Object.assign(r,n);else{const a=this.custom_config.kv_cache_dtype??"float32",s=a==="float16"?new Uint16Array:[],i=lm(this.config,{encoder_add_pkv:this.add_encoder_pkv??!0});for(const o in i)r[o]=new ke(a,s,i[o])}}}class Ft{}class Zn extends ee{}class Nb extends Zn{}class Fb extends Zn{async _call(e){return new ct(await super._call(e))}}class Lb extends Zn{async _call(e){return new Pe(await super._call(e))}}class Ub extends Zn{async _call(e){return new dt(await super._call(e))}}class Wb extends Zn{async _call(e){return new _t(await super._call(e))}}class Vb extends ee{}class Gb extends Vb{}class ea extends ee{}class Hb extends ea{}class qb extends ea{async _call(e){return new ct(await super._call(e))}}class jb extends ea{async _call(e){return new Pe(await super._call(e))}}class Kb extends ea{async _call(e){return new dt(await super._call(e))}}class Yb extends ea{async _call(e){return new _t(await super._call(e))}}class ta extends ee{}class Qb extends ta{}class Xb extends ta{async _call(e){return new ct(await super._call(e))}}class Jb extends ta{async _call(e){return new Pe(await super._call(e))}}class Zb extends ta{async _call(e){return new dt(await super._call(e))}}class ev extends ta{async _call(e){return new _t(await super._call(e))}}class ra extends ee{}class tv extends ra{}class rv extends ra{async _call(e){return new ct(await super._call(e))}}class nv extends ra{async _call(e){return new Pe(await super._call(e))}}class av extends ra{async _call(e){return new dt(await super._call(e))}}class iv extends ra{async _call(e){return new _t(await super._call(e))}}class na extends ee{}class sv extends na{}class ov extends na{async _call(e){return new ct(await super._call(e))}}class uv extends na{async _call(e){return new Pe(await super._call(e))}}class lv extends na{async _call(e){return new dt(await super._call(e))}}class dv extends na{async _call(e){return new _t(await super._call(e))}}class aa extends ee{}class cv extends aa{}class pv extends aa{async _call(e){return new ct(await super._call(e))}}class hv extends aa{async _call(e){return new Pe(await super._call(e))}}class fv extends aa{async _call(e){return new dt(await super._call(e))}}class mv extends aa{async _call(e){return new _t(await super._call(e))}}class ia extends ee{}class gv extends ia{}class _v extends ia{async _call(e){return new ct(await super._call(e))}}class yv extends ia{async _call(e){return new Pe(await super._call(e))}}class wv extends ia{async _call(e){return new dt(await super._call(e))}}class bv extends ia{async _call(e){return new _t(await super._call(e))}}class sa extends ee{}class vv extends sa{}class $v extends sa{async _call(e){return new Pe(await super._call(e))}}class xv extends sa{async _call(e){return new dt(await super._call(e))}}class Sv extends sa{async _call(e){return new _t(await super._call(e))}}class kv extends sa{async _call(e){return new ct(await super._call(e))}}class yi extends ee{}class Ev extends yi{}class Cv extends yi{async _call(e){return new ct(await super._call(e))}}class Tv extends yi{async _call(e){return new Pe(await super._call(e))}}class Iv extends yi{async _call(e){return new dt(await super._call(e))}}class wi extends ee{}class Av extends wi{}class Ov extends wi{async _call(e){return new ct(await super._call(e))}}class Mv extends wi{async _call(e){return new Pe(await super._call(e))}}class zv extends wi{async _call(e){return new _t(await super._call(e))}}class oa extends ee{}class Rv extends oa{}class Pv extends oa{async _call(e){return new ct(await super._call(e))}}class Bv extends oa{async _call(e){return new Pe(await super._call(e))}}class Dv extends oa{async _call(e){return new dt(await super._call(e))}}class Nv extends oa{async _call(e){return new _t(await super._call(e))}}class bi extends ee{}class Fv extends bi{}class Lv extends bi{async _call(e){return new ct(await super._call(e))}}class Uv extends bi{async _call(e){return new Pe(await super._call(e))}}class Wv extends bi{async _call(e){return new _t(await super._call(e))}}class vi extends ee{}class Vv extends vi{}class Gv extends vi{async _call(e){return new Pe(await super._call(e))}}class Hv extends vi{async _call(e){return new _t(await super._call(e))}}class qv extends vi{async _call(e){return new ct(await super._call(e))}}class ym extends ee{constructor(r,n,a){super(r,n);W(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]);this.generation_config=a}}class jv extends ym{}class Kv extends ym{}class wm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class Yv extends wm{}class Qv extends wm{}class bm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class Xv extends bm{}class Jv extends bm{}class To extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class Zv extends To{}class e2 extends To{}class t2 extends To{async _call(e){return new Pe(await super._call(e))}}class $i extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class r2 extends $i{}class n2 extends $i{}class a2 extends $i{async _call(e){return new Pe(await super._call(e))}}class i2 extends $i{}class vm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class s2 extends vm{}class o2 extends vm{}class $m extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class u2 extends $m{}class l2 extends $m{}class ua extends ee{}class d2 extends ua{}class c2 extends ua{async _call(e){return new ct(await super._call(e))}}class p2 extends ua{async _call(e){return new Pe(await super._call(e))}}class h2 extends ua{async _call(e){return new dt(await super._call(e))}}class f2 extends ua{async _call(e){return new _t(await super._call(e))}}class la extends ee{}class m2 extends la{}class g2 extends la{async _call(e){return new ct(await super._call(e))}}class _2 extends la{async _call(e){return new Pe(await super._call(e))}}class y2 extends la{async _call(e){return new dt(await super._call(e))}}class w2 extends la{async _call(e){return new _t(await super._call(e))}}class da extends ee{}class b2 extends da{}class v2 extends da{async _call(e){return new ct(await super._call(e))}}class $2 extends da{async _call(e){return new Pe(await super._call(e))}}class x2 extends da{async _call(e){return new dt(await super._call(e))}}class S2 extends da{async _call(e){return new _t(await super._call(e))}}class xm extends ee{}class k2 extends xm{}class E2 extends xm{}class Sm extends ee{constructor(r,n,a){super(r,n);W(this,"requires_attention_mask",!1);W(this,"main_input_name","input_features");W(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]);this.generation_config=a}}class C2 extends Sm{}class T2 extends Sm{_retrieve_init_tokens(e){throw e.decoder_start_token_id,new Error("Not implemented yet")}async generate({inputs:e=null,generation_config:r=null,logits_processor:n=null,stopping_criteria:a=null,language:s=null,task:i=null,...o}){throw new Error("WhisperForConditionalGeneration.generate is not yet in Transformers.js v3.")}_extract_token_timestamps(e,r,n=null,a=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");let s=this.config.median_filter_width;s===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),s=7);const i=e.cross_attentions.map(d=>{let c=Array.from({length:this.config.decoder_layers},(S,E)=>Qt(d.map(k=>k[E]),2)),f=_o(r.map(([S,E])=>n?c[S].slice(null,E,null,[0,n]):c[S].slice(null,E)));f=f.transpose(1,0,2,3);let[g,y]=J_(f,-2,0,!0),p=f.clone();for(let S=0;S<p.dims[0];++S){let E=p[S];for(let k=0;k<E.dims[0];++k){let O=E[k];const I=g[S][k][0],T=y[S][k][0];for(let F=0;F<O.dims[0];++F){let B=O[F];for(let G=0;G<B.data.length;++G)B.data[G]=(B.data[G]-T.data[G])/I.data[G];B.data.set(f0(B.data,s))}}}return yo(p,1)}),o=[e.sequences.length,e.sequences[0].length],l=new ke("float32",new Float32Array(o[0]*o[1]),o);for(let d=0;d<o[0];++d){const c=i[d].neg().squeeze_(0);let[f,g]=Z_(c),y=Array.from({length:f.length-1},(S,E)=>f[E+1]-f[E]),p=it([1],y).map(S=>!!S),v=[];for(let S=0;S<p.length;++S)p[S]&&v.push(g[S]*a);l[d].data.set(v,1)}return l}}class I2 extends ee{constructor(r,n,a){super(r,n);W(this,"main_input_name","pixel_values");throw this.generation_config=a,new Error("Not implemented yet")}}class A2 extends ee{constructor(r,n,a){super(r,n);W(this,"forward_params",["input_ids","pixel_values","attention_mask","position_ids","past_key_values"]);this.generation_config=a}}class Io extends A2{async encode_image({pixel_values:e}){const r=(await kr(this.sessions.vision_encoder,{pixel_values:e})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${r.dims[1]}).`),this.config.num_image_tokens=r.dims[1]),r}async encode_text({input_ids:e}){return(await kr(this.sessions.embed_tokens,{input_ids:e})).inputs_embeds}_merge_input_ids_with_image_features({inputs_embeds:e,image_features:r,input_ids:n,attention_mask:a}){const s=this.config.image_token_index,o=n.tolist().map(g=>g.findIndex(y=>y==s)),l=o.every(g=>g===-1),d=o.every(g=>g!==-1);if(!l&&!d)throw new Error("Every input should contain either 0 or 1 image token.");if(l)return{inputs_embeds:e,attention_mask:a};const c=[],f=[];for(let g=0;g<o.length;++g){const y=o[g],p=e[g],v=r[g],S=a[g];c.push(Qt([p.slice([0,y]),v,p.slice([y+1,p.dims[0]])],0)),f.push(Qt([S.slice([0,y]),ln([v.dims[0]]),S.slice([y+1,S.dims[0]])],0))}return{inputs_embeds:_o(c,0),attention_mask:_o(f,0)}}}class O2 extends Io{}class M2 extends Io{constructor(){super(...arguments);W(this,"uses_4d_attention_mask",!0)}_merge_input_ids_with_image_features({inputs_embeds:r,image_features:n,input_ids:a,attention_mask:s}){if(n){const i=n.div(this.config.hidden_size**.5),o=Qt([i,r],1),l=Qt([ln(n.dims.slice(0,2)),s],1);return{inputs_embeds:o,attention_mask:l}}else return{inputs_embeds:r,attention_mask:s}}}class xi extends ee{}class z2 extends xi{}class R2 extends xi{static async from_pretrained(e,r={}){return r.model_file_name??(r.model_file_name="text_model"),super.from_pretrained(e,r)}}class P2 extends xi{static async from_pretrained(e,r={}){return r.model_file_name??(r.model_file_name="vision_model"),super.from_pretrained(e,r)}}class km extends ee{}class B2 extends km{}class D2 extends km{static async from_pretrained(e,r={}){return r.model_file_name??(r.model_file_name="text_model"),super.from_pretrained(e,r)}}class N2 extends xi{static async from_pretrained(e,r={}){return r.model_file_name??(r.model_file_name="vision_model"),super.from_pretrained(e,r)}}class F2 extends ee{}class L2 extends F2{}class Em extends ee{}class U2 extends Em{}class W2 extends Em{}class Cm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class V2 extends Cm{}class G2 extends Cm{}class Tm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class H2 extends Tm{}class q2 extends Tm{}class Im extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class j2 extends Im{}class K2 extends Im{}class Am extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class Y2 extends Am{}class Q2 extends Am{}class Om extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class X2 extends Om{}class J2 extends Om{}class Mm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class Z2 extends Mm{}class e$ extends Mm{}class zm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class t$ extends zm{}class r$ extends zm{}class Rm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class n$ extends Rm{}class a$ extends Rm{}class Pm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class i$ extends Pm{}class s$ extends Pm{}class Bm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class o$ extends Bm{}class u$ extends Bm{}class Dm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class l$ extends Dm{}class d$ extends Dm{}class Nm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class c$ extends Nm{}class p$ extends Nm{}class Fm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class h$ extends Fm{}class f$ extends Fm{}class Lm extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class m$ extends Lm{}class g$ extends Lm{}class Um extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class _$ extends Um{}class y$ extends Um{}class Wm extends ee{}class w$ extends Wm{}class b$ extends Wm{async _call(e){return new Pe(await super._call(e))}}class v$ extends ee{}class $$ extends v${async _call(e){return new Ox(await super._call(e))}}class Vm extends ee{}class x$ extends Vm{}class S$ extends Vm{async _call(e){return new Pe(await super._call(e))}}class Gm extends ee{}class k$ extends Gm{}class E$ extends Gm{}class Hm extends ee{}class C$ extends Hm{}class T$ extends Hm{}class qm extends ee{}class I$ extends qm{}class A$ extends qm{async _call(e){return new Pe(await super._call(e))}}class Ao extends ee{}class O$ extends Ao{}class M$ extends Ao{async _call(e){return new jm(await super._call(e))}}class z$ extends Ao{async _call(e){return new R$(await super._call(e))}}class jm extends Ft{constructor({logits:e,pred_boxes:r}){super(),this.logits=e,this.pred_boxes=r}}class R$ extends Ft{constructor({logits:e,pred_boxes:r,pred_masks:n}){super(),this.logits=e,this.pred_boxes=r,this.pred_masks=n}}class Km extends ee{}class P$ extends Km{}class B$ extends Km{async _call(e){return new D$(await super._call(e))}}class D$ extends jm{}class Ym extends ee{}class N$ extends Ym{}class F$ extends Ym{async _call(e){return new Pe(await super._call(e))}}class Qm extends ee{}class L$ extends Qm{}class U$ extends Qm{async _call(e){return new Pe(await super._call(e))}}class Xm extends ee{}class W$ extends Xm{}class V$ extends Xm{async _call(e){return new Pe(await super._call(e))}}class Jm extends ee{}class G$ extends Jm{}class H$ extends Jm{}class Zm extends ee{}class q$ extends Zm{}class j$ extends Zm{}class K$ extends ee{}class Y$ extends K${}class eg extends ee{}class Q$ extends eg{}class X$ extends eg{}class J$ extends ee{}class Z$ extends J${}class tg extends ee{}class e1 extends tg{}class t1 extends tg{async _call(e){return new Pe(await super._call(e))}}class rg extends ee{}class r1 extends rg{}class n1 extends rg{async _call(e){return new Pe(await super._call(e))}}class ng extends ee{}class a1 extends ng{}class i1 extends ng{async _call(e){return new Pe(await super._call(e))}}class ag extends ee{}class s1 extends ag{}class o1 extends ag{async _call(e){return new u1(await super._call(e))}}class u1 extends Ft{constructor({logits:e,pred_boxes:r}){super(),this.logits=e,this.pred_boxes=r}}class l1 extends ee{}class d1 extends l1{async get_image_embeddings({pixel_values:e}){return await Jn(this,{pixel_values:e})}async forward(e){if((!e.image_embeddings||!e.image_positional_embeddings)&&(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const n=e.input_points.dims.slice(0,-1),a=n.reduce((s,i)=>s*i,1);e.input_labels=new ke("int64",new BigInt64Array(a).fill(1n),n)}const r={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(r.input_points=e.input_points),e.input_labels&&(r.input_labels=e.input_labels),e.input_boxes&&(r.input_boxes=e.input_boxes),await kr(this.sessions.prompt_encoder_mask_decoder,r)}async _call(e){return new c1(await super._call(e))}}class c1 extends Ft{constructor({iou_scores:e,pred_masks:r}){super(),this.iou_scores=e,this.pred_masks=r}}class ig extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class p1 extends ig{}class h1 extends ig{}class sg extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class f1 extends sg{}class m1 extends sg{}class Kr extends ee{}class g1 extends Kr{}class _1 extends Kr{async _call(e){return new pn(await super._call(e))}}class y1 extends Kr{async _call(e){return new Pe(await super._call(e))}}class w1 extends Kr{async _call(e){return new dt(await super._call(e))}}class Oo extends ee{}class b1 extends Oo{}class v1 extends Oo{async _call(e){return new pn(await super._call(e))}}class $1 extends Oo{async _call(e){return new Pe(await super._call(e))}}class Si extends ee{}class x1 extends Si{}class S1 extends Si{async _call(e){return new pn(await super._call(e))}}class k1 extends Si{async _call(e){return new Pe(await super._call(e))}}class E1 extends Si{async _call(e){return new dt(await super._call(e))}}class Mo extends ee{}class C1 extends Mo{}class T1 extends Mo{async _call(e){return new pn(await super._call(e))}}class I1 extends Mo{async _call(e){return new Pe(await super._call(e))}}class A1 extends Kr{}class O1 extends Kr{async _call(e){return new pn(await super._call(e))}}class M1 extends Kr{async _call(e){return new Pe(await super._call(e))}}class ca extends ee{}class z1 extends ca{}class R1 extends ca{async _call(e){return new pn(await super._call(e))}}class P1 extends ca{async _call(e){return new Pe(await super._call(e))}}class B1 extends ca{async _call(e){return new Ax(await super._call(e))}}class D1 extends ca{async _call(e){return new dt(await super._call(e))}}class og extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class N1 extends og{}class F1 extends og{async generate_speech(e,r,{threshold:n=.5,minlenratio:a=0,maxlenratio:s=20,vocoder:i=null}={}){const o={input_ids:e},{encoder_outputs:l,encoder_attention_mask:d}=await Jn(this,o),c=l.dims[1]/this.config.reduction_factor,f=Math.floor(c*s),g=Math.floor(c*a),y=this.config.num_mel_bins;let p=[],v=null,S=null,E=0;for(;;){++E;const I=mm(!!S);let T;S?T=S.output_sequence_out:T=new ke("float32",new Float32Array(y),[1,1,y]);let F={use_cache_branch:I,output_sequence:T,encoder_attention_mask:d,speaker_embeddings:r,encoder_hidden_states:l};this.addPastKeyValues(F,v),S=await kr(this.sessions.decoder_model_merged,F),v=this.getPastKeyValues(S,v);const{prob:B,spectrum:G}=S;if(p.push(G),E>=g&&(Array.from(B.data).filter(H=>H>=n).length>0||E>=f))break}const k=Qt(p),{waveform:O}=await kr(i.sessions.model,{spectrogram:k});return{spectrogram:k,waveform:O}}}class L1 extends ee{constructor(){super(...arguments);W(this,"main_input_name","spectrogram")}}class U1 extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class W1 extends U1{}class ug extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class V1 extends ug{}class G1 extends ug{}class lg extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class H1 extends lg{}class q1 extends lg{}class dg extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class j1 extends dg{}class K1 extends dg{}class zo extends ee{}class Y1 extends zo{}class Q1 extends zo{static async from_pretrained(e,r={}){return r.model_file_name??(r.model_file_name="text_model"),super.from_pretrained(e,r)}}class X1 extends zo{static async from_pretrained(e,r={}){return r.model_file_name??(r.model_file_name="audio_model"),super.from_pretrained(e,r)}}class J1 extends ee{}class cg extends J1{async _call(e){return new Mx(await super._call(e))}}class pg extends ee{}class Z1 extends pg{}class ex extends pg{}class hg extends ee{constructor(e,r,n){super(e,r),this.generation_config=n}}class tx extends hg{}class rx extends hg{}class fg extends ee{}class nx extends fg{}class ax extends fg{async _call(e){return new Pe(await super._call(e))}}class mg extends ee{constructor(r,n,a){super(r,n);W(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]);this.generation_config=a}_apply_and_filter_by_delay_pattern_mask(r){const[n,a]=r.dims,s=this.config.decoder.num_codebooks,i=a-s;let o=0;for(let c=0;c<r.size;++c){if(r.data[c]===this.config.decoder.pad_token_id)continue;const f=c%a,g=Math.floor(c/a)%s,y=f-g;y>0&&y<=i&&(r.data[o++]=r.data[c])}const l=Math.floor(n/s),d=o/(l*s);return new ke(r.type,r.data.slice(0,o),[l,s,d])}prepare_inputs_for_generation(r,n,a){let s=structuredClone(r);for(let o=0;o<s.length;++o)for(let l=0;l<s[o].length;++l)o%this.config.decoder.num_codebooks>=l&&(s[o][l]=BigInt(this.config.decoder.pad_token_id));return a.guidance_scale!==null&&a.guidance_scale>1&&(s=s.concat(s)),super.prepare_inputs_for_generation(s,n,a)}async generate(r){const n=await super.generate(r),a=this._apply_and_filter_by_delay_pattern_mask(n).unsqueeze_(0),{audio_values:s}=await kr(this.sessions.encodec_decode,{audio_codes:a});return s}}class ki{static async from_pretrained(e,{progress_callback:r=null,config:n=null,cache_dir:a=null,local_files_only:s=!1,revision:i="main",model_file_name:o=null,subfolder:l="onnx",device:d=null,dtype:c=null,use_external_data_format:f=null,session_options:g={}}={}){let y={progress_callback:r,config:n,cache_dir:a,local_files_only:s,revision:i,model_file_name:o,subfolder:l,device:d,dtype:c,use_external_data_format:f,session_options:g};if(y.config=await dm.from_pretrained(e,y),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(let p of this.MODEL_CLASS_MAPPINGS){const v=p.get(y.config.model_type);if(v)return await v[1].from_pretrained(e,y)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${y.config.model_type}", attempting to construct from base class.`),await ee.from_pretrained(e,y);throw Error(`Unsupported model type: ${y.config.model_type}`)}}W(ki,"MODEL_CLASS_MAPPINGS",null),W(ki,"BASE_IF_FAIL",!1);const ix=new Map([["bert",["BertModel",Nb]],["nomic_bert",["NomicBertModel",Gb]],["roformer",["RoFormerModel",Hb]],["electra",["ElectraModel",tv]],["esm",["EsmModel",Ev]],["convbert",["ConvBertModel",Qb]],["camembert",["CamembertModel",sv]],["deberta",["DebertaModel",cv]],["deberta-v2",["DebertaV2Model",gv]],["mpnet",["MPNetModel",Rv]],["albert",["AlbertModel",Vv]],["distilbert",["DistilBertModel",vv]],["roberta",["RobertaModel",d2]],["xlm",["XLMModel",m2]],["xlm-roberta",["XLMRobertaModel",b2]],["clap",["ClapModel",Y1]],["clip",["CLIPModel",z2]],["clipseg",["CLIPSegModel",U2]],["chinese_clip",["ChineseCLIPModel",L2]],["siglip",["SiglipModel",B2]],["mobilebert",["MobileBertModel",Av]],["squeezebert",["SqueezeBertModel",Fv]],["wav2vec2",["Wav2Vec2Model",g1]],["wav2vec2-bert",["Wav2Vec2BertModel",C1]],["unispeech",["UniSpeechModel",b1]],["unispeech-sat",["UniSpeechSatModel",x1]],["hubert",["HubertModel",A1]],["wavlm",["WavLMModel",z1]],["audio-spectrogram-transformer",["ASTModel",k2]],["vits",["VitsModel",cg]],["detr",["DetrModel",O$]],["table-transformer",["TableTransformerModel",P$]],["vit",["ViTModel",w$]],["mobilevit",["MobileViTModel",x$]],["owlvit",["OwlViTModel",k$]],["owlv2",["Owlv2Model",C$]],["beit",["BeitModel",I$]],["deit",["DeiTModel",N$]],["convnext",["ConvNextModel",e1]],["convnextv2",["ConvNextV2Model",r1]],["dinov2",["Dinov2Model",a1]],["resnet",["ResNetModel",L$]],["swin",["SwinModel",W$]],["swin2sr",["Swin2SRModel",G$]],["donut-swin",["DonutSwinModel",Z$]],["yolos",["YolosModel",s1]],["dpt",["DPTModel",q$]],["glpn",["GLPNModel",Q$]],["hifigan",["SpeechT5HifiGan",L1]],["efficientnet",["EfficientNetModel",nx]]]),sx=new Map([["t5",["T5Model",jv]],["longt5",["LongT5Model",Yv]],["mt5",["MT5Model",Xv]],["bart",["BartModel",Zv]],["mbart",["MBartModel",r2]],["marian",["MarianModel",p1]],["whisper",["WhisperModel",C2]],["m2m_100",["M2M100Model",f1]],["blenderbot",["BlenderbotModel",s2]],["blenderbot-small",["BlenderbotSmallModel",u2]]]),ox=new Map([["bloom",["BloomModel",h$]],["gpt2",["GPT2Model",V2]],["gptj",["GPTJModel",Y2]],["gpt_bigcode",["GPTBigCodeModel",X2]],["gpt_neo",["GPTNeoModel",H2]],["gpt_neox",["GPTNeoXModel",j2]],["codegen",["CodeGenModel",Z2]],["llama",["LlamaModel",t$]],["gemma",["GemmaModel",n$]],["openelm",["OpenELMModel",i$]],["qwen2",["Qwen2Model",o$]],["phi",["PhiModel",l$]],["phi3",["Phi3Model",c$]],["mpt",["MptModel",m$]],["opt",["OPTModel",_$]],["mistral",["MistralModel",V1]],["starcoder2",["Starcoder2Model",H1]],["falcon",["FalconModel",j1]],["stablelm",["StableLmModel",tx]]]),gg=new Map([["speecht5",["SpeechT5ForSpeechToText",N1]],["whisper",["WhisperForConditionalGeneration",T2]]]),ux=new Map([["speecht5",["SpeechT5ForTextToSpeech",F1]]]),lx=new Map([["vits",["VitsModel",cg]],["musicgen",["MusicgenForConditionalGeneration",mg]]]),dx=new Map([["bert",["BertForSequenceClassification",Lb]],["roformer",["RoFormerForSequenceClassification",jb]],["electra",["ElectraForSequenceClassification",nv]],["esm",["EsmForSequenceClassification",Tv]],["convbert",["ConvBertForSequenceClassification",Jb]],["camembert",["CamembertForSequenceClassification",uv]],["deberta",["DebertaForSequenceClassification",hv]],["deberta-v2",["DebertaV2ForSequenceClassification",yv]],["mpnet",["MPNetForSequenceClassification",Bv]],["albert",["AlbertForSequenceClassification",Gv]],["distilbert",["DistilBertForSequenceClassification",$v]],["roberta",["RobertaForSequenceClassification",p2]],["xlm",["XLMForSequenceClassification",_2]],["xlm-roberta",["XLMRobertaForSequenceClassification",$2]],["bart",["BartForSequenceClassification",t2]],["mbart",["MBartForSequenceClassification",a2]],["mobilebert",["MobileBertForSequenceClassification",Mv]],["squeezebert",["SqueezeBertForSequenceClassification",Uv]]]),cx=new Map([["bert",["BertForTokenClassification",Ub]],["roformer",["RoFormerForTokenClassification",Kb]],["electra",["ElectraForTokenClassification",av]],["esm",["EsmForTokenClassification",Iv]],["convbert",["ConvBertForTokenClassification",Zb]],["camembert",["CamembertForTokenClassification",lv]],["deberta",["DebertaForTokenClassification",fv]],["deberta-v2",["DebertaV2ForTokenClassification",wv]],["mpnet",["MPNetForTokenClassification",Dv]],["distilbert",["DistilBertForTokenClassification",xv]],["roberta",["RobertaForTokenClassification",h2]],["xlm",["XLMForTokenClassification",y2]],["xlm-roberta",["XLMRobertaForTokenClassification",x2]]]),_g=new Map([["t5",["T5ForConditionalGeneration",Kv]],["longt5",["LongT5ForConditionalGeneration",Qv]],["mt5",["MT5ForConditionalGeneration",Jv]],["bart",["BartForConditionalGeneration",e2]],["mbart",["MBartForConditionalGeneration",n2]],["marian",["MarianMTModel",h1]],["m2m_100",["M2M100ForConditionalGeneration",m1]],["blenderbot",["BlenderbotForConditionalGeneration",o2]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",l2]]]),Ro=new Map([["bloom",["BloomForCausalLM",f$]],["gpt2",["GPT2LMHeadModel",G2]],["gptj",["GPTJForCausalLM",Q2]],["gpt_bigcode",["GPTBigCodeForCausalLM",J2]],["gpt_neo",["GPTNeoForCausalLM",q2]],["gpt_neox",["GPTNeoXForCausalLM",K2]],["codegen",["CodeGenForCausalLM",e$]],["llama",["LlamaForCausalLM",r$]],["gemma",["GemmaForCausalLM",a$]],["openelm",["OpenELMForCausalLM",s$]],["qwen2",["Qwen2ForCausalLM",u$]],["phi",["PhiForCausalLM",d$]],["phi3",["Phi3ForCausalLM",p$]],["mpt",["MptForCausalLM",g$]],["opt",["OPTForCausalLM",y$]],["mbart",["MBartForCausalLM",i2]],["mistral",["MistralForCausalLM",G1]],["starcoder2",["Starcoder2ForCausalLM",q1]],["falcon",["FalconForCausalLM",K1]],["trocr",["TrOCRForCausalLM",W1]],["stablelm",["StableLmForCausalLM",rx]]]),px=new Map([["bert",["BertForMaskedLM",Fb]],["roformer",["RoFormerForMaskedLM",qb]],["electra",["ElectraForMaskedLM",rv]],["esm",["EsmForMaskedLM",Cv]],["convbert",["ConvBertForMaskedLM",Xb]],["camembert",["CamembertForMaskedLM",ov]],["deberta",["DebertaForMaskedLM",pv]],["deberta-v2",["DebertaV2ForMaskedLM",_v]],["mpnet",["MPNetForMaskedLM",Pv]],["albert",["AlbertForMaskedLM",qv]],["distilbert",["DistilBertForMaskedLM",kv]],["roberta",["RobertaForMaskedLM",c2]],["xlm",["XLMWithLMHeadModel",g2]],["xlm-roberta",["XLMRobertaForMaskedLM",v2]],["mobilebert",["MobileBertForMaskedLM",Ov]],["squeezebert",["SqueezeBertForMaskedLM",Lv]]]),hx=new Map([["bert",["BertForQuestionAnswering",Wb]],["roformer",["RoFormerForQuestionAnswering",Yb]],["electra",["ElectraForQuestionAnswering",iv]],["convbert",["ConvBertForQuestionAnswering",ev]],["camembert",["CamembertForQuestionAnswering",dv]],["deberta",["DebertaForQuestionAnswering",mv]],["deberta-v2",["DebertaV2ForQuestionAnswering",bv]],["mpnet",["MPNetForQuestionAnswering",Nv]],["albert",["AlbertForQuestionAnswering",Hv]],["distilbert",["DistilBertForQuestionAnswering",Sv]],["roberta",["RobertaForQuestionAnswering",f2]],["xlm",["XLMForQuestionAnswering",w2]],["xlm-roberta",["XLMRobertaForQuestionAnswering",S2]],["mobilebert",["MobileBertForQuestionAnswering",zv]],["squeezebert",["SqueezeBertForQuestionAnswering",Wv]]]),yg=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",I2]]]),fx=new Map([["llava",["LlavaForConditionalGeneration",Io]],["moondream1",["Moondream1ForConditionalGeneration",O2]],["paligemma",["PaliGemmaForConditionalGeneration",M2]]]),mx=new Map([["vit",["ViTForImageClassification",b$]],["mobilevit",["MobileViTForImageClassification",S$]],["beit",["BeitForImageClassification",A$]],["deit",["DeiTForImageClassification",F$]],["convnext",["ConvNextForImageClassification",t1]],["convnextv2",["ConvNextV2ForImageClassification",n1]],["dinov2",["Dinov2ForImageClassification",i1]],["resnet",["ResNetForImageClassification",U$]],["swin",["SwinForImageClassification",V$]],["segformer",["SegformerForImageClassification",Z1]],["efficientnet",["EfficientNetForImageClassification",ax]]]),gx=new Map([["detr",["DetrForObjectDetection",M$]],["table-transformer",["TableTransformerForObjectDetection",B$]],["yolos",["YolosForObjectDetection",o1]]]),_x=new Map([["owlvit",["OwlViTForObjectDetection",E$]],["owlv2",["Owlv2ForObjectDetection",T$]]]),yx=new Map([["detr",["DetrForSegmentation",z$]],["clipseg",["CLIPSegForImageSegmentation",W2]]]),wx=new Map([["segformer",["SegformerForSemanticSegmentation",ex]]]),bx=new Map([["sam",["SamModel",d1]]]),vx=new Map([["wav2vec2",["Wav2Vec2ForCTC",_1]],["wav2vec2-bert",["Wav2Vec2BertForCTC",T1]],["unispeech",["UniSpeechForCTC",v1]],["unispeech-sat",["UniSpeechSatForCTC",S1]],["wavlm",["WavLMForCTC",R1]],["hubert",["HubertForCTC",O1]]]),$x=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",y1]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",I1]],["unispeech",["UniSpeechForSequenceClassification",$1]],["unispeech-sat",["UniSpeechSatForSequenceClassification",k1]],["wavlm",["WavLMForSequenceClassification",P1]],["hubert",["HubertForSequenceClassification",M1]],["audio-spectrogram-transformer",["ASTForAudioClassification",E2]]]),xx=new Map([["wavlm",["WavLMForXVector",B1]]]),Sx=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",E1]],["wavlm",["WavLMForAudioFrameClassification",D1]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",w1]]]),kx=new Map([["vitmatte",["VitMatteForImageMatting",$$]]]),Ex=new Map([["swin2sr",["Swin2SRForImageSuperResolution",H$]]]),Cx=new Map([["dpt",["DPTForDepthEstimation",j$]],["depth_anything",["DepthAnythingForDepthEstimation",Y$]],["glpn",["GLPNForDepthEstimation",X$]]]),Tx=new Map([["clip",["CLIPVisionModelWithProjection",P2]],["siglip",["SiglipVisionModel",N2]]]),wg=[[ix,ve.EncoderOnly],[sx,ve.EncoderDecoder],[ox,ve.DecoderOnly],[dx,ve.EncoderOnly],[cx,ve.EncoderOnly],[_g,ve.Seq2Seq],[gg,ve.Seq2Seq],[Ro,ve.DecoderOnly],[px,ve.EncoderOnly],[hx,ve.EncoderOnly],[yg,ve.Vision2Seq],[fx,ve.ImageTextToText],[mx,ve.EncoderOnly],[yx,ve.EncoderOnly],[wx,ve.EncoderOnly],[kx,ve.EncoderOnly],[Ex,ve.EncoderOnly],[Cx,ve.EncoderOnly],[gx,ve.EncoderOnly],[_x,ve.EncoderOnly],[bx,ve.MaskGeneration],[vx,ve.EncoderOnly],[$x,ve.EncoderOnly],[ux,ve.Seq2Seq],[lx,ve.EncoderOnly],[xx,ve.EncoderOnly],[Sx,ve.EncoderOnly],[Tx,ve.EncoderOnly]];for(const[t,e]of wg)for(const[r,n]of t.values())_i.set(r,e),Xn.set(n,r),hm.set(r,n);const Ix=[["MusicgenForConditionalGeneration",mg,ve.Musicgen],["CLIPTextModelWithProjection",R2,ve.EncoderOnly],["SiglipTextModel",D2,ve.EncoderOnly],["ClapTextModelWithProjection",Q1,ve.EncoderOnly],["ClapAudioModelWithProjection",X1,ve.EncoderOnly]];for(const[t,e,r]of Ix)_i.set(t,r),Xn.set(e,t),hm.set(t,e);class bg extends ki{}W(bg,"MODEL_CLASS_MAPPINGS",wg.map(e=>e[0])),W(bg,"BASE_IF_FAIL",!0);class vg extends ki{}W(vg,"MODEL_CLASS_MAPPINGS",[Ro]);class Pe extends Ft{constructor({logits:e}){super(),this.logits=e}}class Ax extends Ft{constructor({logits:e,embeddings:r}){super(),this.logits=e,this.embeddings=r}}class dt extends Ft{constructor({logits:e}){super(),this.logits=e}}class ct extends Ft{constructor({logits:e}){super(),this.logits=e}}class _t extends Ft{constructor({start_logits:e,end_logits:r}){super(),this.start_logits=e,this.end_logits=r}}class pn extends Ft{constructor({logits:e}){super(),this.logits=e}}class Ox extends Ft{constructor({alphas:e}){super(),this.alphas=e}}class Mx extends Ft{constructor({waveform:e,spectrogram:r}){super(),this.waveform=e,this.spectrogram=r}}if(!(typeof self<"u")){if(!Ve)throw new Error("Unable to load image processing library.")}class zx{put(e){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const $g=Ar.IS_PROCESS_AVAILABLE?t=>process.stdout.write(t):t=>console.log(t);class Rx extends zx{constructor(e,{skip_prompt:r=!1,...n}={}){super(),this.tokenizer=e,this.skip_prompt=r,this.decode_kwargs=n,this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(e){if(e.length>1)throw Error("TextStreamer only supports batch size of 1");const r=e[0];if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}this.token_cache=it(this.token_cache,r);const n=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let a;n.endsWith(`
`)?(a=n.slice(this.print_len),this.token_cache=[],this.print_len=0):n.length>0&&Jf(n.charCodeAt(n.length-1))?(a=n.slice(this.print_len),this.print_len+=a.length):(a=n.slice(this.print_len,n.lastIndexOf(" ")+1),this.print_len+=a.length),this.on_finalized_text(a,!1)}end(){let e;this.token_cache.length>0?(e=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):e="",this.next_tokens_are_prompt=!0,this.on_finalized_text(e,!0)}on_finalized_text(e,r){$g(e),r&&$g(`
`)}}class Px extends Rx{constructor(e,r){super(e,{skip_prompt:!0,skip_special_tokens:!0}),this.cb=r}on_finalized_text(e){this.cb(e)}}class Bx extends mi{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(e,r){return new Array(e.length).fill(this.interrupted)}}const Ei=new Bx;async function Dx(){try{return(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{return!1}}class hn{static async getInstance(e=null){return this.model_id??(this.model_id=await Dx()?"Xenova/Phi-3-mini-4k-instruct_fp16":"Xenova/Phi-3-mini-4k-instruct"),this.tokenizer??(this.tokenizer=um.from_pretrained(this.model_id,{legacy:!0,progress_callback:e})),this.model??(this.model=vg.from_pretrained(this.model_id,{dtype:"q4",device:"webgpu",use_external_data_format:!0,progress_callback:e})),Promise.all([this.tokenizer,this.model])}}W(hn,"model_id",null),W(hn,"model",null),W(hn,"tokenizer",null),W(hn,"streamer",null);async function Nx(t){const[e,r]=await hn.getInstance(),n=e.apply_chat_template(t,{add_generation_prompt:!0,return_dict:!0});let a,s=0;const i=c=>{a??(a=performance.now());let f;s++>0&&(f=s/(performance.now()-a)*1e3),self.postMessage({status:"update",output:c,tps:f,numTokens:s})},o=new Px(e,i);self.postMessage({status:"start"});const l=await r.generate({...n,max_new_tokens:512,streamer:o,stopping_criteria:Ei}),d=e.batch_decode(l,{skip_special_tokens:!1});self.postMessage({status:"complete",output:d})}async function Fx(){self.postMessage({status:"loading",data:"Loading model..."});const[t,e]=await hn.getInstance(n=>{self.postMessage(n)});self.postMessage({status:"loading",data:"Compiling shaders and warming up model..."});const r=t("a");await e.generate({...r,max_new_tokens:1}),self.postMessage({status:"ready"})}self.addEventListener("message",async t=>{const{type:e,data:r}=t.data;switch(e){case"load":Fx();break;case"generate":Ei.reset(),Nx(r);break;case"interrupt":Ei.interrupt();break;case"reset":Ei.reset();break}})})();
